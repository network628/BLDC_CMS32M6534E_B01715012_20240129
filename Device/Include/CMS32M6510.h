/*
 * ARM Limited (ARM) is supplying this software for use with Cortex-M
 * processor based microcontroller, but can be equally used for other
 * suitable processor architectures. This file can be freely distributed.
 * Modifications to this file shall be clearly marked.
 * 
 * THIS SOFTWARE IS PROVIDED "AS IS". NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
 * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
 * @file     CMS32M6510.h
 * @brief    CMSIS HeaderFile
 * @version  1.2
 * @date     23. September 2022
 * @note     Generated by SVDConv V3.3.18 on Friday, 23.09.2022 18:29:21
 *           from File 'Files/SVD/CMS32M6510.svd',
 *           last modified on Friday, 23.09.2022 10:21:24
 */



/** @addtogroup CMS
  * @{
  */


/** @addtogroup CMS32M6510
  * @{
  */


#ifndef CMS32M6510_H
#define CMS32M6510_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup Configuration_of_CMSIS
  * @{
  */



/* =========================================================================================================================== */
/* ================                                Interrupt Number Definition                                ================ */
/* =========================================================================================================================== */

typedef enum {
/* =======================================  ARM Cortex-M0+ Specific Interrupt Numbers  ======================================= */
  Reset_IRQn                = -15,              /*!< -15  Reset Vector, invoked on Power up and warm reset                     */
  NonMaskableInt_IRQn       = -14,              /*!< -14  Non maskable Interrupt, cannot be stopped or preempted               */
  HardFault_IRQn            = -13,              /*!< -13  Hard Fault, all classes of Fault                                     */
  SVCall_IRQn               =  -5,              /*!< -5 System Service Call via SVC instruction                                */
  PendSV_IRQn               =  -2,              /*!< -2 Pendable request for system service                                    */
  SysTick_IRQn              =  -1,              /*!< -1 System Tick Timer                                                      */
/* =========================================  CMS32M6510 Specific Interrupt Numbers  ========================================== */
  LVI_IRQn                  =   0,              /*!< 0  Low Voltage detection interrupt                                        */
  INTP0_IRQn                =   1,              /*!< 1  INTP0 External interrupt request input is valid                        */
  INTP1_IRQn                =   2,              /*!< 2  INTP1 External interrupt request input is valid                        */
  INTP2_IRQn                =   3,              /*!< 3  INTP2 External interrupt request input is valid                        */
  INTP3_IRQn                =   4,              /*!< 4  INTP3 External interrupt request input is valid                        */
  TM01H_IRQn                =   5,              /*!< 5  TM01 channel 1(higher 8 bit) interrupt request                         */
  CCP_IRQn                  =   6,              /*!< 6  Capture/PWM IRQ                                                        */
  EPWM_IRQn                 =   7,              /*!< 7  EPWM IRQ                                                               */
  ADC_IRQn                  =   8,              /*!< 8  ADC IRQ                                                                */
  ACMP_IRQn                 =   9,              /*!< 9  ACMP IRQ                                                               */
  UART0_IRQn                =  10,              /*!< 10 UART0 IRQ                                                              */
  I2C0_IRQn                 =  11,              /*!< 11 I2C IRQ                                                                */
  SSP0_IRQn                 =  12,              /*!< 12 SSP0 IRQ                                                               */
  TIMER0_IRQn               =  13,              /*!< 13 Timer0 IRQ                                                             */
  TIMER1_IRQn               =  14,              /*!< 14 Timer1 IRQ                                                             */
  LSITIMER_IRQn             =  15,              /*!< 15 LSI Timer IRQ                                                          */
  TM00_IRQn                 =  17,              /*!< 17 TM00 channel 0 interrupt request                                       */
  TM01_IRQn                 =  18,              /*!< 18 TM00 channel 1 interrupt request                                       */
  TM02_IRQn                 =  19,              /*!< 19 TM00 channel 2 interrupt request                                       */
  TM03_IRQn                 =  20,              /*!< 20 TM00 channel 3 interrupt request                                       */
  FMC_IRQn                  =  31               /*!< 31 Flash erase or write finish                                            */
} IRQn_Type;



/* =========================================================================================================================== */
/* ================                           Processor and Core Peripheral Section                           ================ */
/* =========================================================================================================================== */

/* ==========================  Configuration of the ARM Cortex-M0+ Processor and Core Peripherals  =========================== */
#define __CM0PLUS_REV                 0x0001U   /*!< CM0PLUS Core Revision                                                     */
#define __NVIC_PRIO_BITS               2        /*!< Number of Bits used for Priority Levels                                   */
#define __Vendor_SysTickConfig         0        /*!< Set to 1 if different SysTick Config is used                              */
#define __VTOR_PRESENT                 1        /*!< Set to 1 if CPU supports Vector Table Offset Register                     */


/** @} */ /* End of group Configuration_of_CMSIS */

#include "core_cm0plus.h"                       /*!< ARM Cortex-M0+ processor and core peripherals                             */
#include "system_CMS32M6510.h"                   /*!< CMS32M6510 System                                                          */

#ifndef __IM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __IM   __I
#endif
#ifndef __OM                                    /*!< Fallback for older CMSIS versions                                         */
  #define __OM   __O
#endif
#ifndef __IOM                                   /*!< Fallback for older CMSIS versions                                         */
  #define __IOM  __IO
#endif


/* ========================================  Start of section using anonymous unions  ======================================== */
#if defined (__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined (__ICCARM__)
  #pragma language=extended
#elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wc11-extensions"
  #pragma clang diagnostic ignored "-Wreserved-id-macro"
  #pragma clang diagnostic ignored "-Wgnu-anonymous-struct"
  #pragma clang diagnostic ignored "-Wnested-anon-types"
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning 586
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#else
  #warning Not supported compiler type
#endif


/* =========================================================================================================================== */
/* ================                              Device Specific Cluster Section                              ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_clusters
  * @{
  */


/**
  * @brief INT_IF [IF] (Interrupt flag register)
  */
typedef struct {
  __IOM uint8_t   IFL;                          /*!< (@ 0x00000000) Interrupt flag register                                    */
  __IM  uint8_t   RESERVED[3];
} INT_IF_Type;                                  /*!< Size = 4 (0x4)                                                            */


/**
  * @brief INT_MK [MK] (Interrupt mask register)
  */
typedef struct {
  __IOM uint8_t   MKL;                          /*!< (@ 0x00000000) Interrupt mask register                                    */
  __IM  uint8_t   RESERVED[3];
} INT_MK_Type;                                  /*!< Size = 4 (0x4)                                                            */


/** @} */ /* End of group Device_Peripheral_clusters */


/* =========================================================================================================================== */
/* ================                            Device Specific Peripheral Section                             ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            CGC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock Generate Control (CGC)
  */

typedef struct {                                /*!< (@ 0x40020400) CGC Structure                                              */
  __IOM uint8_t   RESERVED0;                          /*!< (@ 0x00000000) Clock operaton Mode Control Register                       */
  __IOM uint8_t   CSC;                          /*!< (@ 0x00000001) Clock operation Status Register                            */
  __IM  uint8_t   OSTC;                         /*!< (@ 0x00000002) Oscillation stabilization time counter status              */
  __IOM uint8_t   OSTS;                         /*!< (@ 0x00000003) Oscillation stabilization time select register             */
  __IOM uint8_t   CKC;                          /*!< (@ 0x00000004) System clock control register                              */
  __IOM uint8_t   LOSCSEL;                      /*!< (@ 0x00000005) LOCO Frequency Select register                             */
  __IOM uint8_t   PRCR;                         /*!< (@ 0x00000006) LOSCSEL's Protect register                                 */
  __IOM uint8_t   SUBCKSEL;                     /*!< (@ 0x00000007) SubSystem Clock select register                            */
  __IOM uint16_t  PMUKEY;                       /*!< (@ 0x00000008) Power Manager Key Register                                 */
  __IOM uint8_t   PMCCTL;                       /*!< (@ 0x0000000A) Power Manager Control Register                             */
  __IOM uint8_t   RSTM;                         /*!< (@ 0x0000000B) Reset Mask Control Register                                */
  __IOM uint8_t   WDTCFG0;                      /*!< (@ 0x0000000C) WDT Configeration 0 register                               */
  __IOM uint8_t   WDTCFG1;                      /*!< (@ 0x0000000D) WDT Configeration 1 register                               */
  __IOM uint8_t   WDTCFG2;                      /*!< (@ 0x0000000E) WDT Configeration 2 register                               */
  __IOM uint8_t   WDTCFG3;                      /*!< (@ 0x0000000F) WDT Configeration 3 register                               */
  __IM  uint16_t  RESERVED[8];
  __IOM uint8_t   PER0;                         /*!< (@ 0x00000020) Peripheral enable register 0                               */
  __IM  uint8_t   RESERVED1[2];
  __IOM uint8_t   OSMC;                         /*!< (@ 0x00000023) Subsystem clock supply mode control register               */
  __IM  uint16_t  RESERVED2[502];
  __IOM uint8_t   PER10;                        /*!< (@ 0x00000410) Peripheral enable register 10                              */
  __IOM uint8_t   PER11;                        /*!< (@ 0x00000411) Peripheral enable register 11                              */
  __IOM uint8_t   PER12;                        /*!< (@ 0x00000412) Peripheral enable register 12                              */
  __IOM uint8_t   PER13;                        /*!< (@ 0x00000413) Peripheral enable register 13                              */
  __IM  uint16_t  RESERVED3[2550];
  __IOM uint8_t   RESERVED8;                       /*!< (@ 0x00001800)  */
  __IM  uint8_t   RESERVED4;
  __IM  uint16_t  RESERVED5[15];
  __IOM uint8_t   HOCODIV;                      /*!< (@ 0x00001820) High-speed on-chip oscillator frequency select
                                                                    register                                                   */
  __IM  uint8_t   RESERVED6;
  __IM  uint16_t  RESERVED7;
} CGC_Type;                                     /*!< Size = 6180 (0x1824)                                                      */



/* =========================================================================================================================== */
/* ================                                            RST                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Reset Function (RST)
  */

typedef struct {                                /*!< (@ 0x40020420) RST Structure                                              */
  __IM  uint8_t   RESERVED[32];
  __IM  uint8_t   RESF;                         /*!< (@ 0x00000020) Reset flag register                                        */
} RST_Type;                                     /*!< Size = 33 (0x21)                                                          */



/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Voltage detector (LVD)
  */

typedef struct {                                /*!< (@ 0x40020440) LVD Structure                                              */
  __IM  uint8_t   RESERVED;
  __IOM uint8_t   LVIM;                         /*!< (@ 0x00000001) Voltage detection register                                 */
  __IOM uint8_t   LVIS;                         /*!< (@ 0x00000002) Voltage detection level register                           */
} LVD_Type;                                     /*!< Size = 3 (0x3)                                                            */



/* =========================================================================================================================== */
/* ================                                           PORT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Port functions (PORT)
  */

typedef struct {                                /*!< (@ 0x40040000) PORT Structure                                             */
  __IOM uint8_t   P0;                           /*!< (@ 0x00000000) Port register 0                                            */
  __IOM uint8_t   P1;                           /*!< (@ 0x00000001) Port register 1                                            */
  __IOM uint8_t   P2;                           /*!< (@ 0x00000002) Port register 2                                            */
  __IM  uint8_t   RESERVED[29];
  __IOM uint8_t   PM0;                          /*!< (@ 0x00000020) Port mode register 0                                       */
  __IOM uint8_t   PM1;                          /*!< (@ 0x00000021) Port mode register 1                                       */
  __IOM uint8_t   PM2;                          /*!< (@ 0x00000022) Port mode register 2                                       */
  __IM  uint8_t   RESERVED1[13];
  __IOM uint8_t   PU0;                          /*!< (@ 0x00000030) Pull-up resistor option register 0                         */
  __IOM uint8_t   PU1;                          /*!< (@ 0x00000031) Pull-up resistor option register 1                         */
  __IOM uint8_t   PU2;                          /*!< (@ 0x00000032) Pull-up resistor option register 2                         */
  __IM  uint8_t   RESERVED2[13];
  __IOM uint8_t   PD0;                          /*!< (@ 0x00000040) Pull-down resistor option register 0                       */
  __IOM uint8_t   PD1;                          /*!< (@ 0x00000041) Pull-down resistor option register 1                       */
  __IOM uint8_t   PD2;                          /*!< (@ 0x00000042) Pull-down resistor option register 2                       */
  __IM  uint8_t   RESERVED3[13];
  __IOM uint8_t   POM0;                         /*!< (@ 0x00000050) Port output mode register 0                                */
  __IOM uint8_t   POM1;                         /*!< (@ 0x00000051) Port output mode register 1                                */
  __IOM uint8_t   POM2;                         /*!< (@ 0x00000052) Port output mode register 2                                */
  __IM  uint8_t   RESERVED4[13];
  __IOM uint8_t   PMC0;                         /*!< (@ 0x00000060) Port mode control register 0                               */
  __IOM uint8_t   PMC1;                         /*!< (@ 0x00000061) Port mode control register 1                               */
  __IOM uint8_t   PMC2;                         /*!< (@ 0x00000062) Port mode control register 2                               */
  __IM  uint8_t   RESERVED5[13];
  __IOM uint8_t   PSET0;                        /*!< (@ 0x00000070) Port set register 0                                        */
  __IOM uint8_t   PSET1;                        /*!< (@ 0x00000071) Port set register 1                                        */
  __IOM uint8_t   PSET2;                        /*!< (@ 0x00000072) Port set register 2                                        */
  __IM  uint8_t   RESERVED6[13];
  __IOM uint8_t   PCLR0;                        /*!< (@ 0x00000080) Port clear register 0                                      */
  __IOM uint8_t   PCLR1;                        /*!< (@ 0x00000081) Port clear register 1                                      */
  __IOM uint8_t   PCLR2;                        /*!< (@ 0x00000082) Port clear register 2                                      */
  __IM  uint8_t   RESERVED7[16];
//  __IOM uint8_t   PREAD0;                       /*!< (@ 0x00000090) Port read register 0                                       */
//  __IOM uint8_t   PREAD1;                       /*!< (@ 0x00000091) Port read register 1                                       */
//  __IOM uint8_t   PREAD2;                       /*!< (@ 0x00000092) Port read register 2                                       */
  __IM  uint8_t   RESERVED8[1901];
  __IOM uint8_t   P00CFG;                       /*!< (@ 0x00000800) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED9;
  __IOM uint8_t   P01CFG;                       /*!< (@ 0x00000802) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED10;
  __IOM uint8_t   P02CFG;                       /*!< (@ 0x00000804) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED11;
  __IOM uint8_t   P03CFG;                       /*!< (@ 0x00000806) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED12;
  __IOM uint8_t   P04CFG;                       /*!< (@ 0x00000808) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED13;
  __IOM uint8_t   P05CFG;                       /*!< (@ 0x0000080A) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED14;
  __IOM uint8_t   P06CFG;                       /*!< (@ 0x0000080C) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED15;
  __IOM uint8_t   P07CFG;                       /*!< (@ 0x0000080E) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED16;
  __IOM uint8_t   P10CFG;                       /*!< (@ 0x00000810) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED17;
  __IOM uint8_t   P11CFG;                       /*!< (@ 0x00000812) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED18;
  __IOM uint8_t   P12CFG;                       /*!< (@ 0x00000814) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED19;
  __IOM uint8_t   P13CFG;                       /*!< (@ 0x00000816) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED20;
  __IOM uint8_t   P14CFG;                       /*!< (@ 0x00000818) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED21;
  __IOM uint8_t   P15CFG;                       /*!< (@ 0x0000081A) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED22;
  __IOM uint8_t   P16CFG;                       /*!< (@ 0x0000081C) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED23[3];
  __IOM uint8_t   P20CFG;                       /*!< (@ 0x00000820) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED24;
  __IOM uint8_t   P21CFG;                       /*!< (@ 0x00000822) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED25;
  __IOM uint8_t   P22CFG;                       /*!< (@ 0x00000824) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED26;
  __IOM uint8_t   P23CFG;                       /*!< (@ 0x00000826) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED27;
  __IOM uint8_t   P24CFG;                       /*!< (@ 0x00000828) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED28;
  __IOM uint8_t   P25CFG;                       /*!< (@ 0x0000082A) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED29;
  __IOM uint8_t   P26CFG;                       /*!< (@ 0x0000082C) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED30;
  __IOM uint8_t   P27CFG;                       /*!< (@ 0x0000082E) Alterate Output Function configuration register            */
  __IM  uint8_t   RESERVED31[49];
  __IOM uint8_t   INT0CFG;                      /*!< (@ 0x00000860) INT0 alternate function pin configuration register         */
  __IOM uint8_t   INT1CFG;                      /*!< (@ 0x00000861) INT1 alternate function pin configuration register         */
  __IOM uint8_t   INT2CFG;                      /*!< (@ 0x00000862) INT2 alternate function pin configuration register         */
  __IOM uint8_t   INT3CFG;                      /*!< (@ 0x00000863) INT3 alternate function pin configuration register         */
  __IOM uint8_t   TI00CFG;                      /*!< (@ 0x00000864) TI00 alternate function pin configuration register         */
  __IOM uint8_t   TI01CFG;                      /*!< (@ 0x00000865) TI01 alternate function pin configuration register         */
  __IOM uint8_t   TI02CFG;                      /*!< (@ 0x00000866) TI02 alternate function pin configuration register         */
  __IOM uint8_t   TI03CFG;                      /*!< (@ 0x00000867) TI03 alternate function pin configuration register         */
  __IOM uint8_t   UARTRXDCFG;                   /*!< (@ 0x00000868) UARTRXD alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   EPWMBKINCFG;                  /*!< (@ 0x00000869) EPWMBKIN alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   CCP0AINCFG;                   /*!< (@ 0x0000086A) CCP0AIN alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   CCP0BINCFG;                   /*!< (@ 0x0000086B) CCP0BIN alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   CCP1AINCFG;                   /*!< (@ 0x0000086C) CCP1AIN alternate function pin configuration
                                                                    register                                                   */
  __IOM uint8_t   CCP1BINCFG;                   /*!< (@ 0x0000086D) CCP1BIN alternate function pin configuration
                                                                    register                                                   */
  __IM  uint8_t   RESERVED32[2];
  __IOM uint8_t   P0TTLCFG;                     /*!< (@ 0x00000870) Port 0 TTL input select register                           */
  __IOM uint8_t   RESERVED35;                     /*!< (@ 0x00000871) Port 0 TTL input select register                           */
  __IOM uint8_t   P2TTLCFG;                     /*!< (@ 0x00000872) Port 0 TTL input select register                           */
  __IM  uint8_t   RESERVED33[8];
  __IOM uint8_t   PMS;                          /*!< (@ 0x0000087B) Port mode select register                                  */
  __IM  uint8_t   RESERVED34;
//  __IOM uint8_t   GDIDIS;                       /*!< (@ 0x0000087D) Global digital input disable register                      */
} PORT_Type;                                    /*!< Size = 2174 (0x87e)                                                       */



/* =========================================================================================================================== */
/* ================                                           TM40                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose Timer 4 (TM40)
  */

typedef struct {                                /*!< (@ 0x40041D80) TM40 Structure                                             */
  __IM  uint16_t  TCR00;                        /*!< (@ 0x00000000) Timer count register 00                                    */
  __IM  uint16_t  TCR01;                        /*!< (@ 0x00000002) Timer count register 01                                    */
  __IM  uint16_t  TCR02;                        /*!< (@ 0x00000004) Timer count register 02                                    */
  __IM  uint16_t  TCR03;                        /*!< (@ 0x00000006) Timer count register 03                                    */
  __IM  uint16_t  RESERVED[4];
  __IOM uint16_t  TMR00;                        /*!< (@ 0x00000010) Timer mode register mn                                     */
  __IOM uint16_t  TMR01;                        /*!< (@ 0x00000012) Timer mode register mn                                     */
  __IOM uint16_t  TMR02;                        /*!< (@ 0x00000014) Timer mode register mn                                     */
  __IOM uint16_t  TMR03;                        /*!< (@ 0x00000016) Timer mode register mn                                     */
  __IM  uint16_t  RESERVED1[4];
  __IM  uint16_t  TSR00;                        /*!< (@ 0x00000020) Timer status register mn                                   */
  __IM  uint16_t  TSR01;                        /*!< (@ 0x00000022) Timer status register mn                                   */
  __IM  uint16_t  TSR02;                        /*!< (@ 0x00000024) Timer status register mn                                   */
  __IM  uint16_t  TSR03;                        /*!< (@ 0x00000026) Timer status register mn                                   */
  __IM  uint16_t  RESERVED2[4];
  __IM  uint16_t  TE0;                          /*!< (@ 0x00000030) Timer channel enable status register m                     */
  __IOM uint16_t  TS0;                          /*!< (@ 0x00000032) Timer channel start register 0                             */
  __IOM uint16_t  TT0;                          /*!< (@ 0x00000034) Timer channel stop register 0                              */
  __IOM uint16_t  TPS0;                         /*!< (@ 0x00000036) Timer clock select register 0                              */
  __IOM uint16_t  TO0;                          /*!< (@ 0x00000038) Timer output register 0                                    */
  __IOM uint16_t  TOE0;                         /*!< (@ 0x0000003A) Timer output enable register 0                             */
  __IOM uint16_t  TOL0;                         /*!< (@ 0x0000003C) Timer output level register 0                              */
  __IOM uint16_t  TOM0;                         /*!< (@ 0x0000003E) Timer output mode register 0                               */
  __IM  uint16_t  RESERVED3[172];
  __IOM uint16_t  TDR00;                        /*!< (@ 0x00000198) Timer data register 00                                     */
  
  union {
    __IOM uint16_t TDR01;                       /*!< (@ 0x0000019A) Timer data register 01                                     */
    
    struct {
      __IOM uint8_t TDR01L;                     /*!< (@ 0x0000019A) Timer data lower register 01                               */
      __IOM uint8_t TDR01H;                     /*!< (@ 0x0000019B) Timer data higher register 01                              */
    };
  };
  __IM  uint16_t  RESERVED4[36];
  __IOM uint16_t  TDR02;                        /*!< (@ 0x000001E4) Timer data register 02                                     */
  
  union {
    __IOM uint16_t TDR03;                       /*!< (@ 0x000001E6) Timer data register 03                                     */
    
    struct {
      __IOM uint8_t TDR03L;                     /*!< (@ 0x000001E6) Timer data lower register 03                               */
      __IOM uint8_t TDR03H;                     /*!< (@ 0x000001E7) Timer data higher register 03                              */
    };
  };
} TM40_Type;                                    /*!< Size = 488 (0x1e8)                                                        */



/* =========================================================================================================================== */
/* ================                                           PCBZ                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Clock/Buzzer output controller (PCBZ)
  */

typedef struct {                                /*!< (@ 0x40040FA0) PCBZ Structure                                             */
  __IM  uint8_t   RESERVED[5];
  __IOM uint8_t   CKS0;                         /*!< (@ 0x00000005) Clock output select registers 0                            */
  __IOM uint8_t   CKS1;                         /*!< (@ 0x00000006) Clock output select registers 1                            */
} PCBZ_Type;                                    /*!< Size = 7 (0x7)                                                            */



/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Watchdog Timer with window (WDT)
  */

typedef struct {                                /*!< (@ 0x40020404) WDT Structure                                              */
  __IM  uint8_t   RESERVED;
  __IOM uint8_t   LOCKCTL;                      /*!< (@ 0x00000001) Lockup Watchdog timer enable register                      */
  __IOM uint8_t   PRCR;                         /*!< (@ 0x00000002) Lockup Watchdog timer enable protect register              */
  __IM  uint8_t   RESERVED1[3066];
  __IOM uint8_t   WDTE;                         /*!< (@ 0x00000BFD) Watchdog timer enable register                             */
} WDT_Type;                                     /*!< Size = 3070 (0xbfe)                                                       */



/* =========================================================================================================================== */
/* ================                                          TIMER0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief TIMER0 Decription (TIMER0)
  */

typedef struct {                                /*!< (@ 0x40061000) TIMER0 Structure                                           */
  __IOM uint32_t  CON;                          /*!< (@ 0x00000000) CON Description                                            */
  __IOM uint32_t  LOAD;                         /*!< (@ 0x00000004) LOAD Description                                           */
  __IM  uint32_t  VAL;                          /*!< (@ 0x00000008) VAL Description                                            */
  __IM  uint32_t  RIS;                          /*!< (@ 0x0000000C) RIS Description                                            */
  __IM  uint32_t  MIS;                          /*!< (@ 0x00000010) MIS Description                                            */
  __OM  uint32_t  ICLR;                         /*!< (@ 0x00000014) ICLR Description                                           */
  __IOM uint32_t  BGLOAD;                       /*!< (@ 0x00000018) BGLOAD Description                                         */
} TIMER0_Type,TMR_T;                                  /*!< Size = 28 (0x1c)                                                          */



/* =========================================================================================================================== */
/* ================                                         LSITIMER                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief LSI Timer (LSITIMER)
  */

typedef struct {                                /*!< (@ 0x40044B50) LSITIMER Structure                                         */
  __IOM uint16_t  CON0;                         /*!< (@ 0x00000000) Control Register 0                                         */
} LSITIMER_Type;                                /*!< Size = 2 (0x2)                                                            */



/* =========================================================================================================================== */
/* ================                                           EPWM                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief EPWM Decription (EPWM)
  */

typedef struct {                                /*!< (@ 0x40064200) EPWM Structure                                             */
  __IOM uint32_t  CLKPSC;                       /*!< (@ 0x00000000) CLKPSC Description                                         */
  __IOM uint32_t  CLKDIV;                       /*!< (@ 0x00000004) CLKDIV Description                                         */
  __IOM uint32_t  CON;                          /*!< (@ 0x00000008) CON Description                                            */
  __IOM uint32_t  CON2;                         /*!< (@ 0x0000000C) CON2 Description                                           */
  __IOM uint32_t  CON3;                         /*!< (@ 0x00000010) CON3 Description                                           */
  __IOM uint32_t  PERIOD[6];                      /*!< (@ 0x00000014) PERIOD0 Description                                        */
//  __IOM uint32_t  PERIOD1;                      /*!< (@ 0x00000018) PERIOD1 Description                                        */
//  __IOM uint32_t  PERIOD2;                      /*!< (@ 0x0000001C) PERIOD2 Description                                        */
//  __IOM uint32_t  PERIOD3;                      /*!< (@ 0x00000020) PERIOD3 Description                                        */
//  __IOM uint32_t  PERIOD4;                      /*!< (@ 0x00000024) PERIOD4 Description                                        */
//  __IOM uint32_t  PERIOD5;                      /*!< (@ 0x00000028) PERIOD5 Description                                        */
  __IOM uint32_t  CMPDAT[6];                      /*!< (@ 0x0000002C) CMPDAT0 Description                                        */
//  __IOM uint32_t  CMPDAT1;                      /*!< (@ 0x00000030) CMPDAT1 Description                                        */
//  __IOM uint32_t  CMPDAT2;                      /*!< (@ 0x00000034) CMPDAT2 Description                                        */
//  __IOM uint32_t  CMPDAT3;                      /*!< (@ 0x00000038) CMPDAT3 Description                                        */
//  __IOM uint32_t  CMPDAT4;                      /*!< (@ 0x0000003C) CMPDAT4 Description                                        */
//  __IOM uint32_t  CMPDAT5;                      /*!< (@ 0x00000040) CMPDAT5 Description                                        */
  __IOM uint32_t  POREMAP;                      /*!< (@ 0x00000044) POREMAP Description                                        */
  __IOM uint32_t  POEN;                         /*!< (@ 0x00000048) POEN Description                                           */
  __IOM uint32_t  BRKCTL;                       /*!< (@ 0x0000004C) BRKCTL Description                                         */
  __IOM uint32_t  DTCTL;                        /*!< (@ 0x00000050) DTCTL Description                                          */
  __IOM uint32_t  MASK;                         /*!< (@ 0x00000054) MASK Description                                           */
  __IOM uint32_t  MASKNXT;                      /*!< (@ 0x00000058) MASKNXT Description                                        */
  __IOM uint32_t  CMPTGD[2];                      /*!< (@ 0x0000005C) CMPTGD0 Description                                        */
//  __IOM uint32_t  CMPTGD1;                      /*!< (@ 0x00000060) CMPTGD1 Description                                        */
  __IOM uint32_t  IMSC;                         /*!< (@ 0x00000064) IMSC Description                                           */
  __IM  uint32_t  RIS;                          /*!< (@ 0x00000068) RIS Description                                            */
  __IM  uint32_t  MIS;                          /*!< (@ 0x0000006C) MIS Description                                            */
  __OM  uint32_t  ICLR;                         /*!< (@ 0x00000070) ICLR Description                                           */
  __IOM uint32_t  IFA;                          /*!< (@ 0x00000074) IFA Description                                            */
  __IOM uint32_t  LOCK;                         /*!< (@ 0x00000078) LOCK Description                                           */
	__IOM uint32_t  BRKRDT;                       /*!< (@ 0x0000007C) LOCK Description                                           */	
} EPWM_Type;                                    /*!< Size = 124 (0x7c)                                                         */



/* =========================================================================================================================== */
/* ================                                            CCP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief CCP Decription (CCP)
  */

typedef struct {                                /*!< (@ 0x40064280) CCP Structure                                              */
  __IOM uint32_t  CON0;                      /*!< (@ 0x00000000) CCPCON0 Description                                        */
  __IOM uint32_t  LOAD0;                     /*!< (@ 0x00000004) CCPLOAD0 Description                                       */
  __IOM uint32_t  D0A;                       /*!< (@ 0x00000008) CCPD0A Description                                         */
  __IOM uint32_t  D0B;                       /*!< (@ 0x0000000C) CCPD0B Description                                         */
  __IOM uint32_t  CON1;                      /*!< (@ 0x00000010) CCPCON1 Description                                        */
  __IOM uint32_t  LOAD1;                     /*!< (@ 0x00000014) CCPLOAD1 Description                                       */
  __IOM uint32_t  D1A;                       /*!< (@ 0x00000018) CCPD1A Description                                         */
  __IOM uint32_t  D1B;                       /*!< (@ 0x0000001C) CCPD1B Description                                         */
  __IM  uint32_t  RESERVED[8];
  __IOM uint32_t  IMSC;                      /*!< (@ 0x00000040) CCPIMSC Description                                        */
  __IM  uint32_t  RIS;                       /*!< (@ 0x00000044) CCPRIS Description                                         */
  __IM  uint32_t  MIS;                       /*!< (@ 0x00000048) CCPMIS Description                                         */
  __OM  uint32_t  ICLR;                      /*!< (@ 0x0000004C) CCPICLR Description                                        */
  __IOM uint32_t  RUN;                       /*!< (@ 0x00000050) CCPRUN Description                                         */
  __IOM uint32_t  LOCK;                      /*!< (@ 0x00000054) CCPLOCK Description                                        */
  __IOM uint32_t  CAPCON;                       /*!< (@ 0x00000058) CAPCON Description                                         */
  __IOM uint32_t  CAPCHS;                       /*!< (@ 0x0000005C) CAPCHS Description                                         */
  __IOM uint32_t  CAP0DAT0;                     /*!< (@ 0x00000060) CAP0DAT0 Description                                       */
  __IOM uint32_t  CAP1DAT0;                     /*!< (@ 0x00000064) CAP1DAT0 Description                                       */
  __IOM uint32_t  CAP2DAT0;                     /*!< (@ 0x00000068) CAP2DAT0 Description                                       */
  __IOM uint32_t  CAP3DAT0;                     /*!< (@ 0x0000006C) CAP3DAT0 Description                                       */
} CCP_Type;                                     /*!< Size = 112 (0x70)                                                         */



/* =========================================================================================================================== */
/* ================                                           UART0                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief UART0 Decription (UART0)
  */

typedef struct {                                /*!< (@ 0x40064000) UART0 Structure                                            */
  __IM  uint32_t  RBR;                          /*!< (@ 0x00000000) UART0RBR Description                                       */
  __OM  uint32_t  THR;                          /*!< (@ 0x00000004) UART0THR Description                                       */
  __IOM uint32_t  DLR;                          /*!< (@ 0x00000008) UART0DLR Description                                       */
  __IOM uint32_t  IER;                          /*!< (@ 0x0000000C) UART0IER Description                                       */
  __IM  uint32_t  IIR;                          /*!< (@ 0x00000010) UART0IIR Description                                       */
  __OM  uint32_t  RESERVED0;                          /*!< (@ 0x00000014) UART0FCR Description                                       */
  __IOM uint32_t  LCR;                          /*!< (@ 0x00000018) UART0LCR Description                                       */
  __IOM uint32_t  MCR;                          /*!< (@ 0x0000001C) UART0MCR Description                                       */
  __IM  uint32_t  LSR;                          /*!< (@ 0x00000020) UART0LSR Description                                       */
  __IM  uint32_t  RESERVED[3];                          /*!< (@ 0x00000024) UART0MSR Description                                       */
  __IOM uint32_t  END;                         /*!< (@ 0x00000030) UART0 END Description                                      */
  __IM uint32_t   RESERVED1[3];                           /*!< (@ 0x0000003C) UART LOCK Description                                     */
} UART0_Type, UART_T;                                   /*!< Size = 64 (0x40)                                                          */
/* =========================================================================================================================== */
/* ================                                           I2C0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief I2C0 Decription (I2C0)
  */

typedef struct {                                /*!< (@ 0x40064300) I2C0 Structure                                             */
  __IOM uint32_t  CONSET;                    /*!< (@ 0x00000000) I2CCONSET Description                                      */
  __OM  uint32_t  CONCLR;                    /*!< (@ 0x00000004) I2CCONCLR Description                                      */
  __IM  uint32_t  STAT;                      /*!< (@ 0x00000008) I2CSTAT Description                                        */
  __IOM uint32_t  DAT;                       /*!< (@ 0x0000000C) I2CDAT Description                                         */
  __IOM uint32_t  CLK;                       /*!< (@ 0x00000010) I2CCLK Description                                         */
  __IOM uint32_t  ADR0;                      /*!< (@ 0x00000014) I2CADR0 Description                                        */
  __IOM uint32_t  ADM0;                      /*!< (@ 0x00000018) I2CADM0 Description                                        */
  __IOM uint32_t  XADR0;                     /*!< (@ 0x0000001C) I2CXADR0 Description                                       */
  __IOM uint32_t  XADM0;                     /*!< (@ 0x00000020) I2CXADM0 Description                                       */
  __OM  uint32_t  I2CRST;                       /*!< (@ 0x00000024) I2CRST Description                                         */
  __IOM uint32_t  ADR1;                      /*!< (@ 0x00000028) I2CADR1 Description                                        */
  __IOM uint32_t  ADM1;                      /*!< (@ 0x0000002C) I2CADM1 Description                                        */
  __IOM uint32_t  ADR2;                      /*!< (@ 0x00000030) I2CADR2 Description                                        */
  __IOM uint32_t  ADM2;                      /*!< (@ 0x00000034) I2CADM2 Description                                        */
  __IOM uint32_t  ADR3;                      /*!< (@ 0x00000038) I2CADR3 Description                                        */
  __IOM uint32_t  ADM3;                      /*!< (@ 0x0000003C) I2CADM3 Description                                        */
} I2C0_Type,I2C_T;                                    /*!< Size = 64 (0x40)                                                          */



/* =========================================================================================================================== */
/* ================                                           SSP0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief SSP0 Decription (SSP0)
  */

typedef struct {                                /*!< (@ 0x40063000) SSP0 Structure                                             */
  __IOM uint32_t  CON;                       /*!< (@ 0x00000000) SSPCON Description                                         */
  __IM  uint32_t  STAT;                      /*!< (@ 0x00000004) SSPSTAT Description                                        */
  __IOM uint32_t  DAT;                       /*!< (@ 0x00000008) SSPDAT Description                                         */
  __IOM uint32_t  CLK;                       /*!< (@ 0x0000000C) SSPCLK Description                                         */
  __IOM uint32_t  IMSC;                      /*!< (@ 0x00000010) SSPIMSC Description                                        */
  __IM  uint32_t  RIS;                       /*!< (@ 0x00000014) SSPRIS Description                                         */
  __IM  uint32_t  MIS;                       /*!< (@ 0x00000018) SSPMIS Description                                         */
  __OM  uint32_t  ICLR;                      /*!< (@ 0x0000001C) SSPICLR Description                                        */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  CSCR;                      /*!< (@ 0x00000028) SSPCSCR Description                                        */
} SSP0_Type;                                    /*!< Size = 44 (0x2c)                                                          */



/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief ADC Decription (ADC)
  */
                                                    
typedef struct {                                /*!< (@ 0x40068000) ADC Structure                                              */
  __IOM uint32_t  CON;                       /*!< (@ 0x00000000) ADCCON Description                                         */
  __IOM uint32_t  CON2;                      /*!< (@ 0x00000004) ADCCON2 Description                                        */
  __IOM uint32_t  HWTG;                      /*!< (@ 0x00000008) ADCHWTG Description                                        */
  __IOM uint32_t  PWMTGDLY;                  /*!< (@ 0x0000000C) ADCPWMTGDLY Description                                    */
  __IOM uint32_t  SCAN;                      /*!< (@ 0x00000010) ADCSCAN Description                                        */
  __IOM uint32_t  CMP0;                      /*!< (@ 0x00000014) ADCCMP0 Description                                        */
  __IOM uint32_t  CMP1;                      /*!< (@ 0x00000018) ADCCMP0 Description                                        */
  __IOM uint32_t  IMSC;                      /*!< (@ 0x0000001C) ADCIMSC Description                                        */
  __IM  uint32_t  RIS;                       /*!< (@ 0x00000020) ADCRIS Description                                         */
  __IM  uint32_t  MIS;                       /*!< (@ 0x00000024) ADCMIS Description                                         */
  __OM  uint32_t  ICLR;                      /*!< (@ 0x00000028) ADCICLR Description                                        */
  __IOM uint32_t  LOCK;                      /*!< (@ 0x0000002C) ADCLOCK Description                                        */
  __IOM uint32_t  CHEPWM;                    /*!< (@ 0x00000030) ADCCHEPWM Description                                      */
  __IOM uint32_t  CHPTG0;                    /*!< (@ 0x00000034) ADCCHPTG0 Description                                      */
  __IOM uint32_t  CHPTG1;                    /*!< (@ 0x00000038) ADCCHPTG1 Description                                      */
	__IM  uint32_t  RESERVED[3];
  __IOM uint32_t  TEST;                      /*!< (@ 0x00000048) ADCCHPTG1 Description                                      */
  __IM  uint32_t  RESERVED1[13];
//  __IM  uint32_t  DATA0;                     /*!< (@ 0x00000080) ADCDATA0 Description                                       */
//  __IM  uint32_t  DATA1;                     /*!< (@ 0x00000084) ADCDATA1 Description                                       */
//  __IM  uint32_t  DATA2;                     /*!< (@ 0x00000088) ADCDATA2 Description                                       */
//  __IM  uint32_t  DATA3;                     /*!< (@ 0x0000008C) ADCDATA3 Description                                       */
// __IM  uint32_t  DATA4;                     /*!< (@ 0x00000090) ADCDATA4 Description                                       */
//  __IM  uint32_t  DATA5;                     /*!< (@ 0x00000094) ADCDATA5 Description                                       */
//  __IM  uint32_t  DATA6;                     /*!< (@ 0x00000098) ADCDATA6 Description                                       */
//  __IM  uint32_t  DATA7;                     /*!< (@ 0x0000009C) ADCDATA7 Description                                       */
//  __IM  uint32_t  DATA8;                     /*!< (@ 0x000000A0) ADCDATA8 Description                                       */
//  __IM  uint32_t  DATA9;                     /*!< (@ 0x000000A4) ADCDATA9 Description                                       */
//  __IM  uint32_t  DATA10;                    /*!< (@ 0x000000A8) ADCDATA10 Description                                      */
//  __IM  uint32_t  DATA11;                    /*!< (@ 0x000000AC) ADCDATA11 Description                                      */
//  __IM  uint32_t  DATA12;                    /*!< (@ 0x000000B0) ADCDATA12 Description                                      */
//  __IM  uint32_t  DATA13;                    /*!< (@ 0x000000B4) ADCDATA13 Description                                      */
//  __IM  uint32_t  DATA14;                    /*!< (@ 0x000000B8) ADCDATA14 Description                                      */
//  __IM  uint32_t  DATA15;                    /*!< (@ 0x000000BC) ADCDATA15 Description                                      */
//  __IM  uint32_t  DATA16;                    /*!< (@ 0x000000C0) ADCDATA16 Description                                      */
//  __IM  uint32_t  DATA17;                    /*!< (@ 0x000000C4) ADCDATA17 Description                                      */
//  __IM  uint32_t  DATA18;                    /*!< (@ 0x000000C8) ADCDATA18 Description                                      */
//  __IM  uint32_t  DATA19;                    /*!< (@ 0x000000CC) ADCDATA19 Description                                      */
//  __IM  uint32_t  DATA20;                    /*!< (@ 0x000000D0) ADCDATA20 Description                                      */
//  __IM  uint32_t  DATA21;                    /*!< (@ 0x000000D4) ADCDATA21 Description                                      */
//  __IM  uint32_t  DATA22;                    /*!< (@ 0x000000D8) ADCDATA22 Description                                      */
  __IM  uint32_t  DATA[24];                    /*!< (@ 0x000000DC) ADCDATA23 Description                                      */
} ADC_Type;        

/* =========================================================================================================================== */
/* ================                                          ADCLDO                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief ADCLDO (ADCLDO)
  */

typedef struct {                                /*!< (@ 0x40068340) ADCLDO Structure                                           */
  __IOM uint32_t  CON0;                         /*!< (@ 0x00000000) CON0 Description                                           */
  __IM  uint32_t  RESERVED[2];
  __IOM uint32_t  LOCK;                         /*!< (@ 0x0000000C) LOCK Description                                           */
} ADCLDO_Type;                                  /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                          DIVSQRT                                          ================ */
/* =========================================================================================================================== */


/**
  * @brief DIVSQRT (DIVSQRT)
  */

typedef struct {                                /*!< (@ 0x40064380) DIVSQRT Structure                                          */
  __IOM uint32_t  CON;                          /*!< (@ 0x00000000) CON0 Description                                           */
  __IOM uint32_t  ALUA;                         /*!< (@ 0x00000004) ALUA Description                                           */
  __IOM uint32_t  ALUB;                         /*!< (@ 0x00000008) ALUB Description                                           */
  __IOM uint32_t  RES0;                         /*!< (@ 0x0000000C) RES0 Description                                           */
  __IOM uint32_t  RES1;                         /*!< (@ 0x00000010) RES1 Description                                           */
} DIVSQRT_Type;                                 /*!< Size = 20 (0x14)                                                          */

/* =========================================================================================================================== */
/* ================                                            DAC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DAC (DAC)
  */

typedef struct {                                /*!< (@ 0x40068360) DAC Structure                                              */
  __IOM uint32_t  CON0;                         /*!< (@ 0x00000000) CON Description                                            */
  __IOM uint32_t  LOCK;                         /*!< (@ 0x00000004) LOCK Description                                           */
} DAC_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                           PGA0                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief PGA0 (PGA0)
  */

typedef struct {                                /*!< (@ 0x40068300) PGA0 Structure                                             */
  __IOM uint32_t  PGA0CON0;                     /*!< (@ 0x00000000) CON0 Description                                           */
  __IOM uint32_t  PGA0CON1;                     /*!< (@ 0x00000004) CON1 Description                                           */
  __IOM uint32_t  PGA0LOCK;                     /*!< (@ 0x00000008) LOCK Description                                           */
} PGA0_Type;                                    /*!< Size = 12 (0xc)                                                           */



/* =========================================================================================================================== */
/* ================                                           PGA12                                           ================ */
/* =========================================================================================================================== */


/**
  * @brief PGA12 (PGA12)
  */

typedef struct {                                /*!< (@ 0x40068320) PGA12 Structure                                            */
  __IOM uint32_t  PGA1CON0;                     /*!< (@ 0x00000000) PGA1CON0 Description                                       */
  __IOM uint32_t  PGA2CON0;                     /*!< (@ 0x00000004) PGA2CON0 Description                                       */
  __IOM uint32_t  PGA12CON;                     /*!< (@ 0x00000008) PGA12CON Description                                       */
  __IOM uint32_t  PGA12LOCK;                    /*!< (@ 0x0000000C) LOCK Description                                           */
} PGA12_Type;                                   /*!< Size = 16 (0x10)                                                          */



/* =========================================================================================================================== */
/* ================                                           ACMP                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief ACMP Decription (ACMP)
  */

typedef struct {                                /*!< (@ 0x40068200) ACMP Structure                                             */
  __IOM uint32_t  C0CON0;                       /*!< (@ 0x00000000) C0CON0 Description                                         */
  __IOM uint32_t  C0CON1;                       /*!< (@ 0x00000004) C0CON1 Description                                         */
  __IOM uint32_t  C1CON0;                       /*!< (@ 0x00000008) C1CON0 Description                                         */
  __IOM uint32_t  C1CON1;                       /*!< (@ 0x0000000C) C1CON1 Description                                         */
  __IOM uint32_t  CEVCON;                       /*!< (@ 0x00000010) CVECON Description                                         */
  __IOM uint32_t  IMSC;                         /*!< (@ 0x00000014) IMSC Description                                           */
  __IM  uint32_t  RIS;                          /*!< (@ 0x00000018) RIS Description                                            */
  __IM  uint32_t  MIS;                          /*!< (@ 0x0000001C) MIS Description                                            */
  __OM  uint32_t  ICLR;                         /*!< (@ 0x00000020) ICLR Description                                           */
  __IOM uint32_t  LOCK;                         /*!< (@ 0x00000024) LOCK Description                                           */
} ACMP_Type,ACMP_T;                                    /*!< Size = 60 (0x3c)                                                          */



/* =========================================================================================================================== */
/* ================                                            INT                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Interrupt Controller (INT)
  */

typedef struct {                                /*!< (@ 0x40006000) INT Structure                                              */
  __IOM INT_IF_Type IF[32];                     /*!< (@ 0x00000000) Interrupt flag register                                    */
  __IM  uint8_t   RESERVED[128];
  __IOM INT_MK_Type MK[32];                     /*!< (@ 0x00000100) Interrupt mask register                                    */
} INT_Type;                                     /*!< Size = 384 (0x180)                                                        */



/* =========================================================================================================================== */
/* ================                                           INTM                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Pin input edge detection (INTM)
  */

typedef struct {                                /*!< (@ 0x40045B38) INTM Structure                                             */
  __IOM uint8_t   EGP0;                         /*!< (@ 0x00000000) External interrupt rising edge enable register             */
  __IOM uint8_t   EGN0;                         /*!< (@ 0x00000001) External interrupt falling edge enable register            */
} INTM_Type;                                    /*!< Size = 2 (0x2)                                                            */



/* =========================================================================================================================== */
/* ================                                           MISC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Miscellaneous function (MISC)
  */

typedef struct {                                /*!< (@ 0x40040470) MISC Structure                                             */
//  __IOM uint8_t   NFEN0;                        /*!< (@ 0x00000000) Noise filter enable register 0                             */
	__IM  uint8_t   RESERVED1[1]; 
	__IOM uint8_t   NFEN1;                        /*!< (@ 0x00000001) Noise filter enable register 1                             */
//  __IOM uint8_t   NFEN2;                        /*!< (@ 0x00000002) Noise filter enable register 2                             */
	__IM  uint8_t   RESERVED2[1]; 
	__IOM uint8_t   ISC;                          /*!< (@ 0x00000003) Input switch control register                              */
  __IOM uint8_t   TIOS0;                        /*!< (@ 0x00000004) Timer I/O select register 0                                */
//  __IOM uint8_t   TIOS1;                        /*!< (@ 0x00000005) Timer I/O select register 1                                */
//  __IM  uint8_t   RESERVED[6];
//  __IOM uint8_t   RTCCL;                        /*!< (@ 0x0000000C) Real-time clock select register                            */
} MISC_Type;                                    /*!< Size = 13 (0xd)                                                           */



/* =========================================================================================================================== */
/* ================                                            FMC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Flash Memory Controller (FMC)
  */

typedef struct {                                /*!< (@ 0x40020000) FMC Structure                                              */
  __IOM uint32_t  FLSTS;                        /*!< (@ 0x00000000) Flash status register                                      */
  __IOM uint32_t  FLOPMD1;                      /*!< (@ 0x00000004) Flash operation mode register 1                            */
  __IOM uint32_t  FLOPMD2;                      /*!< (@ 0x00000008) Flash operation mode register 2                            */
  __IOM uint32_t  FLERMD;                       /*!< (@ 0x0000000C) Flash erase mode register                                  */
  __IOM uint32_t  FLCERCNT;                     /*!< (@ 0x00000010) Flash chip erase control register                          */
  __IOM uint32_t  FLSERCNT;                     /*!< (@ 0x00000014) Flash sector erase control register                        */
//  __IOM uint32_t  FLNVSCNT;                     /*!< (@ 0x00000018) Flash address setup time (Tnvs) control register           */
  __IM  uint32_t  RESERVED1[1];
	__IOM uint32_t  FLPROCNT;                     /*!< (@ 0x0000001C) Flash program control register                             */
  __IOM uint32_t  FLPROT;                       /*!< (@ 0x00000020) Flash protect control register                             */
//  __IM  uint32_t  RESERVED[5];
//  __IOM uint32_t  FLPRVCNT;                     /*!< (@ 0x00000038) Flash program recovery time (Trcv) control register        */
//  __IOM uint32_t  FLERVCNT;                     /*!< (@ 0x0000003C) Flash erase recovery time (Trcv) control register          */
} FMC_Type;                                     /*!< Size = 64 (0x40)                                                          */

typedef struct {                                /*!< (@ 0x40021810) FMC Structure                                              */
  __IOM uint8_t   CRC0CTL;                        /*!< (@ 0x00000000) Flash CRC control                                      */
  __IM  uint8_t   RESERVED1;
	__IOM uint16_t  PGCRCL;                        /*!< (@ 0x00000002) Flash CRC result                          */
} FMCRC_Type; 

/* =========================================================================================================================== */
/* ================                                            SAF                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Flash memory CRC operation function (High-Speed CRC) (SAF)
  */

typedef struct {                                /*!< (@ 0x40020100) SAF Structure                                              */
  __IM  uint16_t  RESERVED[402];
  __IM  uint8_t   RESERVED1;
  __IOM uint8_t   RPECTL;                       /*!< (@ 0x00000325) RAM parity error control register                          */
  __IM  uint16_t  RESERVED2[2549];
  __IOM uint8_t   CRC0CTL;                      /*!< (@ 0x00001710) Flash memory CRC control register                          */
  __IM  uint8_t   RESERVED3;
  __IOM uint16_t  PGCRCL;                       /*!< (@ 0x00001712) Flash memory CRC operation result register                 */
  __IM  uint16_t  RESERVED4[63026];
  __IOM uint16_t  SFRGD;                        /*!< (@ 0x00020378) SFR guard control register                                 */
  __IM  uint16_t  RESERVED5[5952];
  __IOM uint16_t  CRCD;                         /*!< (@ 0x000231FA) CRC data register                                          */
  __IM  uint16_t  RESERVED6[88];
  __IOM uint8_t   CRCIN;                        /*!< (@ 0x000232AC) CRC input register                                         */
  __IM  uint8_t   RESERVED7;
  __IM  uint16_t  RESERVED8;
} SAF_Type;                                     /*!< Size = 144048 (0x232b0)                                                   */



/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief General Purpose CRC (CRC)
  */

typedef struct {                                /*!< (@ 0x400433AC) CRC Structure                                              */
  __IOM uint8_t   CRCIN;                        /*!< (@ 0x00000000) CRC input register                                         */ 
	__IM  uint8_t   RESERVED1[77];
	__IOM uint16_t  CRCD;                         /*!< (@ 0x0000004E) CRC data register                                          */
} CRC_Type;                                     /*!< Size = 192 (0xc0)                                                         */



/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief DBG Controller (DBG)
  */

typedef struct {                                /*!< (@ 0x4001B000) DBG Structure                                              */
  __IM  uint32_t  DBGSTR;                       /*!< (@ 0x00000000) Debug status register                                      */
  __IOM uint32_t  DBGSTOPCR;                    /*!< (@ 0x00000004) Debug Stop Control register                                */
} DBG_Type;                                     /*!< Size = 8 (0x8)                                                            */



/* =========================================================================================================================== */
/* ================                                            BGR                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Temperature Sensor calibration data (BGR)
  */

//typedef struct {                                /*!< (@ 0x00500660) BGR Structure                                              */
//  __IM  uint16_t  VBG85;                        /*!< (@ 0x00000000) The A/D conversion value of VBGR at 85 degrees
//                                                                    and 3.0V reference voltage                                 */
//  __IM  uint16_t  RESERVED;
//  __IM  uint16_t  VBG25;                        /*!< (@ 0x00000004) The A/D conversion value of VBGR at 25 degrees
//                                                                    and 3.0V reference voltage                                 */
//} BGR_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                            TSN                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief Temperature Sensor calibration data (TSN)
  */

typedef struct {                                /*!< (@ 0x00500668) TSN Structure                                              */
  __IM  int16_t   TSN85;                        /*!< (@ 0x00000000) The A/D conversion value of Temperature Sensor
                                                                    at 85 degrees and 3.0V reference voltage                   */
  __IM  uint16_t  RESERVED;
  __IM  int16_t   TSN25;                        /*!< (@ 0x00000004) The A/D conversion value of Temperature Sensor
                                                                    at 25 degrees and 3.0V reference voltage                   */
} TSN_Type;                                     /*!< Size = 6 (0x6)                                                            */



/* =========================================================================================================================== */
/* ================                                            UID                                            ================ */
/* =========================================================================================================================== */


/**
  * @brief 128-bit Unique ID (UID)
  */

typedef struct {                                /*!< (@ 0x00500894) UID Structure                                              */
  __IM  uint32_t  UID0;                         /*!< (@ 0x00000000) UID word 0                                                 */
  __IM  uint32_t  UID1;                         /*!< (@ 0x00000004) UID word 1                                                 */
  __IM  uint32_t  UID2;                         /*!< (@ 0x00000008) UID word 2                                                 */
  __IM  uint32_t  UID3;                         /*!< (@ 0x0000000C) UID word 3                                                 */
} UID_Type;                                     /*!< Size = 16 (0x10)                                                          */


/** @} */ /* End of group Device_Peripheral_peripherals */


/* =========================================================================================================================== */
/* ================                          Device Specific Peripheral Address Map                           ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_peripheralAddr
  * @{
  */

#define CGC_BASE                    0x40020400UL
#define RST_BASE                    0x40020420UL
#define LVD_BASE                    0x40020440UL
#define PORT_BASE                   0x40040000UL
#define TM40_BASE                   0x40041D80UL
#define PCBZ_BASE                   0x40040FA0UL
#define WDT_BASE                    0x40020404UL
#define TIMER0_BASE                 0x40061000UL
#define TIMER1_BASE                 0x40061100UL
#define LSITIMER_BASE               0x40044B50UL
#define EPWM_BASE                   0x40064200UL
#define CCP_BASE                    0x40064280UL
#define UART0_BASE                  0x40064000UL
#define I2C0_BASE                   0x40064300UL
#define SSP0_BASE                   0x40063000UL
#define ADC_BASE                    0x40068000UL
#define ADCLDO_BASE                 0x40068340UL
#define DIVSQRT_BASE                0x40064380UL
#define DAC_BASE                    0x40068360UL
#define PGA0_BASE                   0x40068300UL
#define PGA12_BASE                  0x40068320UL
#define ACMP_BASE                   0x40068200UL
#define INT_BASE                    0x40006000UL
#define INTM_BASE                   0x40045B38UL
#define MISC_BASE                   0x40040470UL
#define FMC_BASE                    0x40020000UL
#define FMCRC_BASE                  0x40021810UL
#define SAF_BASE                    0x40020100UL
#define CRC_BASE                    0x400433ACUL
#define DBG_BASE                    0x4001B000UL
#define BGR_BASE                    0x00500660UL
#define TSN_BASE                    0x00500668UL
#define UID_BASE                    0x00500894UL

/** @} */ /* End of group Device_Peripheral_peripheralAddr */


/* =========================================================================================================================== */
/* ================                                  Peripheral declaration                                   ================ */
/* =========================================================================================================================== */


/** @addtogroup Device_Peripheral_declaration
  * @{
  */

#define CGC                         ((CGC_Type*)               CGC_BASE)
#define RST                         ((RST_Type*)               RST_BASE)
#define LVD                         ((LVD_Type*)               LVD_BASE)
#define PORT                        ((PORT_Type*)              PORT_BASE)
#define TM40                        ((TM40_Type*)              TM40_BASE)
#define PCBZ                        ((PCBZ_Type*)              PCBZ_BASE)
#define WDT                         ((WDT_Type*)               WDT_BASE)
#define TMR0                      ((TIMER0_Type*)            TIMER0_BASE)
#define TMR1                      ((TIMER0_Type*)            TIMER1_BASE)
#define LSITIMER                    ((LSITIMER_Type*)          LSITIMER_BASE)
#define EPWM                        ((EPWM_Type*)              EPWM_BASE)
#define CCP                         ((CCP_Type*)               CCP_BASE)
#define UART0                       ((UART_T*)             	   UART0_BASE)
#define I2C                        ((I2C0_Type*)              I2C0_BASE)
#define SSP                        ((SSP0_Type*)              SSP0_BASE)
#define ADC                         ((ADC_Type*)               ADC_BASE)
#define ADCLDO                      ((ADCLDO_Type*)            ADCLDO_BASE)
#define DIVSQRT                     ((DIVSQRT_Type*)           DIVSQRT_BASE)
#define DAC                         ((DAC_Type*)               DAC_BASE)
#define PGA0                        ((PGA0_Type*)              PGA0_BASE)
#define PGA12                       ((PGA12_Type*)             PGA12_BASE)
#define ACMP                        ((ACMP_Type*)              ACMP_BASE)
#define INT                         ((INT_Type*)               INT_BASE)
#define INTM                        ((INTM_Type*)              INTM_BASE)
#define MISC                        ((MISC_Type*)              MISC_BASE)
#define FMC                         ((FMC_Type*)               FMC_BASE)
#define FMCRC                       ((FMCRC_Type*)             FMCRC_BASE)
#define SAF                         ((SAF_Type*)               SAF_BASE)
#define CRC                         ((CRC_Type*)               CRC_BASE)
#define DBG                         ((DBG_Type*)               DBG_BASE)
#define BGR                         ((BGR_Type*)               BGR_BASE)
#define TSN                         ((TSN_Type*)               TSN_BASE)
#define UID                         ((UID_Type*)               UID_BASE)

/** @} */ /* End of group Device_Peripheral_declaration */


/* =========================================  End of section using anonymous unions  ========================================= */
#if defined (__CC_ARM)
  #pragma pop
#elif defined (__ICCARM__)
  /* leave anonymous unions enabled */
#elif (__ARMCC_VERSION >= 6010050)
  #pragma clang diagnostic pop
#elif defined (__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined (__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined (__TASKING__)
  #pragma warning restore
#elif defined (__CSMC__)
  /* anonymous unions are enabled by default */
#endif


/* =========================================================================================================================== */
/* ================                                 Pos/Mask Cluster Section                                  ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_clusters
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            IF                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  IFL  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            MK                                             ================ */
/* =========================================================================================================================== */

/* ==========================================================  MKL  ========================================================== */

/** @} */ /* End of group PosMask_clusters */


/* =========================================================================================================================== */
/* ================                                Pos/Mask Peripheral Section                                ================ */
/* =========================================================================================================================== */


/** @addtogroup PosMask_peripherals
  * @{
  */



/* =========================================================================================================================== */
/* ================                                            CGC                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  CMC  ========================================================== */
//#define CGC_CMC_AMPH_Pos                  (0UL)                     /*!< CGC CMC: AMPH (Bit 0)                                 */
//#define CGC_CMC_AMPH_Msk                  (0x1UL)                   /*!< CGC CMC: AMPH (Bitfield-Mask: 0x01)                   */
//#define CGC_CMC_AMPHS_Pos                 (1UL)                     /*!< CGC CMC: AMPHS (Bit 1)                                */
//#define CGC_CMC_AMPHS_Msk                 (0x6UL)                   /*!< CGC CMC: AMPHS (Bitfield-Mask: 0x03)                  */
//#define CGC_CMC_OSCSELS_Pos               (4UL)                     /*!< CGC CMC: OSCSELS (Bit 4)                              */
//#define CGC_CMC_OSCSELS_Msk               (0x10UL)                  /*!< CGC CMC: OSCSELS (Bitfield-Mask: 0x01)                */
//#define CGC_CMC_EXCLKS_Pos                (5UL)                     /*!< CGC CMC: EXCLKS (Bit 5)                               */
//#define CGC_CMC_EXCLKS_Msk                (0x20UL)                  /*!< CGC CMC: EXCLKS (Bitfield-Mask: 0x01)                 */
//#define CGC_CMC_OSCSEL_Pos                (6UL)                     /*!< CGC CMC: OSCSEL (Bit 6)                               */
//#define CGC_CMC_OSCSEL_Msk                (0x40UL)                  /*!< CGC CMC: OSCSEL (Bitfield-Mask: 0x01)                 */
//#define CGC_CMC_EXCLK_Pos                 (7UL)                     /*!< CGC CMC: EXCLK (Bit 7)                                */
//#define CGC_CMC_EXCLK_Msk                 (0x80UL)                  /*!< CGC CMC: EXCLK (Bitfield-Mask: 0x01)                  */
/* ==========================================================  CSC  ========================================================== */
#define CGC_CSC_HIOSTOP_Pos               (0UL)                     /*!< CGC CSC: HIOSTOP (Bit 0)                              */
#define CGC_CSC_HIOSTOP_Msk               (0x1UL)                   /*!< CGC CSC: HIOSTOP (Bitfield-Mask: 0x01)                */
//#define CGC_CSC_XTSTOP_Pos                (6UL)                     /*!< CGC CSC: XTSTOP (Bit 6)                               */
//#define CGC_CSC_XTSTOP_Msk                (0x40UL)                  /*!< CGC CSC: XTSTOP (Bitfield-Mask: 0x01)                 */
//#define CGC_CSC_MSTOP_Pos                 (7UL)                     /*!< CGC CSC: MSTOP (Bit 7)                                */
//#define CGC_CSC_MSTOP_Msk                 (0x80UL)                  /*!< CGC CSC: MSTOP (Bitfield-Mask: 0x01)                  */
/* =========================================================  OSTC  ========================================================== */
/* =========================================================  OSTS  ========================================================== */
/* ==========================================================  CKC  ========================================================== */
//#define CGC_CKC_MCM0_Pos                  (4UL)                     /*!< CGC CKC: MCM0 (Bit 4)                                 */
//#define CGC_CKC_MCM0_Msk                  (0x10UL)                  /*!< CGC CKC: MCM0 (Bitfield-Mask: 0x01)                   */
//#define CGC_CKC_MCS_Pos                   (5UL)                     /*!< CGC CKC: MCS (Bit 5)                                  */
//#define CGC_CKC_MCS_Msk                   (0x20UL)                  /*!< CGC CKC: MCS (Bitfield-Mask: 0x01)                    */
#define CGC_CKC_CSS_Pos                   (6UL)                     /*!< CGC CKC: CSS (Bit 6)                                  */
#define CGC_CKC_CSS_Msk                   (0x40UL)                  /*!< CGC CKC: CSS (Bitfield-Mask: 0x01)                    */
#define CGC_CKC_CLS_Pos                   (7UL)                     /*!< CGC CKC: CLS (Bit 7)                                  */
#define CGC_CKC_CLS_Msk                   (0x80UL)                  /*!< CGC CKC: CLS (Bitfield-Mask: 0x01)                    */
/* =========================================================  PER0  ========================================================== */
#define CGC_PER0_TM40EN_Pos               (0UL)                     /*!< CGC PER0: TM40EN (Bit 0)                              */
#define CGC_PER0_TM40EN_Msk               (0x1UL)                   /*!< CGC PER0: TM40EN (Bitfield-Mask: 0x01)                */
#define CGC_PER0_LSITIMEREN_Pos           (7UL)                     /*!< CGC PER0: LSI TIMER EN (Bit 7)                               */
#define CGC_PER0_LSITIMEREN_Msk           (0x80UL)                  /*!< CGC PER0: LSI TIMER EN (Bitfield-Mask: 0x01)                 */
/* =========================================================  PER10  ========================================================= */
/* =========================================================  PER11  ========================================================= */
/* =========================================================  PER12  ========================================================= */
/* =========================================================  PER13  ========================================================= */
/* =========================================================  OSMC  ========================================================== */
#define CGC_OSMC_WUTMMCK0_Pos             (4UL)                     /*!< CGC OSMC: WUTMMCK0 (Bit 4)                            */
#define CGC_OSMC_WUTMMCK0_Msk             (0x10UL)                  /*!< CGC OSMC: WUTMMCK0 (Bitfield-Mask: 0x01)              */
//#define CGC_OSMC_RTCLPC_Pos               (7UL)                     /*!< CGC OSMC: RTCLPC (Bit 7)                              */
//#define CGC_OSMC_RTCLPC_Msk               (0x80UL)                  /*!< CGC OSMC: RTCLPC (Bitfield-Mask: 0x01)                */
/* ========================================================  LOSCSEL  ======================================================== */
#define CGC_LOSCSEL_LOSCSEL_Pos           (0UL)                     /*!< CGC LOSCSEL: LOSCSEL (Bit 0)                          */
#define CGC_LOSCSEL_LOSCSEL_Msk           (0x1UL)                   /*!< CGC LOSCSEL: LOSCSEL (Bitfield-Mask: 0x01)            */
/* =========================================================  PRCR  ========================================================== */
/* =======================================================  SUBCKSEL  ======================================================== */
#define CGC_SUBCKSEL_SELLOSC_Pos          (0UL)                     /*!< CGC SUBCKSEL: SELLOSC (Bit 0)                         */
#define CGC_SUBCKSEL_SELLOSC_Msk          (0x1UL)                   /*!< CGC SUBCKSEL: SELLOSC (Bitfield-Mask: 0x01)           */
/* ========================================================  HOCODIV  ======================================================== */
/* ========================================================  HIOTRM  ========================================================= */
/* ========================================================  PMUKEY  ========================================================= */
/* ========================================================  PMCCTL  ========================================================= */
/* =========================================================  RSTM  ========================================================== */
/* ========================================================  WDTCFG0  ======================================================== */
/* ========================================================  WDTCFG1  ======================================================== */
/* ========================================================  WDTCFG2  ======================================================== */
/* ========================================================  WDTCFG3  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            RST                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  RESF  ========================================================== */
#define RST_RESF_LVIRF_Pos                (0UL)                     /*!< RST RESF: LVIRF (Bit 0)                               */
#define RST_RESF_LVIRF_Msk                (0x1UL)                   /*!< RST RESF: LVIRF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_IAWRF_Pos                (1UL)                     /*!< RST RESF: IAWRF (Bit 1)                               */
#define RST_RESF_IAWRF_Msk                (0x2UL)                   /*!< RST RESF: IAWRF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_RPERF_Pos                (2UL)                     /*!< RST RESF: RPERF (Bit 2)                               */
#define RST_RESF_RPERF_Msk                (0x4UL)                   /*!< RST RESF: RPERF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_WDTRF_Pos                (4UL)                     /*!< RST RESF: WDTRF (Bit 4)                               */
#define RST_RESF_WDTRF_Msk                (0x10UL)                  /*!< RST RESF: WDTRF (Bitfield-Mask: 0x01)                 */
#define RST_RESF_SYSRF_Pos                (7UL)                     /*!< RST RESF: SYSRF (Bit 7)                               */
#define RST_RESF_SYSRF_Msk                (0x80UL)                  /*!< RST RESF: SYSRF (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                            LVD                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  LVIM  ========================================================== */
#define LVD_LVIM_LVIF_Pos                 (0UL)                     /*!< LVD LVIM: LVIF (Bit 0)                                */
#define LVD_LVIM_LVIF_Msk                 (0x1UL)                   /*!< LVD LVIM: LVIF (Bitfield-Mask: 0x01)                  */
#define LVD_LVIM_LVIOMSK_Pos              (1UL)                     /*!< LVD LVIM: LVIOMSK (Bit 1)                             */
#define LVD_LVIM_LVIOMSK_Msk              (0x2UL)                   /*!< LVD LVIM: LVIOMSK (Bitfield-Mask: 0x01)               */
#define LVD_LVIM_LVISEN_Pos               (7UL)                     /*!< LVD LVIM: LVISEN (Bit 7)                              */
#define LVD_LVIM_LVISEN_Msk               (0x80UL)                  /*!< LVD LVIM: LVISEN (Bitfield-Mask: 0x01)                */
/* =========================================================  LVIS  ========================================================== */
#define LVD_LVIS_LVILV_Pos                (0UL)                     /*!< LVD LVIS: LVILV (Bit 0)                               */
#define LVD_LVIS_LVILV_Msk                (0x1UL)                   /*!< LVD LVIS: LVILV (Bitfield-Mask: 0x01)                 */
#define LVD_LVIS_LVIMD_Pos                (7UL)                     /*!< LVD LVIS: LVIMD (Bit 7)                               */
#define LVD_LVIS_LVIMD_Msk                (0x80UL)                  /*!< LVD LVIS: LVIMD (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                           PORT                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  PM0  ========================================================== */
/* ==========================================================  PM1  ========================================================== */
/* ==========================================================  PM2  ========================================================== */
/* ==========================================================  P0  =========================================================== */
/* ==========================================================  P1  =========================================================== */
/* ==========================================================  P2  =========================================================== */
/* ==========================================================  PU0  ========================================================== */
/* ==========================================================  PU1  ========================================================== */
/* ==========================================================  PU2  ========================================================== */
/* ==========================================================  PD0  ========================================================== */
/* ==========================================================  PD1  ========================================================== */
/* ==========================================================  PD2  ========================================================== */
/* =========================================================  POM0  ========================================================== */
/* =========================================================  POM1  ========================================================== */
/* =========================================================  POM2  ========================================================== */
/* =========================================================  PMC0  ========================================================== */
/* =========================================================  PMC1  ========================================================== */
/* =========================================================  PMC2  ========================================================== */
/* =========================================================  PSET0  ========================================================= */
/* =========================================================  PSET1  ========================================================= */
/* =========================================================  PSET2  ========================================================= */
/* =========================================================  PCLR0  ========================================================= */
/* =========================================================  PCLR1  ========================================================= */
/* =========================================================  PCLR2  ========================================================= */
/* ========================================================  PREAD0  ========================================================= */
/* ========================================================  PREAD1  ========================================================= */
/* ========================================================  PREAD2  ========================================================= */
/* ========================================================  P00CFG  ========================================================= */
#define PORT_P00CFG_CFG_Pos               (0UL)                     /*!< PORT P00CFG: CFG (Bit 0)                              */
#define PORT_P00CFG_CFG_Msk               (0xfUL)                   /*!< PORT P00CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P01CFG  ========================================================= */
#define PORT_P01CFG_CFG_Pos               (0UL)                     /*!< PORT P01CFG: CFG (Bit 0)                              */
#define PORT_P01CFG_CFG_Msk               (0xfUL)                   /*!< PORT P01CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P02CFG  ========================================================= */
#define PORT_P02CFG_CFG_Pos               (0UL)                     /*!< PORT P02CFG: CFG (Bit 0)                              */
#define PORT_P02CFG_CFG_Msk               (0xfUL)                   /*!< PORT P02CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P03CFG  ========================================================= */
#define PORT_P03CFG_CFG_Pos               (0UL)                     /*!< PORT P03CFG: CFG (Bit 0)                              */
#define PORT_P03CFG_CFG_Msk               (0xfUL)                   /*!< PORT P03CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P04CFG  ========================================================= */
#define PORT_P04CFG_CFG_Pos               (0UL)                     /*!< PORT P04CFG: CFG (Bit 0)                              */
#define PORT_P04CFG_CFG_Msk               (0xfUL)                   /*!< PORT P04CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P05CFG  ========================================================= */
#define PORT_P05CFG_CFG_Pos               (0UL)                     /*!< PORT P05CFG: CFG (Bit 0)                              */
#define PORT_P05CFG_CFG_Msk               (0xfUL)                   /*!< PORT P05CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P06CFG  ========================================================= */
#define PORT_P06CFG_CFG_Pos               (0UL)                     /*!< PORT P06CFG: CFG (Bit 0)                              */
#define PORT_P06CFG_CFG_Msk               (0xfUL)                   /*!< PORT P06CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P07CFG  ========================================================= */
#define PORT_P07CFG_CFG_Pos               (0UL)                     /*!< PORT P07CFG: CFG (Bit 0)                              */
#define PORT_P07CFG_CFG_Msk               (0xfUL)                   /*!< PORT P07CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P10CFG  ========================================================= */
#define PORT_P10CFG_CFG_Pos               (0UL)                     /*!< PORT P10CFG: CFG (Bit 0)                              */
#define PORT_P10CFG_CFG_Msk               (0xfUL)                   /*!< PORT P10CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P11CFG  ========================================================= */
#define PORT_P11CFG_CFG_Pos               (0UL)                     /*!< PORT P11CFG: CFG (Bit 0)                              */
#define PORT_P11CFG_CFG_Msk               (0xfUL)                   /*!< PORT P11CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P12CFG  ========================================================= */
#define PORT_P12CFG_CFG_Pos               (0UL)                     /*!< PORT P12CFG: CFG (Bit 0)                              */
#define PORT_P12CFG_CFG_Msk               (0xfUL)                   /*!< PORT P12CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P13CFG  ========================================================= */
#define PORT_P13CFG_CFG_Pos               (0UL)                     /*!< PORT P13CFG: CFG (Bit 0)                              */
#define PORT_P13CFG_CFG_Msk               (0xfUL)                   /*!< PORT P13CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P14CFG  ========================================================= */
#define PORT_P14CFG_CFG_Pos               (0UL)                     /*!< PORT P14CFG: CFG (Bit 0)                              */
#define PORT_P14CFG_CFG_Msk               (0xfUL)                   /*!< PORT P14CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P15CFG  ========================================================= */
#define PORT_P15CFG_CFG_Pos               (0UL)                     /*!< PORT P15CFG: CFG (Bit 0)                              */
#define PORT_P15CFG_CFG_Msk               (0xfUL)                   /*!< PORT P15CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P16CFG  ========================================================= */
#define PORT_P16CFG_CFG_Pos               (0UL)                     /*!< PORT P16CFG: CFG (Bit 0)                              */
#define PORT_P16CFG_CFG_Msk               (0xfUL)                   /*!< PORT P16CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P20CFG  ========================================================= */
#define PORT_P20CFG_CFG_Pos               (0UL)                     /*!< PORT P20CFG: CFG (Bit 0)                              */
#define PORT_P20CFG_CFG_Msk               (0xfUL)                   /*!< PORT P20CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P21CFG  ========================================================= */
#define PORT_P21CFG_CFG_Pos               (0UL)                     /*!< PORT P21CFG: CFG (Bit 0)                              */
#define PORT_P21CFG_CFG_Msk               (0xfUL)                   /*!< PORT P21CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P22CFG  ========================================================= */
#define PORT_P22CFG_CFG_Pos               (0UL)                     /*!< PORT P22CFG: CFG (Bit 0)                              */
#define PORT_P22CFG_CFG_Msk               (0xfUL)                   /*!< PORT P22CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P23CFG  ========================================================= */
#define PORT_P23CFG_CFG_Pos               (0UL)                     /*!< PORT P23CFG: CFG (Bit 0)                              */
#define PORT_P23CFG_CFG_Msk               (0xfUL)                   /*!< PORT P23CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P24CFG  ========================================================= */
#define PORT_P24CFG_CFG_Pos               (0UL)                     /*!< PORT P24CFG: CFG (Bit 0)                              */
#define PORT_P24CFG_CFG_Msk               (0xfUL)                   /*!< PORT P24CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P25CFG  ========================================================= */
#define PORT_P25CFG_CFG_Pos               (0UL)                     /*!< PORT P25CFG: CFG (Bit 0)                              */
#define PORT_P25CFG_CFG_Msk               (0xfUL)                   /*!< PORT P25CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P26CFG  ========================================================= */
#define PORT_P26CFG_CFG_Pos               (0UL)                     /*!< PORT P26CFG: CFG (Bit 0)                              */
#define PORT_P26CFG_CFG_Msk               (0xfUL)                   /*!< PORT P26CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  P27CFG  ========================================================= */
#define PORT_P27CFG_CFG_Pos               (0UL)                     /*!< PORT P27CFG: CFG (Bit 0)                              */
#define PORT_P27CFG_CFG_Msk               (0xfUL)                   /*!< PORT P27CFG: CFG (Bitfield-Mask: 0x0f)                */
/* ========================================================  INT0CFG  ======================================================== */
#define PORT_INT0CFG_CFG_Pos              (0UL)                     /*!< PORT INT0CFG: CFG (Bit 0)                             */
#define PORT_INT0CFG_CFG_Msk              (0x3fUL)                  /*!< PORT INT0CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  INT1CFG  ======================================================== */
#define PORT_INT1CFG_CFG_Pos              (0UL)                     /*!< PORT INT1CFG: CFG (Bit 0)                             */
#define PORT_INT1CFG_CFG_Msk              (0x3fUL)                  /*!< PORT INT1CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  INT2CFG  ======================================================== */
#define PORT_INT2CFG_CFG_Pos              (0UL)                     /*!< PORT INT2CFG: CFG (Bit 0)                             */
#define PORT_INT2CFG_CFG_Msk              (0x3fUL)                  /*!< PORT INT2CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  INT3CFG  ======================================================== */
#define PORT_INT3CFG_CFG_Pos              (0UL)                     /*!< PORT INT3CFG: CFG (Bit 0)                             */
#define PORT_INT3CFG_CFG_Msk              (0x3fUL)                  /*!< PORT INT3CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  TI00CFG  ======================================================== */
#define PORT_TI00CFG_CFG_Pos              (0UL)                     /*!< PORT TI00CFG: CFG (Bit 0)                             */
#define PORT_TI00CFG_CFG_Msk              (0x3fUL)                  /*!< PORT TI00CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  TI01CFG  ======================================================== */
#define PORT_TI01CFG_CFG_Pos              (0UL)                     /*!< PORT TI01CFG: CFG (Bit 0)                             */
#define PORT_TI01CFG_CFG_Msk              (0x3fUL)                  /*!< PORT TI01CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  TI02CFG  ======================================================== */
#define PORT_TI02CFG_CFG_Pos              (0UL)                     /*!< PORT TI02CFG: CFG (Bit 0)                             */
#define PORT_TI02CFG_CFG_Msk              (0x3fUL)                  /*!< PORT TI02CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ========================================================  TI03CFG  ======================================================== */
#define PORT_TI03CFG_CFG_Pos              (0UL)                     /*!< PORT TI03CFG: CFG (Bit 0)                             */
#define PORT_TI03CFG_CFG_Msk              (0x3fUL)                  /*!< PORT TI03CFG: CFG (Bitfield-Mask: 0x3f)               */
/* ======================================================  UARTRXDCFG  ======================================================= */
#define PORT_UARTRXDCFG_CFG_Pos           (0UL)                     /*!< PORT UARTRXDCFG: CFG (Bit 0)                          */
#define PORT_UARTRXDCFG_CFG_Msk           (0x3fUL)                  /*!< PORT UARTRXDCFG: CFG (Bitfield-Mask: 0x3f)            */
/* ======================================================  EPWMBKINCFG  ====================================================== */
#define PORT_EPWMBKINCFG_CFG_Pos          (0UL)                     /*!< PORT EPWMBKINCFG: CFG (Bit 0)                         */
#define PORT_EPWMBKINCFG_CFG_Msk          (0x3fUL)                  /*!< PORT EPWMBKINCFG: CFG (Bitfield-Mask: 0x3f)           */
/* ======================================================  CCP0AINCFG  ======================================================= */
#define PORT_CCP0AINCFG_CFG_Pos           (0UL)                     /*!< PORT CCP0AINCFG: CFG (Bit 0)                          */
#define PORT_CCP0AINCFG_CFG_Msk           (0x3fUL)                  /*!< PORT CCP0AINCFG: CFG (Bitfield-Mask: 0x3f)            */
/* ======================================================  CCP0BINCFG  ======================================================= */
#define PORT_CCP0BINCFG_CFG_Pos           (0UL)                     /*!< PORT CCP0BINCFG: CFG (Bit 0)                          */
#define PORT_CCP0BINCFG_CFG_Msk           (0x3fUL)                  /*!< PORT CCP0BINCFG: CFG (Bitfield-Mask: 0x3f)            */
/* ======================================================  CCP1AINCFG  ======================================================= */
#define PORT_CCP1AINCFG_CFG_Pos           (0UL)                     /*!< PORT CCP1AINCFG: CFG (Bit 0)                          */
#define PORT_CCP1AINCFG_CFG_Msk           (0x3fUL)                  /*!< PORT CCP1AINCFG: CFG (Bitfield-Mask: 0x3f)            */
/* ======================================================  CCP1BINCFG  ======================================================= */
#define PORT_CCP1BINCFG_CFG_Pos           (0UL)                     /*!< PORT CCP1BINCFG: CFG (Bit 0)                          */
#define PORT_CCP1BINCFG_CFG_Msk           (0x3fUL)                  /*!< PORT CCP1BINCFG: CFG (Bitfield-Mask: 0x3f)            */
/* =======================================================  P0TTLCFG  ======================================================== */
/* =======================================================  P1TTLCFG  ======================================================== */
/* =======================================================  P2TTLCFG  ======================================================== */
/* ==========================================================  PMS  ========================================================== */
/* ========================================================  GDIDIS  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           TM40                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TCR0  ========================================================== */
/* =========================================================  TMR00  ========================================================= */
//#define TM40_TMR00_MD_Pos                 (0UL)                     /*!< TM40 TMR00: MD (Bit 0)                                */
//#define TM40_TMR00_MD_Msk                 (0xfUL)                   /*!< TM40 TMR00: MD (Bitfield-Mask: 0x0f)                  */
//#define TM40_TMR00_CIS_Pos                (6UL)                     /*!< TM40 TMR00: CIS (Bit 6)                               */
//#define TM40_TMR00_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR00: CIS (Bitfield-Mask: 0x03)                 */
//#define TM40_TMR00_STS_Pos                (8UL)                     /*!< TM40 TMR00: STS (Bit 8)                               */
//#define TM40_TMR00_STS_Msk                (0x700UL)                 /*!< TM40 TMR00: STS (Bitfield-Mask: 0x07)                 */
//#define TM40_TMR00_CCS_Pos                (12UL)                    /*!< TM40 TMR00: CCS (Bit 12)                              */
//#define TM40_TMR00_CCS_Msk                (0x1000UL)                /*!< TM40 TMR00: CCS (Bitfield-Mask: 0x01)                 */
//#define TM40_TMR00_CKS_Pos                (14UL)                    /*!< TM40 TMR00: CKS (Bit 14)                              */
//#define TM40_TMR00_CKS_Msk                (0xc000UL)                /*!< TM40 TMR00: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR01  ========================================================= */
//#define TM40_TMR01_MD_Pos                 (0UL)                     /*!< TM40 TMR01: MD (Bit 0)                                */
//#define TM40_TMR01_MD_Msk                 (0xfUL)                   /*!< TM40 TMR01: MD (Bitfield-Mask: 0x0f)                  */
//#define TM40_TMR01_CIS_Pos                (6UL)                     /*!< TM40 TMR01: CIS (Bit 6)                               */
//#define TM40_TMR01_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR01: CIS (Bitfield-Mask: 0x03)                 */
//#define TM40_TMR01_STS_Pos                (8UL)                     /*!< TM40 TMR01: STS (Bit 8)                               */
//#define TM40_TMR01_STS_Msk                (0x700UL)                 /*!< TM40 TMR01: STS (Bitfield-Mask: 0x07)                 */
//#define TM40_TMR01_SPLIT_Pos              (11UL)                    /*!< TM40 TMR01: SPLIT (Bit 11)                            */
//#define TM40_TMR01_SPLIT_Msk              (0x800UL)                 /*!< TM40 TMR01: SPLIT (Bitfield-Mask: 0x01)               */
//#define TM40_TMR01_CCS_Pos                (12UL)                    /*!< TM40 TMR01: CCS (Bit 12)                              */
//#define TM40_TMR01_CCS_Msk                (0x1000UL)                /*!< TM40 TMR01: CCS (Bitfield-Mask: 0x01)                 */
//#define TM40_TMR01_CKS_Pos                (14UL)                    /*!< TM40 TMR01: CKS (Bit 14)                              */
//#define TM40_TMR01_CKS_Msk                (0xc000UL)                /*!< TM40 TMR01: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR02  ========================================================= */
//#define TM40_TMR02_MD_Pos                 (0UL)                     /*!< TM40 TMR02: MD (Bit 0)                                */
//#define TM40_TMR02_MD_Msk                 (0xfUL)                   /*!< TM40 TMR02: MD (Bitfield-Mask: 0x0f)                  */
//#define TM40_TMR02_CIS_Pos                (6UL)                     /*!< TM40 TMR02: CIS (Bit 6)                               */
//#define TM40_TMR02_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR02: CIS (Bitfield-Mask: 0x03)                 */
//#define TM40_TMR02_STS_Pos                (8UL)                     /*!< TM40 TMR02: STS (Bit 8)                               */
//#define TM40_TMR02_STS_Msk                (0x700UL)                 /*!< TM40 TMR02: STS (Bitfield-Mask: 0x07)                 */
//#define TM40_TMR02_MASTER_Pos             (11UL)                    /*!< TM40 TMR02: MASTER (Bit 11)                           */
//#define TM40_TMR02_MASTER_Msk             (0x800UL)                 /*!< TM40 TMR02: MASTER (Bitfield-Mask: 0x01)              */
//#define TM40_TMR02_CCS_Pos                (12UL)                    /*!< TM40 TMR02: CCS (Bit 12)                              */
//#define TM40_TMR02_CCS_Msk                (0x1000UL)                /*!< TM40 TMR02: CCS (Bitfield-Mask: 0x01)                 */
//#define TM40_TMR02_CKS_Pos                (14UL)                    /*!< TM40 TMR02: CKS (Bit 14)                              */
//#define TM40_TMR02_CKS_Msk                (0xc000UL)                /*!< TM40 TMR02: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TMR03  ========================================================= */
//#define TM40_TMR03_MD_Pos                 (0UL)                     /*!< TM40 TMR03: MD (Bit 0)                                */
//#define TM40_TMR03_MD_Msk                 (0xfUL)                   /*!< TM40 TMR03: MD (Bitfield-Mask: 0x0f)                  */
//#define TM40_TMR03_CIS_Pos                (6UL)                     /*!< TM40 TMR03: CIS (Bit 6)                               */
//#define TM40_TMR03_CIS_Msk                (0xc0UL)                  /*!< TM40 TMR03: CIS (Bitfield-Mask: 0x03)                 */
//#define TM40_TMR03_STS_Pos                (8UL)                     /*!< TM40 TMR03: STS (Bit 8)                               */
//#define TM40_TMR03_STS_Msk                (0x700UL)                 /*!< TM40 TMR03: STS (Bitfield-Mask: 0x07)                 */
//#define TM40_TMR03_SPLIT_Pos              (11UL)                    /*!< TM40 TMR03: SPLIT (Bit 11)                            */
//#define TM40_TMR03_SPLIT_Msk              (0x800UL)                 /*!< TM40 TMR03: SPLIT (Bitfield-Mask: 0x01)               */
//#define TM40_TMR03_CCS_Pos                (12UL)                    /*!< TM40 TMR03: CCS (Bit 12)                              */
//#define TM40_TMR03_CCS_Msk                (0x1000UL)                /*!< TM40 TMR03: CCS (Bitfield-Mask: 0x01)                 */
//#define TM40_TMR03_CKS_Pos                (14UL)                    /*!< TM40 TMR03: CKS (Bit 14)                              */
//#define TM40_TMR03_CKS_Msk                (0xc000UL)                /*!< TM40 TMR03: CKS (Bitfield-Mask: 0x03)                 */
/* =========================================================  TSR00  ========================================================= */
//#define TM40_TSR00_OVF_Pos                (0UL)                     /*!< TM40 TSR00: OVF (Bit 0)                               */
//#define TM40_TSR00_OVF_Msk                (0x1UL)                   /*!< TM40 TSR00: OVF (Bitfield-Mask: 0x01)                 */
///* =========================================================  TSR01  ========================================================= */
//#define TM40_TSR01_OVF_Pos                (0UL)                     /*!< TM40 TSR01: OVF (Bit 0)                               */
//#define TM40_TSR01_OVF_Msk                (0x1UL)                   /*!< TM40 TSR01: OVF (Bitfield-Mask: 0x01)                 */
///* =========================================================  TSR02  ========================================================= */
//#define TM40_TSR02_OVF_Pos                (0UL)                     /*!< TM40 TSR02: OVF (Bit 0)                               */
//#define TM40_TSR02_OVF_Msk                (0x1UL)                   /*!< TM40 TSR02: OVF (Bitfield-Mask: 0x01)                 */
///* =========================================================  TSR03  ========================================================= */
//#define TM40_TSR03_OVF_Pos                (0UL)                     /*!< TM40 TSR03: OVF (Bit 0)                               */
//#define TM40_TSR03_OVF_Msk                (0x1UL)                   /*!< TM40 TSR03: OVF (Bitfield-Mask: 0x01)                 */
///* ==========================================================  TE0  ========================================================== */
//#define TM40_TE0_TE00_Pos                 (0UL)                     /*!< TM40 TE0: TE00 (Bit 0)                                */
//#define TM40_TE0_TE00_Msk                 (0x1UL)                   /*!< TM40 TE0: TE00 (Bitfield-Mask: 0x01)                  */
//#define TM40_TE0_TE01_Pos                 (1UL)                     /*!< TM40 TE0: TE01 (Bit 1)                                */
//#define TM40_TE0_TE01_Msk                 (0x2UL)                   /*!< TM40 TE0: TE01 (Bitfield-Mask: 0x01)                  */
//#define TM40_TE0_TE02_Pos                 (2UL)                     /*!< TM40 TE0: TE02 (Bit 2)                                */
//#define TM40_TE0_TE02_Msk                 (0x4UL)                   /*!< TM40 TE0: TE02 (Bitfield-Mask: 0x01)                  */
//#define TM40_TE0_TE03_Pos                 (3UL)                     /*!< TM40 TE0: TE03 (Bit 3)                                */
//#define TM40_TE0_TE03_Msk                 (0x8UL)                   /*!< TM40 TE0: TE03 (Bitfield-Mask: 0x01)                  */
//#define TM40_TE0_TEH01_Pos                (9UL)                     /*!< TM40 TE0: TEH01 (Bit 9)                               */
//#define TM40_TE0_TEH01_Msk                (0x200UL)                 /*!< TM40 TE0: TEH01 (Bitfield-Mask: 0x01)                 */
//#define TM40_TE0_TEH03_Pos                (11UL)                    /*!< TM40 TE0: TEH03 (Bit 11)                              */
//#define TM40_TE0_TEH03_Msk                (0x800UL)                 /*!< TM40 TE0: TEH03 (Bitfield-Mask: 0x01)                 */
///* ==========================================================  TS0  ========================================================== */
//#define TM40_TS0_TS00_Pos                 (0UL)                     /*!< TM40 TS0: TS00 (Bit 0)                                */
//#define TM40_TS0_TS00_Msk                 (0x1UL)                   /*!< TM40 TS0: TS00 (Bitfield-Mask: 0x01)                  */
//#define TM40_TS0_TS01_Pos                 (1UL)                     /*!< TM40 TS0: TS01 (Bit 1)                                */
//#define TM40_TS0_TS01_Msk                 (0x2UL)                   /*!< TM40 TS0: TS01 (Bitfield-Mask: 0x01)                  */
//#define TM40_TS0_TS02_Pos                 (2UL)                     /*!< TM40 TS0: TS02 (Bit 2)                                */
//#define TM40_TS0_TS02_Msk                 (0x4UL)                   /*!< TM40 TS0: TS02 (Bitfield-Mask: 0x01)                  */
//#define TM40_TS0_TS03_Pos                 (3UL)                     /*!< TM40 TS0: TS03 (Bit 3)                                */
//#define TM40_TS0_TS03_Msk                 (0x8UL)                   /*!< TM40 TS0: TS03 (Bitfield-Mask: 0x01)                  */
//#define TM40_TS0_TSH01_Pos                (9UL)                     /*!< TM40 TS0: TSH01 (Bit 9)                               */
//#define TM40_TS0_TSH01_Msk                (0x200UL)                 /*!< TM40 TS0: TSH01 (Bitfield-Mask: 0x01)                 */
//#define TM40_TS0_TSH03_Pos                (11UL)                    /*!< TM40 TS0: TSH03 (Bit 11)                              */
//#define TM40_TS0_TSH03_Msk                (0x800UL)                 /*!< TM40 TS0: TSH03 (Bitfield-Mask: 0x01)                 */
///* ==========================================================  TT0  ========================================================== */
//#define TM40_TT0_TT00_Pos                 (0UL)                     /*!< TM40 TT0: TT00 (Bit 0)                                */
//#define TM40_TT0_TT00_Msk                 (0x1UL)                   /*!< TM40 TT0: TT00 (Bitfield-Mask: 0x01)                  */
//#define TM40_TT0_TT01_Pos                 (1UL)                     /*!< TM40 TT0: TT01 (Bit 1)                                */
//#define TM40_TT0_TT01_Msk                 (0x2UL)                   /*!< TM40 TT0: TT01 (Bitfield-Mask: 0x01)                  */
//#define TM40_TT0_TT02_Pos                 (2UL)                     /*!< TM40 TT0: TT02 (Bit 2)                                */
//#define TM40_TT0_TT02_Msk                 (0x4UL)                   /*!< TM40 TT0: TT02 (Bitfield-Mask: 0x01)                  */
//#define TM40_TT0_TT03_Pos                 (3UL)                     /*!< TM40 TT0: TT03 (Bit 3)                                */
//#define TM40_TT0_TT03_Msk                 (0x8UL)                   /*!< TM40 TT0: TT03 (Bitfield-Mask: 0x01)                  */
//#define TM40_TT0_TTH01_Pos                (9UL)                     /*!< TM40 TT0: TTH01 (Bit 9)                               */
//#define TM40_TT0_TTH01_Msk                (0x200UL)                 /*!< TM40 TT0: TTH01 (Bitfield-Mask: 0x01)                 */
//#define TM40_TT0_TTH03_Pos                (11UL)                    /*!< TM40 TT0: TTH03 (Bit 11)                              */
//#define TM40_TT0_TTH03_Msk                (0x800UL)                 /*!< TM40 TT0: TTH03 (Bitfield-Mask: 0x01)                 */
///* =========================================================  TPS0  ========================================================== */
//#define TM40_TPS0_PRS00_Pos               (0UL)                     /*!< TM40 TPS0: PRS00 (Bit 0)                              */
//#define TM40_TPS0_PRS00_Msk               (0xfUL)                   /*!< TM40 TPS0: PRS00 (Bitfield-Mask: 0x0f)                */
//#define TM40_TPS0_PRS01_Pos               (4UL)                     /*!< TM40 TPS0: PRS01 (Bit 4)                              */
//#define TM40_TPS0_PRS01_Msk               (0xf0UL)                  /*!< TM40 TPS0: PRS01 (Bitfield-Mask: 0x0f)                */
//#define TM40_TPS0_PRS02_Pos               (8UL)                     /*!< TM40 TPS0: PRS02 (Bit 8)                              */
//#define TM40_TPS0_PRS02_Msk               (0x300UL)                 /*!< TM40 TPS0: PRS02 (Bitfield-Mask: 0x03)                */
//#define TM40_TPS0_PRS03_Pos               (12UL)                    /*!< TM40 TPS0: PRS03 (Bit 12)                             */
//#define TM40_TPS0_PRS03_Msk               (0x3000UL)                /*!< TM40 TPS0: PRS03 (Bitfield-Mask: 0x03)                */
///* ==========================================================  TO0  ========================================================== */
//#define TM40_TO0_TO00_Pos                 (0UL)                     /*!< TM40 TO0: TO00 (Bit 0)                                */
//#define TM40_TO0_TO00_Msk                 (0x1UL)                   /*!< TM40 TO0: TO00 (Bitfield-Mask: 0x01)                  */
//#define TM40_TO0_TO01_Pos                 (1UL)                     /*!< TM40 TO0: TO01 (Bit 1)                                */
//#define TM40_TO0_TO01_Msk                 (0x2UL)                   /*!< TM40 TO0: TO01 (Bitfield-Mask: 0x01)                  */
//#define TM40_TO0_TO02_Pos                 (2UL)                     /*!< TM40 TO0: TO02 (Bit 2)                                */
//#define TM40_TO0_TO02_Msk                 (0x4UL)                   /*!< TM40 TO0: TO02 (Bitfield-Mask: 0x01)                  */
//#define TM40_TO0_TO03_Pos                 (3UL)                     /*!< TM40 TO0: TO03 (Bit 3)                                */
//#define TM40_TO0_TO03_Msk                 (0x8UL)                   /*!< TM40 TO0: TO03 (Bitfield-Mask: 0x01)                  */
///* =========================================================  TOE0  ========================================================== */
//#define TM40_TOE0_TOE00_Pos               (0UL)                     /*!< TM40 TOE0: TOE00 (Bit 0)                              */
//#define TM40_TOE0_TOE00_Msk               (0x1UL)                   /*!< TM40 TOE0: TOE00 (Bitfield-Mask: 0x01)                */
//#define TM40_TOE0_TOE01_Pos               (1UL)                     /*!< TM40 TOE0: TOE01 (Bit 1)                              */
//#define TM40_TOE0_TOE01_Msk               (0x2UL)                   /*!< TM40 TOE0: TOE01 (Bitfield-Mask: 0x01)                */
//#define TM40_TOE0_TOE02_Pos               (2UL)                     /*!< TM40 TOE0: TOE02 (Bit 2)                              */
//#define TM40_TOE0_TOE02_Msk               (0x4UL)                   /*!< TM40 TOE0: TOE02 (Bitfield-Mask: 0x01)                */
//#define TM40_TOE0_TOE03_Pos               (3UL)                     /*!< TM40 TOE0: TOE03 (Bit 3)                              */
//#define TM40_TOE0_TOE03_Msk               (0x8UL)                   /*!< TM40 TOE0: TOE03 (Bitfield-Mask: 0x01)                */
///* =========================================================  TOL0  ========================================================== */
//#define TM40_TOL0_TOL01_Pos               (1UL)                     /*!< TM40 TOL0: TOL01 (Bit 1)                              */
//#define TM40_TOL0_TOL01_Msk               (0x2UL)                   /*!< TM40 TOL0: TOL01 (Bitfield-Mask: 0x01)                */
//#define TM40_TOL0_TOL02_Pos               (2UL)                     /*!< TM40 TOL0: TOL02 (Bit 2)                              */
//#define TM40_TOL0_TOL02_Msk               (0x4UL)                   /*!< TM40 TOL0: TOL02 (Bitfield-Mask: 0x01)                */
//#define TM40_TOL0_TOL03_Pos               (3UL)                     /*!< TM40 TOL0: TOL03 (Bit 3)                              */
//#define TM40_TOL0_TOL03_Msk               (0x8UL)                   /*!< TM40 TOL0: TOL03 (Bitfield-Mask: 0x01)                */
///* =========================================================  TOM0  ========================================================== */
//#define TM40_TOM0_TOM01_Pos               (1UL)                     /*!< TM40 TOM0: TOM01 (Bit 1)                              */
//#define TM40_TOM0_TOM01_Msk               (0x2UL)                   /*!< TM40 TOM0: TOM01 (Bitfield-Mask: 0x01)                */
//#define TM40_TOM0_TOM02_Pos               (2UL)                     /*!< TM40 TOM0: TOM02 (Bit 2)                              */
//#define TM40_TOM0_TOM02_Msk               (0x4UL)                   /*!< TM40 TOM0: TOM02 (Bitfield-Mask: 0x01)                */
//#define TM40_TOM0_TOM03_Pos               (3UL)                     /*!< TM40 TOM0: TOM03 (Bit 3)                              */
//#define TM40_TOM0_TOM03_Msk               (0x8UL)                   /*!< TM40 TOM0: TOM03 (Bitfield-Mask: 0x01)                */
/* =========================================================  TDR0  ========================================================== */
/* =========================================================  TDR0  ========================================================== */
/* ========================================================  TDR01L  ========================================================= */
/* ========================================================  TDR01H  ========================================================= */
/* ========================================================  TDR03L  ========================================================= */
/* ========================================================  TDR03H  ========================================================= */


/* =========================================================================================================================== */
/* ================                                           PCBZ                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CKS0  ========================================================== */
#define PCBZ_CKS0_CCS_Pos                 (0UL)                     /*!< PCBZ CKS0: CCS (Bit 0)                                */
#define PCBZ_CKS0_CCS_Msk                 (0x7UL)                   /*!< PCBZ CKS0: CCS (Bitfield-Mask: 0x07)                  */
#define PCBZ_CKS0_CSEL_Pos                (3UL)                     /*!< PCBZ CKS0: CSEL (Bit 3)                               */
#define PCBZ_CKS0_CSEL_Msk                (0x8UL)                   /*!< PCBZ CKS0: CSEL (Bitfield-Mask: 0x01)                 */
#define PCBZ_CKS0_PCLOE_Pos               (7UL)                     /*!< PCBZ CKS0: PCLOE (Bit 7)                              */
#define PCBZ_CKS0_PCLOE_Msk               (0x80UL)                  /*!< PCBZ CKS0: PCLOE (Bitfield-Mask: 0x01)                */
/* =========================================================  CKS1  ========================================================== */
#define PCBZ_CKS1_CCS_Pos                 (0UL)                     /*!< PCBZ CKS1: CCS (Bit 0)                                */
#define PCBZ_CKS1_CCS_Msk                 (0x7UL)                   /*!< PCBZ CKS1: CCS (Bitfield-Mask: 0x07)                  */
#define PCBZ_CKS1_CSEL_Pos                (3UL)                     /*!< PCBZ CKS1: CSEL (Bit 3)                               */
#define PCBZ_CKS1_CSEL_Msk                (0x8UL)                   /*!< PCBZ CKS1: CSEL (Bitfield-Mask: 0x01)                 */
#define PCBZ_CKS1_PCLOE_Pos               (7UL)                     /*!< PCBZ CKS1: PCLOE (Bit 7)                              */
#define PCBZ_CKS1_PCLOE_Msk               (0x80UL)                  /*!< PCBZ CKS1: PCLOE (Bitfield-Mask: 0x01)                */


/* =========================================================================================================================== */
/* ================                                            WDT                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  LOCKCTL  ======================================================== */
/* =========================================================  PRCR  ========================================================== */
/* =========================================================  WDTE  ========================================================== */


/* =========================================================================================================================== */
/* ================                                          TIMER0                                           ================ */
/* =========================================================================================================================== */

/* ==========================================================  CON  ========================================================== */
#define	TMR_CON_TMREN_Pos			(7)
#define TMR_CON_TMREN_Msk			(0x1UL<<TMR_CON_TMREN_Pos)
#define	TMR_CON_TMRMS_Pos			(6)
#define TMR_CON_TMRMS_Msk			(0x1UL<<TMR_CON_TMRMS_Pos)
#define	TMR_CON_TMRIE_Pos			(5)
#define TMR_CON_TMRIE_Msk			(0x1UL<<TMR_CON_TMRIE_Pos)
#define	TMR_CON_TMRPRE_Pos			(2)
#define TMR_CON_TMRPRE_Msk			(0x3UL<<TMR_CON_TMRPRE_Pos)
#define	TMR_CON_TMRSZ_Pos			(1)
#define TMR_CON_TMRSZ_Msk			(0x1UL<<TMR_CON_TMRSZ_Pos)
#define	TMR_CON_TMROS_Pos			(0)
#define TMR_CON_TMROS_Msk			(0x1UL<<TMR_CON_TMROS_Pos)

/* =========================================================  LOAD  ========================================================== */
/* ==========================================================  VAL  ========================================================== */
/* ==========================================================  RIS  ========================================================== */
#define	TMR_RIS_RIS_Pos				(0)
#define TMR_RIS_RIS_Msk				(0x1UL<<TMR_RIS_RIS_Pos)

/* ==========================================================  MIS  ========================================================== */
#define	TMR_MIS_MIS_Pos				(0)
#define TMR_MIS_MIS_Msk				(0x1UL<<TMR_MIS_MIS_Pos)

/* =========================================================  ICLR  ========================================================== */
#define	TMR_ICLR_ICLR_Pos			(0)
#define TMR_ICLR_ICLR_Msk			(0x1UL<<TMR_ICLR_ICLR_Pos)

/* ========================================================  BGLOAD  ========================================================= */


/* =========================================================================================================================== */
/* ================                                         LSITIMER                                          ================ */
/* =========================================================================================================================== */
#define	LSITIMER_CON0_RINTE_Pos			(15)
#define LSITIMER_CON0_RINTE_Msk			(0x1UL<<LSITIMER_CON0_RINTE_Pos)
#define	LSITIMER_CON0_ITCMP_Pos			(0)
#define LSITIMER_CON0_ITCMP_Msk			(0xFFFUL<<LSITIMER_CON0_ITCMP_Pos)

/* =========================================================  CON0  ========================================================== */


/* =========================================================================================================================== */
/* ================                                           EPWM                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CLKPSC  ========================================================= */
#define	EPWM_CLKPSC_CLKPSC45_Pos		(16)
#define EPWM_CLKPSC_CLKPSC45_Msk		(0xffUL<<EPWM_CLKPSC_CLKPSC45_Pos)
#define	EPWM_CLKPSC_CLKPSC23_Pos		(8)
#define EPWM_CLKPSC_CLKPSC23_Msk		(0xffUL<<EPWM_CLKPSC_CLKPSC23_Pos)
#define	EPWM_CLKPSC_CLKPSC01_Pos		(0)
#define EPWM_CLKPSC_CLKPSC01_Msk		(0xffUL<<EPWM_CLKPSC_CLKPSC01_Pos)
/* ========================================================  CLKDIV  ========================================================= */
#define	EPWM_CLKDIV_CLKDIV5_Pos			(20)
#define EPWM_CLKDIV_CLKDIV5_Msk			(0x7UL<<EPWM_CLKDIV_CLKDIV5_Pos)
#define	EPWM_CLKDIV_CLKDIV4_Pos			(16)
#define EPWM_CLKDIV_CLKDIV4_Msk			(0x7UL<<EPWM_CLKDIV_CLKDIV4_Pos)
#define	EPWM_CLKDIV_CLKDIV3_Pos			(12)
#define EPWM_CLKDIV_CLKDIV3_Msk			(0x7UL<<EPWM_CLKDIV_CLKDIV3_Pos)
#define	EPWM_CLKDIV_CLKDIV2_Pos			(8)
#define EPWM_CLKDIV_CLKDIV2_Msk			(0x7UL<<EPWM_CLKDIV_CLKDIV2_Pos)
#define	EPWM_CLKDIV_CLKDIV1_Pos			(4)
#define EPWM_CLKDIV_CLKDIV1_Msk			(0x7UL<<EPWM_CLKDIV_CLKDIV1_Pos)
#define	EPWM_CLKDIV_CLKDIV0_Pos			(0)
#define EPWM_CLKDIV_CLKDIV0_Msk			(0x7UL<<EPWM_CLKDIV_CLKDIV0_Pos)
/* ==========================================================  CON  ========================================================== */
#define	EPWM_CON_HALTMS_Pos				(26)
#define EPWM_CON_HALTMS_Msk				(0x1UL<<EPWM_CON_HALTMS_Pos)
#define	EPWM_CON_MODE_Pos				(24)
#define EPWM_CON_MODE_Msk				(0x3UL<<EPWM_CON_MODE_Pos)
#define	EPWM_CON_GROUNPEN_Pos			(23)
#define EPWM_CON_GROUNPEN_Msk			(0x1UL<<EPWM_CON_GROUNPEN_Pos)
#define	EPWM_CON_ASYMEN_Pos				(22)
#define EPWM_CON_ASYMEN_Msk				(0x1UL<<EPWM_CON_ASYMEN_Pos)
#define	EPWM_CON_CNTTYPE_Pos			(21)
#define EPWM_CON_CNTTYPE_Msk			(0x1UL<<EPWM_CON_CNTTYPE_Pos)
#define	EPWM_CON_ENDT45_Pos				(18)
#define EPWM_CON_ENDT45_Msk				(0x1UL<<EPWM_CON_ENDT45_Pos)
#define	EPWM_CON_ENDT23_Pos				(17)
#define EPWM_CON_ENDT23_Msk				(0x1UL<<EPWM_CON_ENDT23_Pos)
#define	EPWM_CON_ENDT01_Pos				(16)
#define EPWM_CON_ENDT01_Msk				(0x1UL<<EPWM_CON_ENDT01_Pos)
#define	EPWM_CON_PINV5_Pos				(13)
#define EPWM_CON_PINV5_Msk				(0x1UL<<EPWM_CON_PINV5_Pos)
#define	EPWM_CON_PINV4_Pos				(12)
#define EPWM_CON_PINV4_Msk				(0x1UL<<EPWM_CON_PINV4_Pos)
#define	EPWM_CON_PINV3_Pos				(11)
#define EPWM_CON_PINV3_Msk				(0x1UL<<EPWM_CON_PINV3_Pos)
#define	EPWM_CON_PINV2_Pos				(10)
#define EPWM_CON_PINV2_Msk				(0x1UL<<EPWM_CON_PINV2_Pos)
#define	EPWM_CON_PINV1_Pos				(9)
#define EPWM_CON_PINV1_Msk				(0x1UL<<EPWM_CON_PINV1_Pos)
#define	EPWM_CON_PINV0_Pos				(8)
#define EPWM_CON_PINV0_Msk				(0x1UL<<EPWM_CON_PINV0_Pos)
#define	EPWM_CON_CNTMODE5_Pos			(5)
#define EPWM_CON_CNTMODE5_Msk			(0x1UL<<EPWM_CON_CNTMODE5_Pos)
#define	EPWM_CON_CNTMODE4_Pos			(4)
#define EPWM_CON_CNTMODE4_Msk			(0x1UL<<EPWM_CON_CNTMODE4_Pos)
#define	EPWM_CON_CNTMODE3_Pos			(3)
#define EPWM_CON_CNTMODE3_Msk			(0x1UL<<EPWM_CON_CNTMODE3_Pos)
#define	EPWM_CON_CNTMODE2_Pos			(2)
#define EPWM_CON_CNTMODE2_Msk			(0x1UL<<EPWM_CON_CNTMODE2_Pos)
#define	EPWM_CON_CNTMODE1_Pos			(1)
#define EPWM_CON_CNTMODE1_Msk			(0x1UL<<EPWM_CON_CNTMODE1_Pos)
#define	EPWM_CON_CNTMODE0_Pos			(0)
#define EPWM_CON_CNTMODE0_Msk			(0x1UL<<EPWM_CON_CNTMODE0_Pos)
/* =========================================================  CON2  ========================================================== */
#define	EPWM_CON2_CNTEN5_Pos			(5)
#define EPWM_CON2_CNTEN5_Msk			(0x1UL<<EPWM_CON2_CNTEN5_Pos)
#define	EPWM_CON2_CNTEN4_Pos			(4)
#define EPWM_CON2_CNTEN4_Msk			(0x1UL<<EPWM_CON2_CNTEN4_Pos)
#define	EPWM_CON2_CNTEN3_Pos			(3)
#define EPWM_CON2_CNTEN3_Msk			(0x1UL<<EPWM_CON2_CNTEN3_Pos)
#define	EPWM_CON2_CNTEN2_Pos			(2)
#define EPWM_CON2_CNTEN2_Msk			(0x1UL<<EPWM_CON2_CNTEN2_Pos)
#define	EPWM_CON2_CNTEN1_Pos			(1)
#define EPWM_CON2_CNTEN1_Msk			(0x1UL<<EPWM_CON2_CNTEN1_Pos)
#define	EPWM_CON2_CNTEN0_Pos			(0)
#define EPWM_CON2_CNTEN0_Msk			(0x1UL<<EPWM_CON2_CNTEN0_Pos)
/* =========================================================  CON3  ========================================================== */
#define	EPWM_CON3_LOADNWINT_Pos			(31)
#define EPWM_CON3_LOADNWINT_Msk			(0x1UL<<EPWM_CON3_LOADNWINT_Pos)
#define	EPWM_CON3_LETGHALL_Pos			(30)
#define EPWM_CON3_LETGHALL_Msk			(0x1UL<<EPWM_CON3_LETGHALL_Pos)
#define	EPWM_CON3_LETGACMP1_Pos			(29)
#define EPWM_CON3_LETGACMP1_Msk			(0x1UL<<EPWM_CON3_LETGACMP1_Pos)
#define	EPWM_CON3_LETGACMP0_Pos			(28)
#define EPWM_CON3_LETGACMP0_Msk			(0x1UL<<EPWM_CON3_LETGACMP0_Pos)
#define	EPWM_CON3_LOADTYP5_Pos			(26)
#define EPWM_CON3_LOADTYP5_Msk			(0x3UL<<EPWM_CON3_LOADTYP5_Pos)
#define	EPWM_CON3_LOADTYP4_Pos			(24)
#define EPWM_CON3_LOADTYP4_Msk			(0x3UL<<EPWM_CON3_LOADTYP4_Pos)
#define	EPWM_CON3_LOADTYP3_Pos			(22)
#define EPWM_CON3_LOADTYP3_Msk			(0x3UL<<EPWM_CON3_LOADTYP3_Pos)
#define	EPWM_CON3_LOADTYP2_Pos			(20)
#define EPWM_CON3_LOADTYP2_Msk			(0x3UL<<EPWM_CON3_LOADTYP2_Pos)
#define	EPWM_CON3_LOADTYP1_Pos			(18)
#define EPWM_CON3_LOADTYP1_Msk			(0x3UL<<EPWM_CON3_LOADTYP1_Pos)
#define	EPWM_CON3_LOADTYP0_Pos			(16)
#define EPWM_CON3_LOADTYP0_Msk			(0x3UL<<EPWM_CON3_LOADTYP0_Pos)
#define	EPWM_CON3_LOADEN5_Pos			(13)
#define EPWM_CON3_LOADEN5_Msk			(0x1UL<<EPWM_CON3_LOADEN5_Pos)
#define	EPWM_CON3_LOADEN4_Pos			(12)
#define EPWM_CON3_LOADEN4_Msk			(0x3UL<<EPWM_CON3_LOADEN4_Pos)
#define	EPWM_CON3_LOADEN3_Pos			(11)
#define EPWM_CON3_LOADEN3_Msk			(0x1UL<<EPWM_CON3_LOADEN3_Pos)
#define	EPWM_CON3_LOADEN2_Pos			(10)
#define EPWM_CON3_LOADEN2_Msk			(0x1UL<<EPWM_CON3_LOADEN2_Pos)
#define	EPWM_CON3_LOADEN1_Pos			(9)
#define EPWM_CON3_LOADEN1_Msk			(0x1UL<<EPWM_CON3_LOADEN1_Pos)
#define	EPWM_CON3_LOADEN0_Pos			(8)
#define EPWM_CON3_LOADEN0_Msk			(0x1UL<<EPWM_CON3_LOADEN0_Pos)
#define	EPWM_CON3_CNTCLR5_Pos			(5)
#define EPWM_CON3_CNTCLR5_Msk			(0x1UL<<EPWM_CON3_CNTCLR5_Pos)
#define	EPWM_CON3_CNTCLR4_Pos			(4)
#define EPWM_CON3_CNTCLR4_Msk			(0x1UL<<EPWM_CON3_CNTCLR4_Pos)
#define	EPWM_CON3_CNTCLR3_Pos			(3)
#define EPWM_CON3_CNTCLR3_Msk			(0x1UL<<EPWM_CON3_CNTCLR3_Pos)
#define	EPWM_CON3_CNTCLR2_Pos			(2)
#define EPWM_CON3_CNTCLR2_Msk			(0x1UL<<EPWM_CON3_CNTCLR2_Pos)
#define	EPWM_CON3_CNTCLR1_Pos			(1)
#define EPWM_CON3_CNTCLR1_Msk			(0x1UL<<EPWM_CON3_CNTCLR1_Pos)
#define	EPWM_CON3_CNTCLR0_Pos			(0)
#define EPWM_CON3_CNTCLR0_Msk			(0x1UL<<EPWM_CON3_CNTCLR0_Pos)
/* ========================================================  PERIOD0  ======================================================== */
/* ========================================================  PERIOD1  ======================================================== */
/* ========================================================  PERIOD2  ======================================================== */
/* ========================================================  PERIOD3  ======================================================== */
/* ========================================================  PERIOD4  ======================================================== */
/* ========================================================  PERIOD5  ======================================================== */
/* ========================================================  CMPDAT0  ======================================================== */
/* ========================================================  CMPDAT1  ======================================================== */
/* ========================================================  CMPDAT2  ======================================================== */
/* ========================================================  CMPDAT3  ======================================================== */
/* ========================================================  CMPDAT4  ======================================================== */
/* ========================================================  CMPDAT5  ======================================================== */
/* ========================================================  POREMAP  ======================================================== */
#define	EPWM_POREMAP_PWMRMEN_Pos		(24)
#define EPWM_POREMAP_PWMRMEN_Msk		(0xffUL<<EPWM_POREMAP_PWMRMEN_Pos)
#define	EPWM_POREMAP_PWM5RM_Pos			(20)
#define EPWM_POREMAP_PWM5RM_Msk			(0x7UL<<EPWM_POREMAP_PWM5RM_Pos)
#define	EPWM_POREMAP_PWM4RM_Pos			(16)
#define EPWM_POREMAP_PWM4RM_Msk			(0x7UL<<EPWM_POREMAP_PWM4RM_Pos)
#define	EPWM_POREMAP_PWM3RM_Pos			(12)
#define EPWM_POREMAP_PWM3RM_Msk			(0x7UL<<EPWM_POREMAP_PWM3RM_Pos)
#define	EPWM_POREMAP_PWM2RM_Pos			(8)
#define EPWM_POREMAP_PWM2RM_Msk			(0x7UL<<EPWM_POREMAP_PWM2RM_Pos)
#define	EPWM_POREMAP_PWM1RM_Pos			(4)
#define EPWM_POREMAP_PWM1RM_Msk			(0x7UL<<EPWM_POREMAP_PWM1RM_Pos)
#define	EPWM_POREMAP_PWM0RM_Pos			(0)
#define EPWM_POREMAP_PWM0RM_Msk			(0x7UL<<EPWM_POREMAP_PWM0RM_Pos)
/* =========================================================  POEN  ========================================================== */
#define	EPWM_POEN_MASKLE_Pos			(11)
#define EPWM_POEN_MASKLE_Msk			(0x1UL<<EPWM_POEN_MASKLE_Pos)
#define	EPWM_POEN_MASKLS_Pos			(8)
#define EPWM_POEN_MASKLS_Msk			(0x7UL<<EPWM_POEN_MASKLS_Pos)
#define	EPWM_POEN_POEN5_Pos				(5)
#define EPWM_POEN_POEN5_Msk				(0x1UL<<EPWM_POEN_POEN5_Pos)
#define	EPWM_POEN_POEN4_Pos				(4)
#define EPWM_POEN_POEN4_Msk				(0x1UL<<EPWM_POEN_POEN4_Pos)
#define	EPWM_POEN_POEN3_Pos				(3)
#define EPWM_POEN_POEN3_Msk				(0x1UL<<EPWM_POEN_POEN3_Pos)
#define	EPWM_POEN_POEN2_Pos				(2)
#define EPWM_POEN_POEN2_Msk				(0x1UL<<EPWM_POEN_POEN2_Pos)
#define	EPWM_POEN_POEN1_Pos				(1)
#define EPWM_POEN_POEN1_Msk				(0x1UL<<EPWM_POEN_POEN1_Pos)
#define	EPWM_POEN_POEN0_Pos				(0)
#define EPWM_POEN_POEN0_Msk				(0x1UL<<EPWM_POEN_POEN0_Pos)
/* ========================================================  BRKCTL  ========================================================= */
#define	EPWM_BRKCTL_BRKEN_Pos			(31)
#define EPWM_BRKCTL_BRKEN_Msk			(0x1UL<<EPWM_BRKCTL_BRKEN_Pos)
#define	EPWM_BRKCTL_BRKAF_Pos			(30)
#define EPWM_BRKCTL_BRKAF_Msk			(0x1UL<<EPWM_BRKCTL_BRKAF_Pos)
#define	EPWM_BRKCTL_BRKMS_Pos			(28)
#define EPWM_BRKCTL_BRKMS_Msk			(0x3UL<<EPWM_BRKCTL_BRKMS_Pos)
#define	EPWM_BRKCTL_BRKCLR_Pos			(27)
#define EPWM_BRKCTL_BRKCLR_Msk			(0x1UL<<EPWM_BRKCTL_BRKCLR_Pos)
#define	EPWM_BRKCTL_BRKRCS_Pos			(24)
#define EPWM_BRKCTL_BRKRCS_Msk			(0x7UL<<EPWM_BRKCTL_BRKRCS_Pos)
#define	EPWM_BRKCTL_ACMP1BKLE_Pos		(23)
#define EPWM_BRKCTL_ACMP1BKLE_Msk		(0x1UL<<EPWM_BRKCTL_ACMP1BKLE_Pos)
#define	EPWM_BRKCTL_ACMP1BKLS_Pos		(22)
#define EPWM_BRKCTL_ACMP1BKLS_Msk		(0x1UL<<EPWM_BRKCTL_ACMP1BKLS_Pos)
#define	EPWM_BRKCTL_ACMP0BKLE_Pos		(21)
#define EPWM_BRKCTL_ACMP0BKLE_Msk		(0x1UL<<EPWM_BRKCTL_ACMP0BKLE_Pos)
#define	EPWM_BRKCTL_ACMP0BKLS_Pos		(20)
#define EPWM_BRKCTL_ACMP0BKLS_Msk		(0x1UL<<EPWM_BRKCTL_ACMP0BKLS_Pos)
#define	EPWM_BRKCTL_ACMP1BKEN_Pos		(19)
#define EPWM_BRKCTL_ACMP1BKEN_Msk		(0x1UL<<EPWM_BRKCTL_ACMP1BKEN_Pos)
#define	EPWM_BRKCTL_ACMP0BKEN_Pos		(18)
#define EPWM_BRKCTL_ACMP0BKEN_Msk		(0x1UL<<EPWM_BRKCTL_ACMP0BKEN_Pos)
#define	EPWM_BRKCTL_ADCBPM1BKEN_Pos		(17)
#define EPWM_BRKCTL_ADCBPM1BKEN_Msk		(0x1UL<<EPWM_BRKCTL_ADCBPM1BKEN_Pos)
#define	EPWM_BRKCTL_ADCBPM0BKEN_Pos		(16)
#define EPWM_BRKCTL_ADCBPM0BKEN_Msk		(0x1UL<<EPWM_BRKCTL_ADCBPM0BKEN_Pos)
//#define	EPWM_BRKCTL_ADCAPM0BKEN_Pos		(14)
//#define EPWM_BRKCTL_ADCAPM0BKEN_Msk		(0x1UL<<EPWM_BRKCTL_ADCAPM0BKEN_Pos)
#define	EPWM_BRKCTL_BRKOSF_Pos			(13)
#define EPWM_BRKCTL_BRKOSF_Msk			(0x1UL<<EPWM_BRKCTL_BRKOSF_Pos)
#define	EPWM_BRKCTL_SWBRK_Pos			(12)
#define EPWM_BRKCTL_SWBRK_Msk			(0x1UL<<EPWM_BRKCTL_SWBRK_Pos)
#define	EPWM_BRKCTL_EXTBRKEE_Pos		(11)
#define EPWM_BRKCTL_EXTBRKEE_Msk		(0x1UL<<EPWM_BRKCTL_EXTBRKEE_Pos)
#define	EPWM_BRKCTL_EXTBRKES_Pos		(10)
#define EPWM_BRKCTL_EXTBRKES_Msk		(0x1UL<<EPWM_BRKCTL_EXTBRKES_Pos)
#define	EPWM_BRKCTL_EXTBRKLE_Pos		(9)
#define EPWM_BRKCTL_EXTBRKLE_Msk		(0x1UL<<EPWM_BRKCTL_EXTBRKLE_Pos)
#define	EPWM_BRKCTL_EXTBRKLS_Pos		(8)
#define EPWM_BRKCTL_EXTBRKLS_Msk		(0x1UL<<EPWM_BRKCTL_EXTBRKLS_Pos)
#define	EPWM_BRKCTL_BRKODn_Pos			(0)
#define EPWM_BRKCTL_BRKODn_Msk			(0x3fUL<<EPWM_BRKCTL_BRKODn_Pos)
/* =========================================================  DTCTL  ========================================================= */
#define	EPWM_DTCTL_DTI45_Pos			(20)
#define EPWM_DTCTL_DTI45_Msk			(0x3ffUL<<EPWM_DTCTL_DTI45_Pos)
#define	EPWM_DTCTL_DTI23_Pos			(10)
#define EPWM_DTCTL_DTI23_Msk			(0x3ffUL<<EPWM_DTCTL_DTI23_Pos)
#define	EPWM_DTCTL_DTI01_Pos			(0)
#define EPWM_DTCTL_DTI01_Msk			(0x3ffUL<<EPWM_DTCTL_DTI01_Pos)
/* =========================================================  MASK  ========================================================== */
#define	EPWM_MASK_MASKEN5_Pos			(13)
#define EPWM_MASK_MASKEN5_Msk			(0x1UL<<EPWM_MASK_MASKEN5_Pos)
#define	EPWM_MASK_MASKEN4_Pos			(12)
#define EPWM_MASK_MASKEN4_Msk			(0x1UL<<EPWM_MASK_MASKEN4_Pos)
#define	EPWM_MASK_MASKEN3_Pos			(11)
#define EPWM_MASK_MASKEN3_Msk			(0x1UL<<EPWM_MASK_MASKEN3_Pos)
#define	EPWM_MASK_MASKEN2_Pos			(10)
#define EPWM_MASK_MASKEN2_Msk			(0x1UL<<EPWM_MASK_MASKEN2_Pos)
#define	EPWM_MASK_MASKEN1_Pos			(9)
#define EPWM_MASK_MASKEN1_Msk			(0x1UL<<EPWM_MASK_MASKEN1_Pos)
#define	EPWM_MASK_MASKEN0_Pos			(8)
#define EPWM_MASK_MASKEN0_Msk			(0x1UL<<EPWM_MASK_MASKEN0_Pos)
#define	EPWM_MASK_MASKD5_Pos			(5)
#define EPWM_MASK_MASKD5_Msk			(0x1UL<<EPWM_MASK_MASKD5_Pos)
#define	EPWM_MASK_MASKD4_Pos			(4)
#define EPWM_MASK_MASKD4_Msk			(0x1UL<<EPWM_MASK_MASKD4_Pos)
#define	EPWM_MASK_MASKD3_Pos			(3)
#define EPWM_MASK_MASKD3_Msk			(0x1UL<<EPWM_MASK_MASKD3_Pos)
#define	EPWM_MASK_MASKD2_Pos			(2)
#define EPWM_MASK_MASKD2_Msk			(0x1UL<<EPWM_MASK_MASKD2_Pos)
#define	EPWM_MASK_MASKD1_Pos			(1)
#define EPWM_MASK_MASKD1_Msk			(0x1UL<<EPWM_MASK_MASKD1_Pos)
#define	EPWM_MASK_MASKD0_Pos			(0)
#define EPWM_MASK_MASKD0_Msk			(0x1UL<<EPWM_MASK_MASKD0_Pos)
/* ========================================================  MASKNXT  ======================================================== */
#define	EPWM_MASKNXT_HALLEN_Pos			(24)
#define EPWM_MASKNXT_HALLEN_Msk			(0x1UL<<EPWM_MASKNXT_HALLEN_Pos)
#define	EPWM_MASKNXT_HALLCLR_Pos		(23)
#define EPWM_MASKNXT_HALLCLR_Msk		(0x1UL<<EPWM_MASKNXT_HALLCLR_Pos)
#define	EPWM_MASKNXT_HALLST_Pos			(20)
#define EPWM_MASKNXT_HALLST_Msk			(0x7UL<<EPWM_MASKNXT_HALLST_Pos)
#define	EPWM_MASKNXT_PMASKSEL_Pos		(16)
#define EPWM_MASKNXT_PMASKSEL_Msk		(0x7UL<<EPWM_MASKNXT_PMASKSEL_Pos)
#define	EPWM_MASKNXT_PMASKEN5_Pos		(13)
#define EPWM_MASKNXT_PMASKEN5_Msk		(0x1UL<<EPWM_MASKNXT_PMASKEN5_Pos)
#define	EPWM_MASKNXT_PMASKEN4_Pos		(12)
#define EPWM_MASKNXT_PMASKEN4_Msk		(0x1UL<<EPWM_MASKNXT_PMASKEN4_Pos)
#define	EPWM_MASKNXT_PMASKEN3_Pos		(11)
#define EPWM_MASKNXT_PMASKEN3_Msk		(0x1UL<<EPWM_MASKNXT_PMASKEN3_Pos)
#define	EPWM_MASKNXT_PMASKEN2_Pos		(10)
#define EPWM_MASKNXT_PMASKEN2_Msk		(0x1UL<<EPWM_MASKNXT_PMASKEN2_Pos)
#define	EPWM_MASKNXT_PMASKEN1_Pos		(9)
#define EPWM_MASKNXT_PMASKEN1_Msk		(0x1UL<<EPWM_MASKNXT_PMASKEN1_Pos)
#define	EPWM_MASKNXT_PMASKEN0_Pos		(8)
#define EPWM_MASKNXT_PMASKEN0_Msk		(0x1UL<<EPWM_MASKNXT_PMASKEN0_Pos)
#define	EPWM_MASKNXT_PMASKD5_Pos		(5)
#define EPWM_MASKNXT_PMASKD5_Msk		(0x1UL<<EPWM_MASKNXT_PMASKD5_Pos)
#define	EPWM_MASKNXT_PMASKD4_Pos		(4)
#define EPWM_MASKNXT_PMASKD4_Msk		(0x1UL<<EPWM_MASKNXT_PMASKD4_Pos)
#define	EPWM_MASKNXT_PMASKD3_Pos		(3)
#define EPWM_MASKNXT_PMASKD3_Msk		(0x1UL<<EPWM_MASKNXT_PMASKD3_Pos)
#define	EPWM_MASKNXT_PMASKD2_Pos		(2)
#define EPWM_MASKNXT_PMASKD2_Msk		(0x1UL<<EPWM_MASKNXT_PMASKD2_Pos)
#define	EPWM_MASKNXT_PMASKD1_Pos		(1)
#define EPWM_MASKNXT_PMASKD1_Msk		(0x1UL<<EPWM_MASKNXT_PMASKD1_Pos)
#define	EPWM_MASKNXT_PMASKD0_Pos		(0)
#define EPWM_MASKNXT_PMASKD0_Msk		(0x1UL<<EPWM_MASKNXT_PMASKD0_Pos)
/* ========================================================  CMPTGD0  ======================================================== */
#define	EPWM_CMPTGD_CMPTGDS_Pos			(19)
#define EPWM_CMPTGD_CMPTGDS_Msk			(0x1UL<<EPWM_CMPTGD_CMPTGDS_Pos)
#define	EPWM_CMPTGD_CMPPCHS_Pos			(16)
#define EPWM_CMPTGD_CMPPCHS_Msk			(0x7UL<<EPWM_CMPTGD_CMPPCHS_Pos)
#define	EPWM_CMPTGD_CMPTGD_Pos			(0)
#define EPWM_CMPTGD_CMPTGD_Msk			(0xffffUL<<EPWM_CMPTGD_CMPTGD_Pos)
/* ========================================================  CMPTGD1  ======================================================== */
/* =========================================================  IMSC  ========================================================== */
#define	EPWM_IMSC_ENBRKIF_Pos			(31)
#define EPWM_IMSC_ENBRKIF_Msk			(0x1UL<<EPWM_IMSC_ENBRKIF_Pos)
#define	EPWM_IMSC_ENHALLIF_Pos			(30)
#define EPWM_IMSC_ENHALLIF_Msk			(0x1UL<<EPWM_IMSC_ENHALLIF_Pos)
#define	EPWM_IMSC_ENDIFn_Pos			(24)
#define EPWM_IMSC_ENDIFn_Msk			(0x3fUL<<EPWM_IMSC_ENDIFn_Pos)
#define	EPWM_IMSC_ENUIFn_Pos			(16)
#define EPWM_IMSC_ENUIFn_Msk			(0x3fUL<<EPWM_IMSC_ENUIFn_Pos)
#define	EPWM_IMSC_ENDC1IF_Pos			(15)
#define EPWM_IMSC_ENDC1IF_Msk			(0x1UL<<EPWM_IMSC_ENDC1IF_Pos)
#define	EPWM_IMSC_ENDC0IF_Pos			(14)
#define EPWM_IMSC_ENDC0IF_Msk			(0x1UL<<EPWM_IMSC_ENDC0IF_Pos)
#define	EPWM_IMSC_ENPIFn_Pos			(8)
#define EPWM_IMSC_ENPIFn_Msk			(0x3fUL<<EPWM_IMSC_ENPIFn_Pos)
#define	EPWM_IMSC_ENZIFn_Pos			(0)
#define EPWM_IMSC_ENZIFn_Msk			(0x3fUL<<EPWM_IMSC_ENZIFn_Pos)
/* ==========================================================  RIS  ========================================================== */
#define	EPWM_RIS_BRKIF_Pos				(31)
#define EPWM_RIS_BRKIF_Msk				(0x1UL<<EPWM_RIS_BRKIF_Pos)
#define	EPWM_RIS_HALLIF_Pos				(30)
#define EPWM_RIS_HALLIF_Msk				(0x1UL<<EPWM_RIS_HALLIF_Pos)
#define	EPWM_RIS_DIFn_Pos				(24)
#define EPWM_RIS_DIFn_Msk				(0x3fUL<<EPWM_RIS_DIFn_Pos)	
#define	EPWM_RIS_UIFn_Pos				(16)
#define EPWM_RIS_UIFn_Msk				(0x3fUL<<EPWM_RIS_UIFn_Pos)	
#define	EPWM_RIS_DC1IF_Pos				(15)
#define EPWM_RIS_DC1IF_Msk				(0x1UL<<EPWM_RIS_DC1IF_Pos)	
#define	EPWM_RIS_DC0IF_Pos				(14)
#define EPWM_RIS_DC0IF_Msk				(0x1UL<<EPWM_RIS_DC0IF_Pos)	
#define	EPWM_RIS_PIFn_Pos				(8)
#define EPWM_RIS_PIFn_Msk				(0x3fUL<<EPWM_RIS_PIFn_Pos)	
#define	EPWM_RIS_ZIFn_Pos				(0)
#define EPWM_RIS_ZIFn_Msk				(0x3fUL<<EPWM_RIS_ZIFn_Pos)
/* ==========================================================  MIS  ========================================================== */
#define	EPWM_MIS_BRKIF_Pos				(31)
#define EPWM_MIS_BRKIF_Msk				(0x1UL<<EPWM_MIS_BRKIF_Pos)
#define	EPWM_MIS_HALLIF_Pos				(30)
#define EPWM_MIS_HALLIF_Msk				(0x1UL<<EPWM_MIS_HALLIF_Pos)
#define	EPWM_MIS_DIFn_Pos				(24)
#define EPWM_MIS_DIFn_Msk				(0x3fUL<<EPWM_MIS_DIFn_Pos)	
#define	EPWM_MIS_UIFn_Pos				(16)
#define EPWM_MIS_UIFn_Msk				(0x3fUL<<EPWM_MIS_UIFn_Pos)	
#define	EPWM_MIS_DC1IF_Pos				(15)
#define EPWM_MIS_DC1IF_Msk				(0x1UL<<EPWM_MIS_DC1IF_Pos)	
#define	EPWM_MIS_DC0IF_Pos				(14)
#define EPWM_MIS_DC0IF_Msk				(0x1UL<<EPWM_MIS_DC0IF_Pos)	
#define	EPWM_MIS_PIFn_Pos				(8)
#define EPWM_MIS_PIFn_Msk				(0x3fUL<<EPWM_MIS_PIFn_Pos)	
#define	EPWM_MIS_ZIFn_Pos				(0)
#define EPWM_MIS_ZIFn_Msk				(0x3fUL<<EPWM_MIS_ZIFn_Pos)
/* =========================================================  ICLR  ========================================================== */
#define	EPWM_ICLR_BRKIF_Pos				(31)
#define EPWM_ICLR_BRKIF_Msk				(0x1UL<<EPWM_ICLR_BRKIF_Pos)
#define	EPWM_ICLR_HALLIF_Pos			(30)
#define EPWM_ICLR_HALLIF_Msk			(0x1UL<<EPWM_ICLR_HALLIF_Pos)
#define	EPWM_ICLR_DIFn_Pos				(24)
#define EPWM_ICLR_DIFn_Msk				(0x3fUL<<EPWM_ICLR_DIFn_Pos)	
#define	EPWM_ICLR_UIFn_Pos				(16)
#define EPWM_ICLR_UIFn_Msk				(0x3fUL<<EPWM_ICLR_UIFn_Pos)	
#define	EPWM_ICLR_DC1IF_Pos				(15)
#define EPWM_ICLR_DC1IF_Msk				(0x1UL<<EPWM_ICLR_DC1IF_Pos)	
#define	EPWM_ICLR_DC0IF_Pos				(14)
#define EPWM_ICLR_DC0IF_Msk				(0x1UL<<EPWM_ICLR_DC0IF_Pos)	
#define	EPWM_ICLR_PIFn_Pos				(8)
#define EPWM_ICLR_PIFn_Msk				(0x3fUL<<EPWM_ICLR_PIFn_Pos)	
#define	EPWM_ICLR_ZIFn_Pos				(0)
#define EPWM_ICLR_ZIFn_Msk				(0x3fUL<<EPWM_ICLR_ZIFn_Pos)
/* ==========================================================  IFA  ========================================================== */
#define	EPWM_IFA_BRKIFCMP_Pos			(12)
#define EPWM_IFA_BRKIFCMP_Msk			(0xfUL<<EPWM_IFA_BRKIFCMP_Pos)
#define	EPWM_IFA_BRKIFAEN_Pos			(8)
#define EPWM_IFA_BRKIFAEN_Msk			(0x1UL<<EPWM_IFA_BRKIFAEN_Pos)
#define	EPWM_IFA_ZIFCMP_Pos				(4)
#define EPWM_IFA_ZIFCMP_Msk				(0xfUL<<EPWM_IFA_ZIFCMP_Pos)
#define	EPWM_IFA_ZIFAEN_Pos				(0)
#define EPWM_IFA_ZIFAEN_Msk				(0x1UL<<EPWM_IFA_ZIFAEN_Pos)
/* =========================================================  BRKRDT  ========================================================== */
#define	EPWM_BRKRDT_FILS_Pos			(16)
#define EPWM_BRKRDT_FILS_Msk			(0xfUL<<EPWM_BRKRDT_FILS_Pos)
#define	EPWM_BRKRDT_RDT_Pos				(0)
#define EPWM_BRKRDT_RDT_Msk				(0xffffUL<<EPWM_BRKRDT_RDT_Pos)

/* =========================================================================================================================== */
/* ================                                            CCP                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CCPCON0  ======================================================== */
#define	CCP_CCPCON0_CCP0ZBEN_Pos	(9)
#define CCP_CCPCON0_CCP0ZBEN_Msk	(0x1UL<<CCP_CCPCON0_CCP0ZBEN_Pos)
#define	CCP_CCPCON0_CCP0ZAEN_Pos	(8)
#define CCP_CCPCON0_CCP0ZAEN_Msk	(0x1UL<<CCP_CCPCON0_CCP0ZAEN_Pos)
#define	CCP_CCPCON0_CCP0EN_Pos		(6)
#define CCP_CCPCON0_CCP0EN_Msk		(0x1UL<<CCP_CCPCON0_CCP0EN_Pos)
#define	CCP_CCPCON0_CCP0PS_Pos		(4)
#define CCP_CCPCON0_CCP0PS_Msk		(0x3UL<<CCP_CCPCON0_CCP0PS_Pos)
#define	CCP_CCPCON0_CCP0MS_Pos		(3)
#define CCP_CCPCON0_CCP0MS_Msk		(0x1UL<<CCP_CCPCON0_CCP0MS_Pos)
#define	CCP_CCPCON0_CCP0CM0CS_Pos	(2)
#define CCP_CCPCON0_CCP0CM0CS_Msk	(0x1UL<<CCP_CCPCON0_CCP0CM0CS_Pos)
#define	CCP_CCPCON0_CCP0CM0ES_Pos	(0)
#define CCP_CCPCON0_CCP0CM0ES_Msk	(0x3UL<<CCP_CCPCON0_CCP0CM0ES_Pos)
/* =======================================================  CCPLOAD0  ======================================================== */
#define	CCP_CCPLOAD0_RELOAD_Pos		(16)
#define CCP_CCPLOAD0_RELOAD_Msk		(0x1UL<<CCP_CCPLOAD0_RELOAD_Pos)
#define	CCP_CCPLOAD0_LOAD_Pos		(0)
#define CCP_CCPLOAD0_LOAD_Msk		(0xffffUL<<CCP_CCPLOAD0_LOAD_Pos)
/* ========================================================  CCPD0A  ========================================================= */
#define	CCP_CCPD0A_PWM0AOP_Pos		(16)
#define CCP_CCPD0A_PWM0AOP_Msk		(0x1UL<<CCP_CCPD0A_PWM0AOP_Pos)
#define	CCP_CCPD0A_DATA_Pos			(0)
#define CCP_CCPD0A_DATA_Msk			(0xffffUL<<CCP_CCPD0A_DATA_Pos)
/* ========================================================  CCPD0B  ========================================================= */
#define	CCP_CCPD0B_PWM0BOP_Pos		(16)
#define CCP_CCPD0B_PWM0BOP_Msk		(0x1UL<<CCP_CCPD0B_PWM0BOP_Pos)
#define	CCP_CCPD0B_DATA_Pos			(0)
#define CCP_CCPD0B_DATA_Msk			(0xffffUL<<CCP_CCPD0B_DATA_Pos)
/* ========================================================  CCPCON1  ======================================================== */
#define	CCP_CCPCON1_CCP1ZBEN_Pos	(9)
#define CCP_CCPCON1_CCP1ZBEN_Msk	(0x1UL<<CCP_CCPCON1_CCP1ZBEN_Pos)
#define	CCP_CCPCON1_CCP1ZAEN_Pos	(8)
#define CCP_CCPCON1_CCP1ZAEN_Msk	(0x1UL<<CCP_CCPCON1_CCP1ZAEN_Pos)
#define	CCP_CCPCON1_CCP1EN_Pos		(6)
#define CCP_CCPCON1_CCP1EN_Msk		(0x1UL<<CCP_CCPCON1_CCP1EN_Pos)
#define	CCP_CCPCON1_CCP1PS_Pos		(4)
#define CCP_CCPCON1_CCP1PS_Msk		(0x3UL<<CCP_CCPCON1_CCP1PS_Pos)
#define	CCP_CCPCON1_CCP1MS_Pos		(3)
#define CCP_CCPCON1_CCP1MS_Msk		(0x1UL<<CCP_CCPCON1_CCP1MS_Pos)
#define	CCP_CCPCON1_CCP1CM0CS_Pos	(2)
#define CCP_CCPCON1_CCP1CM0CS_Msk	(0x1UL<<CCP_CCPCON1_CCP1CM0CS_Pos)
#define	CCP_CCPCON1_CCP1CM0ES_Pos	(0)
#define CCP_CCPCON1_CCP1CM0ES_Msk	(0x3UL<<CCP_CCPCON1_CCP1CM0ES_Pos)
/* =======================================================  CCPLOAD1  ======================================================== */
#define	CCP_CCPLOAD1_RELOAD_Pos		(16)
#define CCP_CCPLOAD1_RELOAD_Msk		(0x1UL<<CCP_CCPLOAD1_RELOAD_Pos)
#define	CCP_CCPLOAD1_LOAD_Pos		(0)
#define CCP_CCPLOAD1_LOAD_Msk		(0xffffUL<<CCP_CCPLOAD1_LOAD_Pos)
/* ========================================================  CCPD1A  ========================================================= */
#define	CCP_CCPD1A_PWM1AOP_Pos		(16)
#define CCP_CCPD1A_PWM1AOP_Msk		(0x1UL<<CCP_CCPD1A_PWM1AOP_Pos)
#define	CCP_CCPD1A_DATA_Pos			(0)
#define CCP_CCPD1A_DATA_Msk			(0xffffUL<<CCP_CCPD1A_DATA_Pos)
/* ========================================================  CCPD1B  ========================================================= */
#define	CCP_CCPD1B_PWM1BOP_Pos		(16)
#define CCP_CCPD1B_PWM1BOP_Msk		(0x1UL<<CCP_CCPD1B_PWM1BOP_Pos)
#define	CCP_CCPD1B_DATA_Pos			(0)
#define CCP_CCPD1B_DATA_Msk			(0xffffUL<<CCP_CCPD1B_DATA_Pos)
/* ========================================================  CCPIMSC  ======================================================== */
#define	CCP_CCPIMSC_CAP3IMSC_Pos	(11)
#define CCP_CCPIMSC_CAP3IMSC_Msk	(0x1UL<<CCP_CCPIMSC_CAP3IMSC_Pos)
#define	CCP_CCPIMSC_CAP2IMSC_Pos	(10)
#define CCP_CCPIMSC_CAP2IMSC_Msk	(0x1UL<<CCP_CCPIMSC_CAP2IMSC_Pos)
#define	CCP_CCPIMSC_CAP1IMSC_Pos	(9)
#define CCP_CCPIMSC_CAP1IMSC_Msk	(0x1UL<<CCP_CCPIMSC_CAP1IMSC_Pos)
#define	CCP_CCPIMSC_CAP0IMSC_Pos	(8)
#define CCP_CCPIMSC_CAP0IMSC_Msk	(0x1UL<<CCP_CCPIMSC_CAP0IMSC_Pos)
#define	CCP_CCPIMSC_PWMIMSC5_Pos	(5)
#define CCP_CCPIMSC_PWMIMSC5_Msk	(0x1UL<<CCP_CCPIMSC_PWMIMSC5_Pos)
#define	CCP_CCPIMSC_PWMIMSC4_Pos	(4)
#define CCP_CCPIMSC_PWMIMSC4_Msk	(0x1UL<<CCP_CCPIMSC_PWMIMSC4_Pos)
#define	CCP_CCPIMSC_PWMIMSC1_Pos	(1)
#define CCP_CCPIMSC_PWMIMSC1_Msk	(0x1UL<<CCP_CCPIMSC_PWMIMSC1_Pos)
#define	CCP_CCPIMSC_PWMIMSC0_Pos	(0)
#define CCP_CCPIMSC_PWMIMSC0_Msk	(0x1UL<<CCP_CCPIMSC_PWMIMSC0_Pos)
/* ========================================================  CCPRIS  ========================================================= */
#define	CCP_CCPRIS_CAP3IRIS_Pos		(11)
#define CCP_CCPRIS_CAP3IRIS_Msk		(0x1UL<<CCP_CCPRIS_CAP3IRIS_Pos)
#define	CCP_CCPRIS_CAP2IRIS_Pos		(10)
#define CCP_CCPRIS_CAP2IRIS_Msk		(0x1UL<<CCP_CCPRIS_CAP2IRIS_Pos)
#define	CCP_CCPRIS_CAP1IRIS_Pos		(9)
#define CCP_CCPRIS_CAP1IRIS_Msk		(0x1UL<<CCP_CCPRIS_CAP1IRIS_Pos)
#define	CCP_CCPRIS_CAP0IRIS_Pos		(8)
#define CCP_CCPRIS_CAP0IRIS_Msk		(0x1UL<<CCP_CCPRIS_CAP0IRIS_Pos)
#define	CCP_CCPRIS_PWMRIS5_Pos		(5)
#define CCP_CCPRIS_PWMRIS5_Msk		(0x1UL<<CCP_CCPRIS_PWMRIS5_Pos)
#define	CCP_CCPRIS_PWMRIS4_Pos		(4)
#define CCP_CCPRIS_PWMRIS4_Msk		(0x1UL<<CCP_CCPRIS_PWMRIS4_Pos)
#define	CCP_CCPRIS_PWMRIS1_Pos		(1)
#define CCP_CCPRIS_PWMRIS1_Msk		(0x1UL<<CCP_CCPRIS_PWMRIS1_Pos)
#define	CCP_CCPRIS_PWMRIS0_Pos		(0)
#define CCP_CCPRIS_PWMRIS0_Msk		(0x1UL<<CCP_CCPRIS_PWMRIS0_Pos)
/* ========================================================  CCPMIS  ========================================================= */
#define	CCP_CCPMIS_CAP3IMIS_Pos		(11)
#define CCP_CCPMIS_CAP3IMIS_Msk		(0x1UL<<CCP_CCPMIS_CAP3IMIS_Pos)
#define	CCP_CCPMIS_CAP2IMIS_Pos		(10)
#define CCP_CCPMIS_CAP2IMIS_Msk		(0x1UL<<CCP_CCPMIS_CAP2IMIS_Pos)
#define	CCP_CCPMIS_CAP1IMIS_Pos		(9)
#define CCP_CCPMIS_CAP1IMIS_Msk		(0x1UL<<CCP_CCPMIS_CAP1IMIS_Pos)
#define	CCP_CCPMIS_CAP0IMIS_Pos		(8)
#define CCP_CCPMIS_CAP0IMIS_Msk		(0x1UL<<CCP_CCPMIS_CAP0IMIS_Pos)
#define	CCP_CCPMIS_PWMMIS5_Pos		(5)
#define CCP_CCPMIS_PWMMIS5_Msk		(0x1UL<<CCP_CCPMIS_PWMMIS5_Pos)
#define	CCP_CCPMIS_PWMMIS4_Pos		(4)
#define CCP_CCPMIS_PWMMIS4_Msk		(0x1UL<<CCP_CCPMIS_PWMMIS4_Pos)
#define	CCP_CCPMIS_PWMMIS1_Pos		(1)
#define CCP_CCPMIS_PWMMIS1_Msk		(0x1UL<<CCP_CCPMIS_PWMMIS1_Pos)
#define	CCP_CCPMIS_PWMMIS0_Pos		(0)
#define CCP_CCPMIS_PWMMIS0_Msk		(0x1UL<<CCP_CCPMIS_PWMMIS0_Pos)
/* ========================================================  CCPICLR  ======================================================== */
#define	CCP_CCPICLR_CAP3ICLR_Pos	(11)
#define CCP_CCPICLR_CAP3ICLR_Msk	(0x1UL<<CCP_CCPICLR_CAP3ICLR_Pos)
#define	CCP_CCPICLR_CAP2ICLR_Pos	(10)
#define CCP_CCPICLR_CAP2ICLR_Msk	(0x1UL<<CCP_CCPICLR_CAP2ICLR_Pos)
#define	CCP_CCPICLR_CAP1ICLR_Pos	(9)
#define CCP_CCPICLR_CAP1ICLR_Msk	(0x1UL<<CCP_CCPICLR_CAP1ICLR_Pos)
#define	CCP_CCPICLR_CAP0ICLR_Pos	(8)
#define CCP_CCPICLR_CAP0ICLR_Msk	(0x1UL<<CCP_CCPICLR_CAP0ICLR_Pos)
#define	CCP_CCPICLR_PWMMICLR5_Pos	(5)
#define CCP_CCPICLR_PWMMICLR5_Msk	(0x1UL<<CCP_CCPICLR_PWMMICLR5_Pos)
#define	CCP_CCPICLR_PWMMICLR4_Pos	(4)
#define CCP_CCPICLR_PWMMICLR4_Msk	(0x1UL<<CCP_CCPICLR_PWMMICLR4_Pos)
#define	CCP_CCPICLR_PWMMICLR1_Pos	(1)
#define CCP_CCPICLR_PWMMICLR1_Msk	(0x1UL<<CCP_CCPICLR_PWMMICLR1_Pos)
#define	CCP_CCPICLR_PWMMICLR0_Pos	(0)
#define CCP_CCPICLR_PWMMICLR0_Msk	(0x1UL<<CCP_CCPICLR_PWMMICLR0_Pos)
/* ========================================================  CCPRUN  ========================================================= */
#define	CCP_CCPRUN_CCPRUN1_Pos		(1)
#define CCP_CCPRUN_CCPRUN1_Msk		(0x1UL<<CCP_CCPRUN_CCPRUN1_Pos)
#define	CCP_CCPRUN_CCPRUN0_Pos		(0)
#define CCP_CCPRUN_CCPRUN0_Msk		(0x1UL<<CCP_CCPRUN_CCPRUN0_Pos)
/* ========================================================  CCPLOCK  ======================================================== */
/* ========================================================  CAPCON  ========================================================= */
#define	CCP_CAPCON_CAPEN2_Pos		(13)
#define CCP_CAPCON_CAPEN2_Msk		(0x1UL<<CCP_CAPCON_CAPEN2_Pos)
#define	CCP_CAPCON_CAPEN_Pos		(12)
#define CCP_CAPCON_CAPEN_Msk		(0x1UL<<CCP_CAPCON_CAPEN_Pos)
#define	CCP_CAPCON_CAP3RLEN_Pos		(11)
#define CCP_CAPCON_CAP3RLEN_Msk		(0x1UL<<CCP_CAPCON_CAP3RLEN_Pos)
#define	CCP_CAPCON_CAP2RLEN_Pos		(10)
#define CCP_CAPCON_CAP2RLEN_Msk		(0x1UL<<CCP_CAPCON_CAP2RLEN_Pos)
#define	CCP_CAPCON_CAP1RLEN_Pos		(9)
#define CCP_CAPCON_CAP1RLEN_Msk		(0x1UL<<CCP_CAPCON_CAP1RLEN_Pos)
#define	CCP_CAPCON_CAP0RLEN_Pos		(8)
#define CCP_CAPCON_CAP0RLEN_Msk		(0x1UL<<CCP_CAPCON_CAP0RLEN_Pos)
#define	CCP_CAPCON_CAP3ES_Pos		(6)
#define CCP_CAPCON_CAP3ES_Msk		(0x3UL<<CCP_CAPCON_CAP3ES_Pos)
#define	CCP_CAPCON_CAP2ES_Pos		(4)
#define CCP_CAPCON_CAP2ES_Msk		(0x3UL<<CCP_CAPCON_CAP2ES_Pos)
#define	CCP_CAPCON_CAP1ES_Pos		(2)
#define CCP_CAPCON_CAP1ES_Msk		(0x3UL<<CCP_CAPCON_CAP1ES_Pos)
#define	CCP_CAPCON_CAP0ES_Pos		(0)
#define CCP_CAPCON_CAP0ES_Msk		(0x3UL<<CCP_CAPCON_CAP0ES_Pos)
/* ========================================================  CAPCHS  ========================================================= */
#define	CCP_CAPCHS_ECAPS_Pos		(16)
#define CCP_CAPCHS_ECAPS_Msk		(0x1UL<<CCP_CAPCHS_ECAPS_Pos)
#define	CCP_CAPCHS_CAP3CHS_Pos		(12)
#define CCP_CAPCHS_CAP3CHS_Msk		(0xfUL<<CCP_CAPCHS_CAP3CHS_Pos)
#define	CCP_CAPCHS_CAP2CHS_Pos		(8)
#define CCP_CAPCHS_CAP2CHS_Msk		(0xfUL<<CCP_CAPCHS_CAP2CHS_Pos)
#define	CCP_CAPCHS_CAP1CHS_Pos		(4)
#define CCP_CAPCHS_CAP1CHS_Msk		(0xfUL<<CCP_CAPCHS_CAP1CHS_Pos)
#define	CCP_CAPCHS_CAP0CHS_Pos		(0)
#define CCP_CAPCHS_CAP0CHS_Msk		(0xfUL<<CCP_CAPCHS_CAP0CHS_Pos)
/* =======================================================  CAP0DAT0  ======================================================== */
#define	CCP_CAP0DAT_CAP_Pos			(16)
#define CCP_CAP0DAT_CAP_Msk			(0xffffUL<<CCP_CAP0DAT_CAP_Pos)
#define	CCP_CAP0DAT_DAT_Pos			(0)
#define CCP_CAP0DAT_DAT_Msk			(0xffffUL<<CCP_CAP0DAT_DAT_Pos)
/* =======================================================  CAP1DAT0  ======================================================== */
#define	CCP_CAP1DAT_CAP_Pos			(16)
#define CCP_CAP1DAT_CAP_Msk			(0xffffUL<<CCP_CAP1DAT_CAP_Pos)
#define	CCP_CAP1DAT_DAT_Pos			(0)
#define CCP_CAP1DAT_DAT_Msk			(0xffffUL<<CCP_CAP1DAT_DAT_Pos)
/* =======================================================  CAP2DAT0  ======================================================== */
#define	CCP_CAP2DAT_CAP_Pos			(16)
#define CCP_CAP2DAT_CAP_Msk			(0xffffUL<<CCP_CAP2DAT_CAP_Pos)
#define	CCP_CAP2DAT_DAT_Pos			(0)
#define CCP_CAP2DAT_DAT_Msk			(0xffffUL<<CCP_CAP2DAT_DAT_Pos)
/* =======================================================  CAP3DAT0  ======================================================== */
#define	CCP_CAP3DAT_CAP_Pos			(16)
#define CCP_CAP3DAT_CAP_Msk			(0xffffUL<<CCP_CAP3DAT_CAP_Pos)
#define	CCP_CAP3DAT_DAT_Pos			(0)
#define CCP_CAP3DAT_DAT_Msk			(0xffffUL<<CCP_CAP3DAT_DAT_Pos)

/* =========================================================================================================================== */
/* ================                                           UART0                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  UART0RBR  ======================================================== */
/* =======================================================  UART0THR  ======================================================== */
/* =======================================================  UART0DLR  ======================================================== */
/* =======================================================  UART0IER  ======================================================== */
//#define	UART_IER_CTSIE_Pos				(7)
//#define UART_IER_CTSIE_Msk				(0x1UL<<UART_IER_CTSIE_Pos)
//#define	UART_IER_RTSIE_Pos				(6)
//#define UART_IER_RTSIE_Msk				(0x1UL<<UART_IER_RTSIE_Pos)
//#define	UART_IER_XOFIE_Pos				(5)
//#define UART_IER_XOFIE_Msk				(0x1UL<<UART_IER_XOFIE_Pos)
//#define	UART_IER_MDSIE_Pos				(3)
//#define UART_IER_MDSIE_Msk				(0x1UL<<UART_IER_MDSIE_Pos)
#define	UART_IER_RLSIE_Pos				(2)
#define UART_IER_RLSIE_Msk				(0x1UL<<UART_IER_RLSIE_Pos)
#define	UART_IER_THREIE_Pos				(1)
#define UART_IER_THREIE_Msk				(0x1UL<<UART_IER_THREIE_Pos)
#define	UART_IER_RBREIE_Pos				(0)
#define UART_IER_RBREIE_Msk				(0x1UL<<UART_IER_RBREIE_Pos)

/* =======================================================  UART0IIR  ======================================================== */
//#define	UART_IIR_INTHFC_Pos				(5)
//#define UART_IIR_INTHFC_Msk				(0x1UL<<UART_IIR_INTHFC_Pos)
//#define	UART_IIR_INTSFC_Pos				(4)
//#define UART_IIR_INTSFC_Msk				(0x1UL<<UART_IIR_INTSFC_Pos)
#define	UART_IIR_INTID_Pos				(1)
#define UART_IIR_INTID_Msk				(0x7UL<<UART_IIR_INTID_Pos)
#define	UART_IIR_INTSTATUS_Pos			(0)
#define UART_IIR_INTSTATUS_Msk			(0x1UL<<UART_IIR_INTSTATUS_Pos)

/* =======================================================  UART0FCR  ======================================================== */
//#define	UART_FCR_RXTL_Pos				(6)
//#define UART_FCR_RXTL_Msk				(0x3UL<<UART_FCR_RXTL_Pos)
//#define	UART_FCR_TXTL_Pos				(4)
//#define UART_FCR_TXTL_Msk				(0x3UL<<UART_FCR_TXTL_Pos)
//#define	UART_FCR_TXFIFORST_Pos			(2)
//#define UART_FCR_TXFIFORST_Msk			(0x1UL<<UART_FCR_TXFIFORST_Pos)
//#define	UART_FCR_RXFIFORST_Pos			(1)
//#define UART_FCR_RXFIFORST_Msk			(0x1UL<<UART_FCR_RXFIFORST_Pos)
//#define	UART_FCR_FIFOEN_Pos				(0)
//#define UART_FCR_FIFOEN_Msk				(0x1UL<<UART_FCR_FIFOEN_Pos)

/* =======================================================  UART0LCR  ======================================================== */
#define	UART_LCR_BCON_Pos				(6)
#define UART_LCR_BCON_Msk				(0x1UL<<UART_LCR_BCON_Pos)
#define	UART_LCR_PSEL_Pos				(4)
#define UART_LCR_PSEL_Msk				(0x3UL<<UART_LCR_PSEL_Pos)
#define	UART_LCR_PEN_Pos				(3)
#define UART_LCR_PEN_Msk				(0x1UL<<UART_LCR_PEN_Pos)
#define	UART_LCR_SBS_Pos				(2)
#define UART_LCR_SBS_Msk				(0x1UL<<UART_LCR_SBS_Pos)
#define	UART_LCR_WLS_Pos				(0)
#define UART_LCR_WLS_Msk				(0x3UL<<UART_LCR_WLS_Pos)

/* =======================================================  UART0MCR  ======================================================== */
//#define	UART_MCR_XOFFS_Pos				(7)
//#define UART_MCR_XOFFS_Msk				(0x1UL<<UART_MCR_XOFFS_Pos)
//#define	UART_MCR_IREN_Pos				(6)
//#define UART_MCR_IREN_Msk				(0x1UL<<UART_MCR_IREN_Pos)
#define	UART_MCR_MLBM_Pos				(4)
#define UART_MCR_MLBM_Msk				(0x1UL<<UART_MCR_MLBM_Pos)
//#define	UART_MCR_RTS_Pos				(1)
//#define UART_MCR_RTS_Msk				(0x1UL<<UART_MCR_RTS_Pos)

/* =======================================================  UART0LSR  ======================================================== */
//#define	UART_LSR_RXFE_Pos				(7)
//#define UART_LSR_RXFE_Msk				(0x1UL<<UART_LSR_RXFE_Pos)
#define	UART_LSR_TEMT_Pos				(6)
#define UART_LSR_TEMT_Msk				(0x1UL<<UART_LSR_TEMT_Pos)
#define	UART_LSR_THRE_Pos				(5)
#define UART_LSR_THRE_Msk				(0x1UL<<UART_LSR_THRE_Pos)
#define	UART_LSR_BI_Pos					(4)
#define UART_LSR_BI_Msk					(0x1UL<<UART_LSR_BI_Pos)
#define	UART_LSR_FE_Pos					(3)
#define UART_LSR_FE_Msk					(0x1UL<<UART_LSR_FE_Pos)
#define	UART_LSR_PE_Pos					(2)
#define UART_LSR_PE_Msk					(0x1UL<<UART_LSR_PE_Pos)
//#define	UART_LSR_OE_Pos					(1)
//#define UART_LSR_OE_Msk					(0x1UL<<UART_LSR_OE_Pos)
#define	UART_LSR_RDR_Pos				(0)
#define UART_LSR_RDR_Msk				(0x1UL<<UART_LSR_RDR_Pos)

/* =======================================================  UART0MSR  ======================================================== */
//#define	UART_MSR_CTS_Pos				(4)
//#define UART_MSR_CTS_Msk				(0x1UL<<UART_MSR_CTS_Pos)
//#define	UART_MSR_DCTS_Pos				(0)
//#define UART_MSR_DCTS_Msk				(0x1UL<<UART_MSR_DCTS_Pos)

/* =======================================================  UART0SCR  ======================================================== */
/* =======================================================  UART0EFR  ======================================================== */
//#define	UART_EFR_AUTOCTS_Pos			(7)
//#define UART_EFR_AUTOCTS_Msk			(0x1UL<<UART_EFR_AUTOCTS_Pos)
//#define	UART_EFR_AUTORTS_Pos			(6)
//#define UART_EFR_AUTORTS_Msk			(0x1UL<<UART_EFR_AUTORTS_Pos)
//#define	UART_EFR_AUTOIEN_Pos			(4)
//#define UART_EFR_AUTOIEN_Msk			(0x1UL<<UART_EFR_AUTOIEN_Pos)
//#define	UART_EFR_TXSWFC_Pos				(2)
//#define UART_EFR_TXSWFC_Msk				(0x3UL<<UART_EFR_TXSWFC_Pos)
//#define	UART_EFR_RXSWFC_Pos				(0)
//#define UART_EFR_RXSWFC_Msk				(0x3UL<<UART_EFR_RXSWFC_Pos)

/* =======================================================  UART0XON1  ======================================================= */
/* =======================================================  UART0XON2  ======================================================= */
/* ======================================================  UART0XOFF1  ======================================================= */
/* ======================================================  UART0XOFF2  ======================================================= */


/* =========================================================================================================================== */
/* ================                                           I2C0                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  I2CCONSET  ======================================================= */
#define	I2C_CONSSET_GCF_Pos				(8)
#define I2C_CONSSET_GCF_Msk				(0x1UL<<I2C_CONSSET_GCF_Pos)
#define	I2C_CONSSET_I2CIE_Pos			(7)
#define I2C_CONSSET_I2CIE_Msk			(0x1UL<<I2C_CONSSET_I2CIE_Pos)
#define	I2C_CONSSET_I2CEN_Pos			(6)
#define I2C_CONSSET_I2CEN_Msk			(0x1UL<<I2C_CONSSET_I2CEN_Pos)
#define	I2C_CONSSET_STA_Pos				(5)
#define I2C_CONSSET_STA_Msk				(0x1UL<<I2C_CONSSET_STA_Pos)
#define	I2C_CONSSET_STO_Pos				(4)
#define I2C_CONSSET_STO_Msk				(0x1UL<<I2C_CONSSET_STO_Pos)
#define	I2C_CONSSET_SI_Pos				(3)
#define I2C_CONSSET_SI_Msk				(0x1UL<<I2C_CONSSET_SI_Pos)
#define	I2C_CONSSET_AA_Pos				(2)
#define I2C_CONSSET_AA_Msk				(0x1UL<<I2C_CONSSET_AA_Pos)
#define	I2C_CONSSET_XADRF_Pos			(1)
#define I2C_CONSSET_XADRF_Msk			(0x1UL<<I2C_CONSSET_XADRF_Pos)
#define	I2C_CONSSET_ADRF_Pos			(0)
#define I2C_CONSSET_ADRF_Msk			(0x1UL<<I2C_CONSSET_ADRF_Pos)
/* =======================================================  I2CCONCLR  ======================================================= */
#define	I2C_CONSCLR_I2CIEC_Pos			(7)
#define I2C_CONSCLR_I2CIEC_Msk			(0x1UL<<I2C_CONSCLR_I2CIEC_Pos)
#define	I2C_CONSCLR_I2CENC_Pos			(6)
#define I2C_CONSCLR_I2CEMC_Msk			(0x1UL<<I2C_CONSCLR_I2CENC_Pos)
#define	I2C_CONSCLR_STAC_Pos			(5)
#define I2C_CONSCLR_STAC_Msk			(0x1UL<<I2C_CONSCLR_STAC_Pos)
#define	I2C_CONSCLR_SIC_Pos				(3)
#define I2C_CONSCLR_SIC_Msk				(0x1UL<<I2C_CONSCLR_SIC_Pos)
#define	I2C_CONSCLR_AAC_Pos				(2)
#define I2C_CONSCLR_AAC_Msk				(0x1UL<<I2C_CONSCLR_AAC_Pos)
/* ========================================================  I2CSTAT  ======================================================== */
#define	I2C_STAT_STATUS_Pos				(0)
#define I2C_STAT_STATUS_Msk				(0xFUL<<I2C_STAT_STATUS_Pos)
/* ========================================================  I2CDAT  ========================================================= */
/* ========================================================  I2CCLK  ========================================================= */
/* ========================================================  I2CADR0  ======================================================== */
/* ========================================================  I2CADM0  ======================================================== */
/* =======================================================  I2CXADR0  ======================================================== */
/* =======================================================  I2CXADM0  ======================================================== */
/* ========================================================  I2CRST  ========================================================= */
/* ========================================================  I2CADR1  ======================================================== */
/* ========================================================  I2CADM1  ======================================================== */
/* ========================================================  I2CADR2  ======================================================== */
/* ========================================================  I2CADM2  ======================================================== */
/* ========================================================  I2CADR3  ======================================================== */
/* ========================================================  I2CADM3  ======================================================== */


/* =========================================================================================================================== */
/* ================                                           SSP0                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  SSPCON  ========================================================= */
#define	SSP_CON_LBM_Pos				(11)
#define SSP_CON_LBM_Msk				(0x1UL<<SSP_CON_LBM_Pos)
#define	SSP_CON_SSPEN_Pos			(10)
#define SSP_CON_SSPEN_Msk			(0x1UL<<SSP_CON_SSPEN_Pos)
#define	SSP_CON_MS_Pos				(9)
#define SSP_CON_MS_Msk				(0x1UL<<SSP_CON_MS_Pos)
//#define	SSP_CON_SOD_Pos				(8)
//#define SSP_CON_SOD_Msk				(0x1UL<<SSP_CON_SOD_Pos)
#define	SSP_CON_CPH_Pos				(7)
#define SSP_CON_CPH_Msk				(0x1UL<<SSP_CON_CPH_Pos)
#define	SSP_CON_CPO_Pos				(6)
#define SSP_CON_CPO_Msk				(0x1UL<<SSP_CON_CPO_Pos)
#define	SSP_CON_FRF_Pos				(4)
#define SSP_CON_FRF_Msk				(0x3UL<<SSP_CON_FRF_Pos)
#define	SSP_CON_DSS_Pos				(0)
#define SSP_CON_DSS_Msk				(0xFUL<<SSP_CON_DSS_Pos)
/* ========================================================  SSPSTAT  ======================================================== */
#define	SSP_STAT_BSY_Pos			(4)
#define SSP_STAT_BSY_Msk			(0x1UL<<SSP_STAT_BSY_Pos)
#define	SSP_STAT_RFF_Pos			(3)
#define SSP_STAT_RFF_Msk			(0x1UL<<SSP_STAT_RFF_Pos)
#define	SSP_STAT_RNE_Pos			(2)
#define SSP_STAT_RNE_Msk			(0x1UL<<SSP_STAT_RNE_Pos)
#define	SSP_STAT_TNF_Pos			(1)
#define SSP_STAT_TNF_Msk			(0x1UL<<SSP_STAT_TNF_Pos)
#define	SSP_STAT_TFE_Pos			(0)
#define SSP_STAT_TFE_Msk			(0x1UL<<SSP_STAT_TFE_Pos)

/* ========================================================  SSPDAT  ========================================================= */
/* ========================================================  SSPCLK  ========================================================= */
/* ========================================================  SSPIMSC  ======================================================== */
/* ========================================================  SSPRIS  ========================================================= */
/* ========================================================  SSPMIS  ========================================================= */
/* ========================================================  SSPICLR  ======================================================== */
/* ========================================================  SSPCSCR  ======================================================== */
//#define	SSP_CSCR_SPH_Pos			(4)
//#define SSP_CSCR_SPH_Msk			(0x1UL<<SSP_CSCR_SPH_Pos)
#define	SSP_CSCR_SWCS_Pos			(3)
#define SSP_CSCR_SWCS_Msk			(0x1UL<<SSP_CSCR_SWCS_Pos)
#define	SSP_CSCR_SWSEL_Pos			(2)
#define SSP_CSCR_SWSEL_Msk			(0x1UL<<SSP_CSCR_SWSEL_Pos)


/* =========================================================================================================================== */
/* ================                                            ADC                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  ADCCON  ========================================================= */
#define	ADC_CON_ADCRST_Pos				(31)
#define ADC_CON_ADCRST_Msk				(0x1UL<<ADC_CON_ADCRST_Pos)
#define	ADC_CON_ADMODE10_Pos			(24)
#define ADC_CON_ADMODE10_Msk			(0x3UL<<ADC_CON_ADMODE10_Pos)
#define	ADC_CON_ADCNSMP_Pos			(16)
#define ADC_CON_ADCNSMP_Msk			(0xffUL<<ADC_CON_ADCNSMP_Pos)
#define	ADC_CON_ADCHSMODE_Pos			(15)
#define ADC_CON_ADCHSMODE_Msk			(0x1UL<<ADC_CON_ADCHSMODE_Pos)
#define	ADC_CON_ADCSWCHE_Pos			(13)
#define ADC_CON_ADCSWCHE_Msk			(0x1UL<<ADC_CON_ADCSWCHE_Pos)
#define	ADC_CON_ADCNDISEN_Pos			(12)
#define ADC_CON_ADCNDISEN_Msk			(0x1UL<<ADC_CON_ADCNDISEN_Pos)
#define	ADC_CON_ADCNDISTS_Pos			(8)
#define ADC_CON_ADCNDISTS_Msk			(0xFUL<<ADC_CON_ADCNDISTS_Pos)
#define	ADC_CON_ADCVS_Pos				(6)
#define ADC_CON_ADCVS_Msk				(0x3UL<<ADC_CON_ADCVS_Pos)
//#define	ADC_CON_ADCVG_Pos				(5)
//#define ADC_CON_ADCVG_Msk				(0x1UL<<ADC_CON_ADCVG_Pos)
#define	ADC_CON_ADCEN_Pos				(4)
#define ADC_CON_ADCEN_Msk				(0x1UL<<ADC_CON_ADCEN_Pos)
#define	ADC_CON_ADCMS_Pos				(3)
#define ADC_CON_ADCMS_Msk				(0x1UL<<ADC_CON_ADCMS_Pos)
#define	ADC_CON_ADCDIV_Pos				(0)
#define ADC_CON_ADCDIV_Msk				(0x3UL<<ADC_CON_ADCDIV_Pos)

/* ========================================================  ADCCON2  ======================================================== */
#define	ADC_CON2_ADCICHS_Pos			(13)
#define ADC_CON2_ADCICHS_Msk			(0x7UL<<ADC_CON2_ADCICHS_Pos)
#define	ADC_CON2_ADCSF4_Pos			(12)
#define ADC_CON2_ADCSF4_Msk			(0x1UL<<ADC_CON2_ADCSF4_Pos)
#define	ADC_CON2_ADCSF3_Pos			(11)
#define ADC_CON2_ADCSF3_Msk			(0x1UL<<ADC_CON2_ADCSF3_Pos)
#define	ADC_CON2_ADCSF2_Pos			(10)
#define ADC_CON2_ADCSF2_Msk			(0x1UL<<ADC_CON2_ADCSF2_Pos)
#define	ADC_CON2_ADCSF1_Pos			(9)
#define ADC_CON2_ADCSF1_Msk			(0x1UL<<ADC_CON2_ADCSF1_Pos)
#define	ADC_CON2_ADCSF0_Pos			(8)
#define ADC_CON2_ADCSF0_Msk			(0x1UL<<ADC_CON2_ADCSF0_Pos)
#define	ADC_CON2_ADCST_Pos				(7)
#define ADC_CON2_ADCST_Msk				(0x1UL<<ADC_CON2_ADCST_Pos)
#define	ADC_CON2_ADCSMPWAIT_Pos		(6)
#define ADC_CON2_ADCSMPWAIT_Msk		(0x1UL<<ADC_CON2_ADCSMPWAIT_Pos)
#define	ADC_CON2_BG2ADSEL_Pos		(5)
#define ADC_CON2_BG2ADSEL_Msk		(0x1UL<<ADC_CON2_BG2ADSEL_Pos)
#define	ADC_CON2_ADCSWCHS_Pos			(0)
#define ADC_CON2_ADCSWCHS_Msk			(0x1FUL<<ADC_CON2_ADCSWCHS_Pos)

/* ========================================================  ADCHWTG  ======================================================== */
//#define	ADC_HWTG_ADCEXTEN_Pos			(17)
//#define ADC_HWTG_ADCEXTEN_Msk			(0x1UL<<ADC_HWTG_ADCEXTEN_Pos)
//#define	ADC_HWTG_ADCEXTES_Pos			(16)
//#define ADC_HWTG_ADCEXTES_Msk			(0x1UL<<ADC_HWTG_ADCEXTES_Pos)
#define	ADC_HWTG_ADCINTTGEN_Pos		(15)
#define ADC_HWTG_ADCINTTGEN_Msk		(0x1UL<<ADC_HWTG_ADCINTTGEN_Pos)
#define	ADC_HWTG_ADCINTTGSS_Pos		(12)
#define ADC_HWTG_ADCINTTGSS_Msk		(0x7UL<<ADC_HWTG_ADCINTTGSS_Pos)
#define	ADC_HWTG_ADCPTG1DLYEN_Pos		(11)
#define ADC_HWTG_ADCPTG1DLYEN_Msk		(0x1UL<<ADC_HWTG_ADCPTG1DLYEN_Pos)
#define	ADC_HWTG_ADCPTG0DLYEN_Pos		(10)
#define ADC_HWTG_ADCPTG0DLYEN_Msk		(0x1UL<<ADC_HWTG_ADCPTG0DLYEN_Pos)
#define	ADC_HWTG_ADCPTG1EN_Pos			(9)
#define ADC_HWTG_ADCPTG1EN_Msk			(0x1UL<<ADC_HWTG_ADCPTG1EN_Pos)
#define	ADC_HWTG_ADCPTG0EN_Pos			(8)
#define ADC_HWTG_ADCPTG0EN_Msk			(0x1UL<<ADC_HWTG_ADCPTG0EN_Pos)
#define	ADC_HWTG_ADCEPWMTEN_Pos		(7)
#define ADC_HWTG_ADCEPWMTEN_Msk		(0x1UL<<ADC_HWTG_ADCEPWMTEN_Pos)
#define	ADC_HWTG_ADCEPWMTSS_Pos		(4)
#define ADC_HWTG_ADCEPWMTSS_Msk		(0x7UL<<ADC_HWTG_ADCEPWMTSS_Pos)
#define	ADC_HWTG_ADCEPWMTPS_Pos		(0)
#define ADC_HWTG_ADCPEWMTPS_Msk		(0x3UL<<ADC_HWTG_ADCEPWMTPS_Pos)

/* ======================================================  ADCPWMTGDLY  ====================================================== */
/* ========================================================  ADCTEST  ======================================================== */
#define	ADC_TEST_ADCSWT_Pos			(24)
#define ADC_TEST_ADCSWT_Msk			(0xFFUL<<ADC_TEST_ADCSWT_Pos)

/* ========================================================  ADCCMP0  ======================================================== */
#define	ADC_CMP_ADCCMPEN_Pos			(31)
#define ADC_CMP_ADCCMPEN_Msk			(0x1UL<<ADC_CMP_ADCCMPEN_Pos)
#define	ADC_CMP_ADCCMPO_Pos			(30)
#define ADC_CMP_ADCCMPO_Msk			(0x1UL<<ADC_CMP_ADCCMPO_Pos)
#define	ADC_CMP_ADCCMPCOND_Pos			(28)
#define ADC_CMP_ADCCMPCOND_Msk			(0x1UL<<ADC_CMP_ADCCMPCOND_Pos)
#define	ADC_CMP_ADCCMPMCNT_Pos			(24)
#define ADC_CMP_ADCCMPMCNT_Msk			(0xFUL<<ADC_CMP_ADCCMPMCNT_Pos)
#define	ADC_CMP_ADCCMPCHS_Pos			(16)
#define ADC_CMP_ADCCMPCHS_Msk			(0x1FUL<<ADC_CMP_ADCCMPCHS_Pos)
#define	ADC_CMP_ADCCMPDATA_Pos			(0)
#define ADC_CMP_ADCCMPDATA_Msk			(0xFFFUL<<ADC_CMP_ADCCMPCHS_Pos)

/* ========================================================  ADCIMSC  ======================================================== */
#define	ADC_IMSC_IMSC31_Pos			(31)
#define ADC_IMSC_IMSC31_Msk			(0x1UL<<ADC_IMSC_IMSC31_Pos)

/* ========================================================  ADCRIS  ========================================================= */
#define	ADC_RIS_RIS31_Pos				(31)
#define ADC_RIS_RIS31_Msk				(0x1UL<<ADC_RIS_RIS31_Pos)

/* ========================================================  ADCMIS  ========================================================= */
#define	ADC_MIS_MIS31_Pos				(31)
#define ADC_MIS_MIS31_Msk				(0x1UL<<ADC_MIS_MIS31_Pos)

/* ========================================================  ADCICLR  ======================================================== */
#define	ADC_ICLR_ICLR31_Pos			(31)
#define ADC_ICLR_ICLR31_Msk			(0x1UL<<ADC_ICLR_ICLR31_Pos)
/* ========================================================  ADCLOCK  ======================================================== */
/* =======================================================  ADCCHEPWM  ======================================================= */
/* =======================================================  ADCCHPTG0  ======================================================= */
/* =======================================================  ADCCHPTG1  ======================================================= */
/* =======================================================  ADCDATA0  ======================================================== */
/* =======================================================  ADCDATA1  ======================================================== */
/* =======================================================  ADCDATA2  ======================================================== */
/* =======================================================  ADCDATA3  ======================================================== */
/* =======================================================  ADCDATA4  ======================================================== */
/* =======================================================  ADCDATA5  ======================================================== */
/* =======================================================  ADCDATA6  ======================================================== */
/* =======================================================  ADCDATA7  ======================================================== */
/* =======================================================  ADCDATA8  ======================================================== */
/* =======================================================  ADCDATA9  ======================================================== */
/* =======================================================  ADCDATA10  ======================================================= */
/* =======================================================  ADCDATA11  ======================================================= */
/* =======================================================  ADCDATA12  ======================================================= */
/* =======================================================  ADCDATA13  ======================================================= */
/* =======================================================  ADCDATA14  ======================================================= */
/* =======================================================  ADCDATA15  ======================================================= */
/* =======================================================  ADCDATA16  ======================================================= */
/* =======================================================  ADCDATA17  ======================================================= */
/* =======================================================  ADCDATA18  ======================================================= */
/* =======================================================  ADCDATA19  ======================================================= */
/* =======================================================  ADCDATA20  ======================================================= */
/* =======================================================  ADCDATA21  ======================================================= */
/* =======================================================  ADCDATA22  ======================================================= */
/* =======================================================  ADCDATA23  ======================================================= */

/* =========================================================================================================================== */
/* ================                                          ADCLDO                                           ================ */
/* =========================================================================================================================== */
/* ========================================================  ADCLDO CON0  ======================================================== */
#define	ADCLDO_CON0_ADJ_Pos			(16)
#define ADCLDO_CON0_ADJ_Msk			(0x1FUL<<ADCLDO_CON0_ADJ_Pos)
#define	ADCLDO_CON0_EN_Pos			(8)
#define ADCLDO_CON0_EN_Msk			(0x1UL<<ADCLDO_CON0_EN_Pos)
#define	ADCLDO_CON0_SEL_Pos			(0)
#define ADCLDO_CON0_SEL_Msk			(0xFFUL<<ADCLDO_CON0_SEL_Pos)

/* =========================================================  CON0  ========================================================== */
/* =========================================================  LOCK  ========================================================== */


/* =========================================================================================================================== */
/* ================                                          DIVSQRT                                          ================ */
/* =========================================================================================================================== */

/* ==========================================================  CON  ========================================================== */
#define DIVSQRT_CON_MODE_Pos		(4)
#define DIVSQRT_CON_MODE_Msk		(0x1UL<<DIVSQRT_CON_MODE_Pos)
#define DIVSQRT_CON_READY_Pos		(3)
#define DIVSQRT_CON_READY_Msk		(0x1UL<<DIVSQRT_CON_READY_Pos)
#define DIVSQRT_CON_DIVBY0_Pos		(2)
#define DIVSQRT_CON_DIVBY0_Msk		(0x1UL<<DIVSQRT_CON_DIVBY0_Pos)
#define DIVSQRT_CON_SIGN_Pos		(1)
#define DIVSQRT_CON_SIGN_Msk		(0x1UL<<DIVSQRT_CON_SIGN_Pos)
/* =========================================================  ALUA  ========================================================== */
/* =========================================================  ALUB  ========================================================== */
/* =========================================================  RES0  ========================================================== */
/* =========================================================  RES1  ========================================================== */

/* =========================================================================================================================== */
/* ================                                            DAC                                            ================ */
/* =========================================================================================================================== */
#define	DAC_CON0_EN_Pos			 (8)
#define DAC_CON0_EN_Msk			(0x1UL<<DAC_CON0_EN_Pos)
#define	DAC_CON0_S_Pos			 (0)
#define DAC_CON0_S_Msk			(0xFFUL<<DAC_CON0_S_Pos)

/* =========================================================  CON0  ========================================================== */
/* =========================================================  LOCK  ========================================================== */


/* =========================================================================================================================== */
/* ================                                           PGA0                                            ================ */
/* =========================================================================================================================== */

/* =======================================================  PGAxCON0  ======================================================== */
#define	PGA_CON_EN_Pos					(7)
#define PGA_CON_EN_Msk					(0x1UL<<PGA_CON_EN_Pos)
#define	PGA_CON_PS_Pos					(0)
#define PGA_CON_PS_Msk					(0x7UL<<PGA_CON_PS_Pos)

/* =======================================================  PGA0CON0  ======================================================== */
#define	PGA_CON_MD_Pos					(5)
#define PGA_CON_MD_Msk					(0x1UL<<PGA_CON_MD_Pos)
#define	PGA_CON_VRef_Pos				(4)
#define PGA_CON_VRef_Msk				(0x1UL<<PGA_CON_VRef_Pos)  //PGA1 and PGA2 has no this function

/* =======================================================  PGA12CON0  ======================================================== */
#define	PGA_PGA12CON_MD_Pos					(4)
#define PGA_PGA12CON_MD_Msk					(0x1UL<<PGA_PGA12CON_MD_Pos)


/* =======================================================  PGA0CON1  ======================================================== */
#define	PGA_CON1_LPEN_Pos					(4)
#define PGA_CON1_LPEN_Msk					(0x1UL<<PGA_CON1_LPEN_Pos)
#define	PGA_CON1_OTEN_Pos					(3)
#define PGA_CON1_OTEN_Msk					(0x1UL<<PGA_CON1_OTEN_Pos)
#define	PGA_CON1_SELR_Pos					(0)
#define PGA_CON1_SELR_Msk					(0x1UL<<PGA_CON1_SELR_Pos)

/* =======================================================  PGA12CON0  ======================================================== */
#define	PGA_PGA12_OEN_Pos					(17)
#define PGA_PGA12_OEN_Msk					(0x1UL<<PGA_PGA12_OEN_Pos)
#define	PGA_PGA12_OS_Pos					(16)
#define PGA_PGA12_OS_Msk					(0x1UL<<PGA_PGA12_OS_Pos)
#define	PGA_PGA12_VREF_Pos				(0)
#define PGA_PGA12_VREF_Msk				(0x1UL<<PGA_PGA12_VREF_Pos)
/* =======================================================  PGA0CON1  ======================================================== */
/* =======================================================  PGA0LOCK  ======================================================== */


/* =========================================================================================================================== */
/* ================                                           PGA12                                           ================ */
/* =========================================================================================================================== */

/* =======================================================  PGA1CON0  ======================================================== */
/* =======================================================  PGA2CON0  ======================================================== */
/* =======================================================  PGA12CON  ======================================================== */
/* =======================================================  PGA12LOCK  ======================================================= */


/* =========================================================================================================================== */
/* ================                                           ACMP                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  C0CON0  ========================================================= */
#define	ACMP_C0CON0_ZXD_Pos					(16)
#define ACMP_C0CON0_ZXD_Msk					(0x1UL<<ACMP_C0CON0_ZXD_Pos)
#define	ACMP_C0CON0_EN_Pos					(15)
#define ACMP_C0CON0_EN_Msk					(0x1UL<<ACMP_C0CON0_EN_Pos)
#define	ACMP_C0CON0_OEN_Pos			  	(14)
#define ACMP_C0CON0_OEN_Msk				  (0x1UL<<ACMP_C0CON0_OEN_Pos)
#define	ACMP_C0CON0_C0OUT_Pos				(8)
#define ACMP_C0CON0_C0OUT_Msk				(0x1UL<<ACMP_C0CON0_C0OUT_Pos)
#define	ACMP_C0CON0_PS_Pos					(4)
#define ACMP_C0CON0_PS_Msk					(0x7UL<<ACMP_C0CON0_PS_Pos)
#define	ACMP_C0CON0_NS_Pos					(0)
#define ACMP_C0CON0_NS_Msk					(0x3UL<<ACMP_C0CON0_NS_Pos)
/* ========================================================  C0CON1  ========================================================= */
#define	ACMP_C0CON1_HYSPN_Pos				(12)
#define ACMP_C0CON1_HYSPN_Msk				(0x3UL<<ACMP_C0CON1_HYSPN_Pos)
#define	ACMP_C0CON1_HYSV_Pos				(10)
#define ACMP_C0CON1_HYSV_Msk				(0x3UL<<ACMP_C0CON1_HYSV_Pos)
#define	ACMP_C0CON1_POS_Pos					(9)
#define ACMP_C0CON1_POS_Msk					(0x1UL<<ACMP_C0CON1_POS_Pos)
#define	ACMP_C0CON1_FE_Pos					(8)
#define ACMP_C0CON1_FE_Msk					(0x1UL<<ACMP_C0CON1_FE_Pos)
#define	ACMP_C0CON1_FS_Pos					(0)
#define ACMP_C0CON1_FS_Msk					(0xFUL<<ACMP_C0CON1_FS_Pos)
/* ========================================================  C0CON2  ========================================================= */
//#define	ACMP_C0CON2_HYSLS_Pos				(12)
//#define ACMP_C0CON2_HYSLS_Msk				(0x3UL<<ACMP_C0CON2_HYSLS_Pos)
//#define	ACMP_C0CON2_HYSVS_Pos				(10)
//#define ACMP_C0CON2_HYSVS_Msk				(0x3UL<<ACMP_C0CON2_HYSVS_Pos)
//#define	ACMP_C0CON2_POS_Pos					(9)
//#define ACMP_C0CON2_POS_Msk					(0x1UL<<ACMP_C0CON2_POS_Pos)
//#define	ACMP_C0CON2_FE_Pos					(8)
//#define ACMP_C0CON2_FE_Msk					(0x1UL<<ACMP_C0CON2_FE_Pos)
//#define	ACMP_C0CON2_FS_Pos					(0)
//#define ACMP_C0CON2_FS_Msk					(0xFUL<<ACMP_C0CON2_FS_Pos)
/* ========================================================  C0ADJE  ========================================================= */
/* ========================================================  C1CON0  ========================================================= */
#define	ACMP_C1CON0_EN_Pos					(15)
#define ACMP_C1CON0_EN_Msk					(0x1UL<<ACMP_C1CON0_EN_Pos)
#define	ACMP_C1CON0_OEN_Pos				  (14)
#define ACMP_C1CON0_OEN_Msk				  (0x1UL<<ACMP_C1CON0_OEN_Pos)
//#define	ACMP_C1CON0_N2GND_Pos				(13)
//#define ACMP_C1CON0_N2GND_Msk				(0x1UL<<ACMP_C1CON0_N2GND_Pos)
#define	ACMP_C1CON0_C1OUT_Pos				(8)
#define ACMP_C1CON0_C1OUT_Msk				(0x1UL<<ACMP_C1CON0_C1OUT_Pos)
#define	ACMP_C1CON0_PS_Pos					(4)
#define ACMP_C1CON0_PS_Msk					(0x7UL<<ACMP_C1CON0_PS_Pos)
//#define	ACMP_C1CON0_C1N1S_Pos				(2)
//#define ACMP_C1CON0_C1N1S_Msk				(0x1UL<<ACMP_C1CON0_C1N1S_Pos)
#define	ACMP_C1CON0_NS_Pos					(0)
#define ACMP_C1CON0_NS_Msk					(0x3UL<<ACMP_C1CON0_NS_Pos)
/* ========================================================  C1CON1  ========================================================= */
#define	ACMP_C1CON1_HYSPN_Pos				(12)
#define ACMP_C1CON1_HYSPN_Msk				(0x3UL<<ACMP_C1CON1_HYSPN_Pos)
#define	ACMP_C1CON1_HYSV_Pos				(10)
#define ACMP_C1CON1_HYSV_Msk				(0x3UL<<ACMP_C1CON1_HYSV_Pos)
#define	ACMP_C1CON1_POS_Pos					(9)
#define ACMP_C1CON1_POS_Msk					(0x1UL<<ACMP_C1CON1_POS_Pos)
#define	ACMP_C1CON1_FE_Pos					(8)
#define ACMP_C1CON1_FE_Msk					(0x1UL<<ACMP_C1CON1_FE_Pos)
#define	ACMP_C1CON1_FS_Pos					(0)
#define ACMP_C1CON1_FS_Msk					(0x1FUL<<ACMP_C1CON1_FS_Pos)
/* ========================================================  C1CON2  ========================================================= */
//#define	ACMP_C1CON2_HYSLS_Pos				(12)
//#define ACMP_C1CON2_HYSLS_Msk				(0x3UL<<ACMP_C1CON2_HYSLS_Pos)
//#define	ACMP_C1CON2_HYSVS_Pos				(10)
//#define ACMP_C1CON2_HYSVS_Msk				(0x3UL<<ACMP_C1CON2_HYSVS_Pos)
//#define	ACMP_C1CON2_POS_Pos					(9)
//#define ACMP_C1CON2_POS_Msk					(0x1UL<<ACMP_C1CON2_POS_Pos)
//#define	ACMP_C1CON2_FE_Pos					(8)
//#define ACMP_C1CON2_FE_Msk					(0x1UL<<ACMP_C1CON2_FE_Pos)
//#define	ACMP_C1CON2_FS_Pos					(0)
//#define ACMP_C1CON2_FS_Msk					(0xFUL<<ACMP_C1CON2_FS_Pos)
/* ========================================================  C1ADJE  ========================================================= */
/* ========================================================  CVRCON  ========================================================= */
//#define	ACMP_CVRCON_CSVR_Pos				(4)
//#define ACMP_CVRCON_CSVR_Msk				(0x3UL<<ACMP_CVRCON_CSVR_Pos)
//#define	ACMP_CVRCON_CVS_Pos					(0)
//#define ACMP_CVRCON_CVS_Msk					(0xFUL<<ACMP_CVRCON_CVS_Pos)
/* ========================================================  CVECON  ========================================================= */
#define	ACMP_CEVCON_EVE1_Pos				(5)
#define ACMP_CEVCON_EVE1_Msk				(0x1UL<<ACMP_CEVCON_EVE1_Pos)
#define	ACMP_CEVCON_EVE0_Pos				(4)
#define ACMP_CEVCON_EVE0_Msk				(0x1UL<<ACMP_CEVCON_EVE0_Pos)
#define	ACMP_CEVCON_EVS1_Pos				(2)
#define ACMP_CEVCON_EVS1_Msk				(0x3UL<<ACMP_CEVCON_EVS1_Pos)
#define	ACMP_CEVCON_EVS0_Pos				(0)
#define ACMP_CEVCON_EVS0_Msk				(0x3UL<<ACMP_CEVCON_EVS0_Pos)
/* =========================================================  IMSC  ========================================================== */
#define	ACMP_IMSC_C1IF_Pos					(1)
#define ACMP_IMSC_C1IF_Msk					(0x1UL<<ACMP_IMSC_C1IF_Pos)
#define	ACMP_IMSC_C0IF_Pos					(0)
#define ACMP_IMSC_C0IF_Msk					(0x1UL<<ACMP_IMSC_C0IF_Pos)
/* ==========================================================  RIS  ========================================================== */
#define	ACMP_RIS_C1IF_Pos					(1)
#define ACMP_RIS_C1IF_Msk					(0x1UL<<ACMP_RIS_C1IF_Pos)
#define	ACMP_RIS_C0IF_Pos					(0)
#define ACMP_RIS_C0IF_Msk					(0x1UL<<ACMP_RIS_C0IF_Pos)
/* ==========================================================  MIS  ========================================================== */
#define	ACMP_MIS_C1IF_Pos					(1)
#define ACMP_MIS_C1IF_Msk					(0x1UL<<ACMP_MIS_C1IF_Pos)
#define	ACMP_MIS_C0IF_Pos					(0)
#define ACMP_MIS_C0IF_Msk					(0x1UL<<ACMP_MIS_C0IF_Pos)
/* =========================================================  ICLR  ========================================================== */
#define	ACMP_ICLR_C1IF_Pos					(1)
#define ACMP_ICLR_C1IF_Msk					(0x1UL<<ACMP_ICLR_C1IF_Pos)
#define	ACMP_ICLR_C0IF_Pos					(0)
#define ACMP_ICLR_C0IF_Msk					(0x1UL<<ACMP_ICLR_C0IF_Pos)
/* =========================================================  LOCK  ========================================================== */


/* =========================================================================================================================== */
/* ================                                            INT                                            ================ */
/* =========================================================================================================================== */



/* =========================================================================================================================== */
/* ================                                           INTM                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  EGP0  ========================================================== */
#define INTM_EGP0_EGP0_Pos                (0UL)                     /*!< INTM EGP0: EGP0 (Bit 0)                               */
#define INTM_EGP0_EGP0_Msk                (0x1UL)                   /*!< INTM EGP0: EGP0 (Bitfield-Mask: 0x01)                 */
#define INTM_EGP0_EGP1_Pos                (1UL)                     /*!< INTM EGP0: EGP1 (Bit 1)                               */
#define INTM_EGP0_EGP1_Msk                (0x2UL)                   /*!< INTM EGP0: EGP1 (Bitfield-Mask: 0x01)                 */
#define INTM_EGP0_EGP2_Pos                (2UL)                     /*!< INTM EGP0: EGP2 (Bit 2)                               */
#define INTM_EGP0_EGP2_Msk                (0x4UL)                   /*!< INTM EGP0: EGP2 (Bitfield-Mask: 0x01)                 */
#define INTM_EGP0_EGP3_Pos                (3UL)                     /*!< INTM EGP0: EGP3 (Bit 3)                               */
#define INTM_EGP0_EGP3_Msk                (0x8UL)                   /*!< INTM EGP0: EGP3 (Bitfield-Mask: 0x01)                 */
/* =========================================================  EGN0  ========================================================== */
#define INTM_EGN0_EGN0_Pos                (0UL)                     /*!< INTM EGN0: EGN0 (Bit 0)                               */
#define INTM_EGN0_EGN0_Msk                (0x1UL)                   /*!< INTM EGN0: EGN0 (Bitfield-Mask: 0x01)                 */
#define INTM_EGN0_EGN1_Pos                (1UL)                     /*!< INTM EGN0: EGN1 (Bit 1)                               */
#define INTM_EGN0_EGN1_Msk                (0x2UL)                   /*!< INTM EGN0: EGN1 (Bitfield-Mask: 0x01)                 */
#define INTM_EGN0_EGN2_Pos                (2UL)                     /*!< INTM EGN0: EGN2 (Bit 2)                               */
#define INTM_EGN0_EGN2_Msk                (0x4UL)                   /*!< INTM EGN0: EGN2 (Bitfield-Mask: 0x01)                 */
#define INTM_EGN0_EGN3_Pos                (3UL)                     /*!< INTM EGN0: EGN3 (Bit 3)                               */
#define INTM_EGN0_EGN3_Msk                (0x8UL)                   /*!< INTM EGN0: EGN3 (Bitfield-Mask: 0x01)                 */


/* =========================================================================================================================== */
/* ================                                           MISC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  NFEN0  ========================================================= */
//#define MISC_NFEN0_SNFEN00_Pos            (0UL)                     /*!< MISC NFEN0: SNFEN00 (Bit 0)                           */
//#define MISC_NFEN0_SNFEN00_Msk            (0x1UL)                   /*!< MISC NFEN0: SNFEN00 (Bitfield-Mask: 0x01)             */
//#define MISC_NFEN0_SNFEN10_Pos            (2UL)                     /*!< MISC NFEN0: SNFEN10 (Bit 2)                           */
//#define MISC_NFEN0_SNFEN10_Msk            (0x4UL)                   /*!< MISC NFEN0: SNFEN10 (Bitfield-Mask: 0x01)             */
//#define MISC_NFEN0_SNFEN20_Pos            (4UL)                     /*!< MISC NFEN0: SNFEN20 (Bit 4)                           */
//#define MISC_NFEN0_SNFEN20_Msk            (0x10UL)                  /*!< MISC NFEN0: SNFEN20 (Bitfield-Mask: 0x01)             */
/* =========================================================  NFEN1  ========================================================= */
#define MISC_NFEN1_TNFEN00_Pos            (0UL)                     /*!< MISC NFEN1: TNFEN00 (Bit 0)                           */
#define MISC_NFEN1_TNFEN00_Msk            (0x1UL)                   /*!< MISC NFEN1: TNFEN00 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN1_TNFEN01_Pos            (1UL)                     /*!< MISC NFEN1: TNFEN01 (Bit 1)                           */
#define MISC_NFEN1_TNFEN01_Msk            (0x2UL)                   /*!< MISC NFEN1: TNFEN01 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN1_TNFEN02_Pos            (2UL)                     /*!< MISC NFEN1: TNFEN02 (Bit 2)                           */
#define MISC_NFEN1_TNFEN02_Msk            (0x4UL)                   /*!< MISC NFEN1: TNFEN02 (Bitfield-Mask: 0x01)             */
#define MISC_NFEN1_TNFEN03_Pos            (3UL)                     /*!< MISC NFEN1: TNFEN03 (Bit 3)                           */
#define MISC_NFEN1_TNFEN03_Msk            (0x8UL)                   /*!< MISC NFEN1: TNFEN03 (Bitfield-Mask: 0x01)             */
/* =========================================================  NFEN2  ========================================================= */
//#define MISC_NFEN2_TNFEN10_Pos            (0UL)                     /*!< MISC NFEN2: TNFEN10 (Bit 0)                           */
//#define MISC_NFEN2_TNFEN10_Msk            (0x1UL)                   /*!< MISC NFEN2: TNFEN10 (Bitfield-Mask: 0x01)             */
//#define MISC_NFEN2_TNFEN11_Pos            (1UL)                     /*!< MISC NFEN2: TNFEN11 (Bit 1)                           */
//#define MISC_NFEN2_TNFEN11_Msk            (0x2UL)                   /*!< MISC NFEN2: TNFEN11 (Bitfield-Mask: 0x01)             */
//#define MISC_NFEN2_TNFEN12_Pos            (2UL)                     /*!< MISC NFEN2: TNFEN12 (Bit 2)                           */
//#define MISC_NFEN2_TNFEN12_Msk            (0x4UL)                   /*!< MISC NFEN2: TNFEN12 (Bitfield-Mask: 0x01)             */
//#define MISC_NFEN2_TNFEN13_Pos            (3UL)                     /*!< MISC NFEN2: TNFEN13 (Bit 3)                           */
//#define MISC_NFEN2_TNFEN13_Msk            (0x8UL)                   /*!< MISC NFEN2: TNFEN13 (Bitfield-Mask: 0x01)             */
/* ==========================================================  ISC  ========================================================== */
#define MISC_ISC_SSIE00_Pos               (7UL)                     /*!< MISC ISC: SSIE00 (Bit 7)                              */
#define MISC_ISC_SSIE00_Msk               (0x80UL)                  /*!< MISC ISC: SSIE00 (Bitfield-Mask: 0x01)                */
/* =========================================================  TIOS0  ========================================================= */
/* =========================================================  TIOS1  ========================================================= */
/* =========================================================  RTCCL  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            FMC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  FLSTS  ========================================================= */
#define FMC_FLSTS_OVF_Pos                 (0UL)                     /*!< FMC FLSTS: OVF (Bit 0)                                */
#define FMC_FLSTS_OVF_Msk                 (0x1UL)                   /*!< FMC FLSTS: OVF (Bitfield-Mask: 0x01)                  */
#define FMC_FLSTS_EVF_Pos                 (2UL)                     /*!< FMC FLSTS: EVF (Bit 2)                                */
#define FMC_FLSTS_EVF_Msk                 (0x4UL)                   /*!< FMC FLSTS: EVF (Bitfield-Mask: 0x01)                  */
/* ========================================================  FLOPMD1  ======================================================== */
/* ========================================================  FLOPMD2  ======================================================== */
/* ========================================================  FLERMD  ========================================================= */
/* =======================================================  FLCERCNT  ======================================================== */
/* =======================================================  FLSERCNT  ======================================================== */
/* =======================================================  FLNVSCNT  ======================================================== */
/* =======================================================  FLPROCNT  ======================================================== */
/* ========================================================  FLPROT  ========================================================= */
/* =======================================================  FLPRVCNT  ======================================================== */
/* =======================================================  FLERVCNT  ======================================================== */


/* =========================================================================================================================== */
/* ================                                            SAF                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  CRC0CTL  ======================================================== */
#define SAF_CRC0CTL_CRC0EN_Pos            (7UL)                     /*!< SAF CRC0CTL: CRC0EN (Bit 7)                           */
#define SAF_CRC0CTL_CRC0EN_Msk            (0x80UL)                  /*!< SAF CRC0CTL: CRC0EN (Bitfield-Mask: 0x01)             */
#define SAF_CRC0CTL_CRCCHK60_Pos          (6UL)                     /*!< SAF CRC0CTL: CRCCHK60 (Bit 6)                           */
#define SAF_CRC0CTL_CRCCHK60_Msk          (0x40UL)                  /*!< SAF CRC0CTL: CRCCHK60             */
#define SAF_CRC0CTL_FEA_Pos               (0UL)                     /*!< SAF CRC0CTL: FEA (Bit 0)                              */
#define SAF_CRC0CTL_FEA_Msk               (0x7UL)                  /*!< SAF CRC0CTL: FEA (Bitfield-Mask: 0x7f)                */
/* ========================================================  PGCRCL  ========================================================= */
/* =========================================================  CRCIN  ========================================================= */
/* =========================================================  CRCD  ========================================================== */
/* ========================================================  RPECTL  ========================================================= */
#define SAF_RPECTL_RPEF_Pos               (0UL)                     /*!< SAF RPECTL: RPEF (Bit 0)                              */
#define SAF_RPECTL_RPEF_Msk               (0x1UL)                   /*!< SAF RPECTL: RPEF (Bitfield-Mask: 0x01)                */
#define SAF_RPECTL_RPERDIS_Pos            (7UL)                     /*!< SAF RPECTL: RPERDIS (Bit 7)                           */
#define SAF_RPECTL_RPERDIS_Msk            (0x80UL)                  /*!< SAF RPECTL: RPERDIS (Bitfield-Mask: 0x01)             */
/* =========================================================  SFRGD  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            CRC                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  CRCD  ========================================================== */
/* =========================================================  CRCIN  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            DBG                                            ================ */
/* =========================================================================================================================== */

/* ========================================================  DBGSTR  ========================================================= */
#define DBG_DBGSTR_CDBGPWRUPACK_Pos       (29UL)                    /*!< DBG DBGSTR: CDBGPWRUPACK (Bit 29)                     */
#define DBG_DBGSTR_CDBGPWRUPACK_Msk       (0x20000000UL)            /*!< DBG DBGSTR: CDBGPWRUPACK (Bitfield-Mask: 0x01)        */
#define DBG_DBGSTR_CDBGPWRUPREQ_Pos       (28UL)                    /*!< DBG DBGSTR: CDBGPWRUPREQ (Bit 28)                     */
#define DBG_DBGSTR_CDBGPWRUPREQ_Msk       (0x10000000UL)            /*!< DBG DBGSTR: CDBGPWRUPREQ (Bitfield-Mask: 0x01)        */
/* =======================================================  DBGSTOPCR  ======================================================= */
#define DBG_DBGSTOPCR_SWDIS_Pos           (24UL)                    /*!< DBG DBGSTOPCR: SWDIS (Bit 24)                         */
#define DBG_DBGSTOPCR_SWDIS_Msk           (0x1000000UL)             /*!< DBG DBGSTOPCR: SWDIS (Bitfield-Mask: 0x01)            */
#define DBG_DBGSTOPCR_RPERMSK_Pos         (16UL)                    /*!< DBG DBGSTOPCR: RPERMSK (Bit 16)                       */
#define DBG_DBGSTOPCR_RPERMSK_Msk         (0x10000UL)               /*!< DBG DBGSTOPCR: RPERMSK (Bitfield-Mask: 0x01)          */
#define DBG_DBGSTOPCR_RESMSK_Pos          (2UL)                     /*!< DBG DBGSTOPCR: RESMSK (Bit 2)                         */
#define DBG_DBGSTOPCR_RESMSK_Msk          (0x4UL)                   /*!< DBG DBGSTOPCR: RESMSK (Bitfield-Mask: 0x01)           */
#define DBG_DBGSTOPCR_FRZEN1_Pos          (1UL)                     /*!< DBG DBGSTOPCR: FRZEN1 (Bit 1)                         */
#define DBG_DBGSTOPCR_FRZEN1_Msk          (0x2UL)                   /*!< DBG DBGSTOPCR: FRZEN1 (Bitfield-Mask: 0x01)           */
#define DBG_DBGSTOPCR_FRZEN0_Pos          (0UL)                     /*!< DBG DBGSTOPCR: FRZEN0 (Bit 0)                         */
#define DBG_DBGSTOPCR_FRZEN0_Msk          (0x1UL)                   /*!< DBG DBGSTOPCR: FRZEN0 (Bitfield-Mask: 0x01)           */


/* =========================================================================================================================== */
/* ================                                            BGR                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  VBG85  ========================================================= */
/* =========================================================  VBG25  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            TSN                                            ================ */
/* =========================================================================================================================== */

/* =========================================================  TSN85  ========================================================= */
/* =========================================================  TSN25  ========================================================= */


/* =========================================================================================================================== */
/* ================                                            UID                                            ================ */
/* =========================================================================================================================== */

/* ==========================================================  UID  ========================================================== */
#define assert_param(expr) ((void)0)
/** @} */ /* End of group PosMask_peripherals */


#ifdef __cplusplus
}
#endif

#endif /* CMS32X506_H */


